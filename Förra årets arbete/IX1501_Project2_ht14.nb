(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    181869,       4581]
NotebookOptionsPosition[    120419,       3390]
NotebookOutlinePosition[    172530,       4321]
CellTagsIndexPosition[    172487,       4318]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["II",
  FontFamily->"Times New Roman"],
 ". Normal Distribution"
}], "Title"],

Cell["\<\
KTH/ICT:IX1501 - Statistics
G\[ODoubleDot]ran Andersson, goeran@kth.se
ver. 141126\
\>", "Text",
 CellMargins->{{27, 10}, {0, 0}},
 FontFamily->"Times New Roman",
 FontSize->10],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ". Implementation and Assessment"
}], "Section"],

Cell["\<\
The course includes two-three project tasks on a total of 4 hp. Data shall be \
recorded in writing and orally. They will be given a summary grade in scale \
A-F. The assessment includes how many project tasks which have been resolved, \
the quality and the implementation of the written and oral presentation. The \
first two tasks rating E. If you've been approved at the scheduled \
examination of these, you can at the end of the course, choose to account for \
a third project task for a higher grade. In general, excellent performance \
increases the grade one step.\
\>", "Text"],

Cell["\<\
In this project task you will work in a group of two and solve a mathematical \
task, write a report (Swedish or English) in Mathematica and prepare a short \
oral presentation (Swedish or English).\
\>", "Text"],

Cell["\<\
Carefully read the following information so that you know which rules apply \
and what is expected of you.\
\>", "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Report"
}], "Subsection"],

Cell["The report should be written in Mathematica and contain", "Text"],

Cell[CellGroupData[{

Cell["a summary containing the results of resolved parts", "Item"],

Cell["separate sections for each part containing e.g.", "Item"],

Cell[CellGroupData[{

Cell["mathematical formulas and equations", "Subitem"],

Cell["a brief discussion ", "Subitem"],

Cell["explanatory diagrams", "Subitem"],

Cell["your conclusions.", "Subitem"]
}, Open  ]],

Cell["\<\
separate code section (do not mix code and text with conclusions and results)\
\>", "Item"]
}, Open  ]],

Cell["\<\
The report will normally be sent by email to teacher/teachers one-two days \
prior to the examination (see 1.4 below). Your emailed report should be \
printed on paper and submitted at examination. Type the names and email \
addresses on the first page.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Oral Presentation"
}], "Subsection"],

Cell[TextData[{
 "You should prepare an oral presentation of your solution to the task. The \
presentation will be carried out with your own laptop and ",
 StyleBox["should not take more than five minutes",
  FontSlant->"Italic"],
 ", effective time. A computer projector will be available at the \
presentation. Please carefully consider your presentation, what is important, \
in what order and how it will be illustrated. Practice the presentation in \
advance and make sure to meet the time frame. One of you in the group (of \
two) will be selected randomly for the oral presentation and the other part \
will be selected for questioning."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Rules"
}], "Subsection"],

Cell[TextData[{
 "The task is considered ",
 StyleBox["individually",
  FontSlant->"Italic"],
 " and ",
 StyleBox["assumes that you have full knowledge of all the material you are \
presenting",
  FontSlant->"Italic"],
 ". In order to be approved, then you have solved the task and be able to \
explain the entire task and solution. "
}], "Text"],

Cell["\<\
To account for the task that you do not have solved is considered cheating. \
It is also cheating to copy the solution or part of a solution from another. \
If two solutions are presented as (partially) copies they are rejected both. \
\>", "Text"],

Cell["\<\
If the solution contains parts, e.g. background material, which you do not \
have produced, you must clearly indicate this and indicate the source.\
\>", "Text"],

Cell["\<\
Suspicion of cheating or misleading can be reported to the Disciplinary Board.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Examination"
}], "Subsection"],

Cell[CellGroupData[{

Cell["\<\
The examination takes place according to the booking in Daisy.\
\>", "Item"],

Cell["\<\
Application for examination will be open in Daisy two days in advance.\
\>", "Item"],

Cell["\<\
The report shall be sent via email to Haris Celik, harisc@kth.se, before \
2014-11-04, 13:00.\
\>", "Item"],

Cell["\<\
A printed copy of the report must be submitted at examination. Don\
\[CloseCurlyQuote]t print the code section.\
\>", "Item"],

Cell["\<\
If you do not present the project tasks in time, an extra examination (grade \
E only) will be offered in connection with the examination on the course. \
\>", "Item"],

Cell["\<\
On subsequent accounting, next time the course is given, most recently \
published project task is considered. This may mean that you have to solve \
another task.\
\>", "Item"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ". Preparations"
}], "Section"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Study"
}], "Subsection"],

Cell["\<\
Read the following chapters in the course book (Blom). A \[FilledSmallCircle] \
means read carefully and a \[EmptySmallCircle] means glance through.\
\>", "Text"],

Cell[CellGroupData[{

Cell["4.1-4, 4.5, 4.7", "SubitemParagraph",
 CellDingbat->"\[EmptySmallCircle]"],

Cell["5.1-3, 5.5", "SubitemParagraph",
 CellDingbat->"\[FilledSmallCircle]"],

Cell["5.6", "SubitemParagraph",
 CellDingbat->"\[EmptySmallCircle]"],

Cell["6.1-5, 6.7", "SubitemParagraph",
 CellDingbat->"\[FilledSmallCircle]"],

Cell["7.1-4", "SubitemParagraph",
 CellDingbat->"\[FilledSmallCircle]"]
}, Open  ]],

Cell["\<\
Hint: Also study the notebooks from the lectures. These contain Mathematica \
code on how to handle rvs.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Convolution"
}], "Subsection"],

Cell[TextData[{
 "In this project task we will focus on a ",
 StyleBox["sum of independent stochastic variables",
  FontWeight->"Bold"],
 " (or random variables, rvs). In some cases, it is possible to determine the \
correct probability distribution. In other cases you have to rely on \
approximations."
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 ".",
 
 CounterBox["Subsubsection"],
 " Theory for Discrete RVS"
}], "Subsubsection"],

Cell[TextData[{
 "The distribution of a sum of two independent discrete rvs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicS]", "=", 
    RowBox[{"\[GothicX]", "+", "\[GothicY]"}]}], TraditionalForm]]],
 " can be determined by the following reasoning. If the sum ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicS]", "=", "s"}], TraditionalForm]]],
 " and we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicX]", "=", "i"}], TraditionalForm]]],
 " then ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicY]", "=", 
    RowBox[{"s", "-", "i"}]}], TraditionalForm]]],
 ". Since  ",
 Cell[BoxData[
  FormBox["\[GothicX]", TraditionalForm]]],
 " and  ",
 Cell[BoxData[
  FormBox["\[GothicY]", TraditionalForm]]],
 " are independent the probability is"
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"P", "(", 
    RowBox[{"\[GothicX]", "=", 
     RowBox[{
      RowBox[{"i", "\[Intersection]", "\[GothicY]"}], "=", 
      RowBox[{"s", "-", "i"}]}]}], ")"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"P", "(", 
      RowBox[{"\[GothicX]", "=", "i"}], ")"}], 
     RowBox[{"P", "(", 
      RowBox[{"\[GothicY]", "=", 
       RowBox[{"s", "-", "i"}]}], ")"}]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["pf", "\[GothicX]"], "(", "i", ")"}], 
     RowBox[{
      SubscriptBox["pf", "\[GothicY]"], "(", 
      RowBox[{"s", "-", "i"}], ")"}]}]}]}], 
  TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 "If we add up all the possible values for ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " we get the probability of that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicS]", "=", "s"}], TraditionalForm]]]
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"P", "(", 
    RowBox[{"\[GothicS]", "=", "s"}], ")"}], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["pf", "\[GothicCapitalS]"], "(", "s", ")"}], "=", 
    RowBox[{
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{"\[ForAll]", "i"}]], 
      RowBox[{
       RowBox[{
        SubscriptBox["pf", "\[GothicX]"], "(", "i", ")"}], 
       RowBox[{
        SubscriptBox["pf", "\[GothicY]"], "(", 
        RowBox[{"s", "-", "i"}], ")"}]}]}], "=", 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{"\[ForAll]", "i"}]], 
      RowBox[{
       RowBox[{
        SubscriptBox["pf", "\[GothicX]"], "(", 
        RowBox[{"s", "-", "i"}], ")"}], 
       RowBox[{
        SubscriptBox["pf", "\[GothicY]"], "(", "i", ")"}]}]}]}]}]}], 
  TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 "This sum is called the ",
 StyleBox["convolution",
  FontWeight->"Bold"],
 ", often written with a star as an operator: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["pf", "\[GothicS]"], "(", "s", ")"}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["pf", "\[GothicX]"], "\[Star]", 
       SubscriptBox["pf", "\[GothicY]"]}], ")"}], 
     RowBox[{"(", "s", ")"}]}]}], TraditionalForm]]],
 ". In order to retrieve all the values in the sum the index should cover (at \
least) all values of the union of the sample spaces of ",
 Cell[BoxData[
  FormBox["\[GothicX]", TraditionalForm]]],
 " and  ",
 "\[GothicY]",
 ", i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", "\[Element]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[CapitalOmega]", "\[GothicX]"], "\[Union]", 
      SubscriptBox["\[CapitalOmega]", "\[GothicY]"]}], "}"}]}], 
   TraditionalForm]]],
 "."
}], "Text"],

Cell[TextData[{
 "If we would like to continue with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicV]", "=", 
    RowBox[{"\[GothicX]", "+", "\[GothicY]", "+", "\[GothicZ]"}]}], 
   TraditionalForm]]],
 "  we can consider ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicV]", "=", 
    RowBox[{"\[GothicS]", "+", "\[GothicZ]"}]}], TraditionalForm]]],
 " and use the convolution sum for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicS]", "+", "\[GothicZ]"}], TraditionalForm]]],
 "."
}], "Text",
 CellDingbat->"\[Therefore]"],

Cell[TextData[{
 "Now, assume that all rvs ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[GothicX]", "i"], TraditionalForm]]],
 " are ",
 StyleBox["i",
  FontWeight->"Bold"],
 "ndependent ",
 StyleBox["i",
  FontWeight->"Bold"],
 "dentical ",
 StyleBox["d",
  FontWeight->"Bold"],
 "istributed (iid) and introduce a variable ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " for the number of rvs in the sum. We want to get the probability function "
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["pf", "n"], "(", "s", ")"}], "=", 
   RowBox[{"P", "(", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      SubscriptBox["\[GothicX]", "i"]}], "=", "s"}], ")"}]}], 
  TraditionalForm]], "DisplayFormula"],

Cell["A convenient way here is to make a recursive definition:", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["pf", "n"], "(", "s", ")"}], "=", 
   RowBox[{
    UnderscriptBox["\[Sum]", 
     RowBox[{"\[ForAll]", "i"}]], 
    RowBox[{
     RowBox[{
      SubscriptBox["pf", "1"], "(", 
      RowBox[{"s", "-", "i"}], ")"}], 
     RowBox[{
      SubscriptBox["pf", 
       RowBox[{"n", "-", "1"}]], "(", "i", ")"}]}]}]}], 
  TraditionalForm]], "DisplayFormula",
 UnderscriptBoxOptions->{LimitsPositioning->False}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 ".",
 
 CounterBox["Subsubsection"],
 " Discrete Examples"
}], "Subsubsection"],

Cell[TextData[{
 "The recurrence above can be programmed (see ",
 ButtonBox["Functions That Remember Values They Have Found",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/FunctionsThatRememberValuesTheyHaveFound"],
 "). However, in some cases you can use ",
 Cell[BoxData[
  ButtonBox["TransformedDistribution",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/TransformedDistribution"]]],
 ", ",
 Cell[BoxData[
  ButtonBox["DiscreteConvolve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/DiscreteConvolve"]]],
 " or ",
 Cell[BoxData[
  ButtonBox["ListConvolve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ListConvolve"]]],
 "."
}], "Text"],

Cell[TextData[{
 "Notice that when you use discrete distributions in Mathematica the ",
 Cell[BoxData[
  ButtonBox["PDF",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PDF"]]],
 " actually means the probability function (pf). This means that ",
 StyleBox["PDF[\[ScriptCapitalD],x]", "Output"],
 " expresses a probability (not a probability density as in the continuous \
case)."
}], "Text",
 CellDingbat->"\[FivePointedStar]"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"x", "=", 
     RowBox[{"a", "+", "1"}]}], "b"], 
   RowBox[{"PDF", "[", 
    RowBox[{"\[ScriptCapitalD]", ",", "x"}], "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{"\[ScriptCapitalD]", ",", "b"}], "]"}], "-", 
   RowBox[{"CDF", "[", 
    RowBox[{"\[ScriptCapitalD]", ",", "a"}], "]"}]}], "\[Equal]", 
  RowBox[{"Probability", "[", 
   RowBox[{
    RowBox[{"a", "<", "X", "\[LessEqual]", "b"}], ",", 
    RowBox[{"X", "\[Distributed]", "\[ScriptCapitalD]"}]}], 
   "]"}]}]], "Program"],

Cell[TextData[{
 "Notice also that in the discrete case the ",
 Cell[BoxData[
  FormBox[Cell["pf"], TraditionalForm]]],
 " is a discrete function while the ",
 Cell[BoxData[
  FormBox["cdf", TraditionalForm]]],
 " is a (piecewise) continuous function."
}], "Text"],

Cell["Example 1", "Text",
 CellDingbat->"\[EmptyCircle]"],

Cell[TextData[{
 "Here's an example of the sum ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "=", 
    RowBox[{"X", "+", "Y"}]}], TraditionalForm]]],
 " of two uniformly distributed discrete rvs."
}], "Text"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalX]", "=", 
   RowBox[{"DiscreteUniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "7"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[ScriptCapitalY]", "=", 
   RowBox[{"DiscreteUniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"10", ",", "15"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalOmega]", "=", 
  RowBox[{"Union", "[", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"3", ",", "7"}], "]"}], ",", 
    RowBox[{"Range", "[", 
     RowBox[{"10", ",", "15"}], "]"}]}], "]"}]}]}], "Input"],

Cell[TextData[{
 "We can use ",
 Cell[BoxData[
  ButtonBox["TransformedDistribution",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/TransformedDistribution"]]],
 " in order to compute the distribution of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "=", 
    RowBox[{"X", "+", "Y"}]}], TraditionalForm]]],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalS]", "=", 
   RowBox[{"TransformedDistribution", "[", 
    RowBox[{
     RowBox[{"X", "+", "Y"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X", "\[Distributed]", "\[ScriptCapitalX]"}], ",", 
       RowBox[{"Y", "\[Distributed]", "\[ScriptCapitalY]"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input"],

Cell["The probability of getting the sum 15 is", "Text"],

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{"\[ScriptCapitalS]", ",", "15"}], "]"}]], "Input"],

Cell[TextData[{
 "We can also compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["pf", "X"], "\[Star]", 
      SubscriptBox["pf", "Y"]}], ")"}], 
    RowBox[{"(", "15", ")"}]}], TraditionalForm]]],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{"\[ScriptCapitalX]", ",", " ", "i"}], "]"}], " ", 
    RowBox[{"PDF", "[", 
     RowBox[{"\[ScriptCapitalY]", ",", " ", 
      RowBox[{"15", " ", "-", " ", "i"}]}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "\[CapitalOmega]"}], "}"}]}], "]"}]], "Input"],

Cell["Calculation by hand:", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"P", "(", 
    RowBox[{"S", "=", "15"}], ")"}], "=", 
   RowBox[{
    FractionBox[
     SubscriptBox["n", "fav"], 
     SubscriptBox["n", "tot"]], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"\[LeftBracketingBar]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "11"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "10"}], "}"}]}], "}"}], "\[RightBracketingBar]"}], 
      RowBox[{"5", "\[Times]", "6"}]], "=", 
     RowBox[{
      FractionBox["3", "30"], "=", 
      FractionBox["1", "10"]}]}]}]}], TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 "Here a plot of the ",
 Cell[BoxData[
  FormBox["pf", TraditionalForm]]],
 ":"
}], "Text"],

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"PDF", "[", 
     RowBox[{"\[ScriptCapitalS]", ",", "s"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "10", ",", "25"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "s", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"pf", "[", "s", "]"}], "]"}]}], "}"}]}]}], "]"}]], "Input"],

Cell[TextData[{
 "This plot is equivalent to the discrete plot of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["pf", "X"], "\[Star]", 
      SubscriptBox["pf", "Y"]}], ")"}], 
    RowBox[{"(", "s", ")"}]}], TraditionalForm]]],
 ". Try to also to plot"
}], "Text"],

Cell["\<\
Evaluate[
DiscreteConvolve[PDF[\[ScriptCapitalX], k], PDF[\[ScriptCapitalY], k], k, s]
]\
\>", "Program"],

Cell[TextData[{
 "The probability that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"15", "\[LessEqual]", "S", "\[LessEqual]", "18"}], 
   TraditionalForm]]],
 " is"
}], "Text"],

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"15", "\[LessEqual]", "S", "\[LessEqual]", "18"}], ",", 
   RowBox[{"S", "\[Distributed]", "\[ScriptCapitalS]"}]}], "]"}]], "Input"],

Cell[TextData[{
 "Here a plot of the ",
 Cell[BoxData[
  FormBox["cdf", TraditionalForm]]],
 ":"
}], "Text"],

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"CDF", "[", 
     RowBox[{"\[ScriptCapitalS]", ",", "s"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "10", ",", "25"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "s", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"cdf", "[", "s", "]"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"ExtentSize", "\[Rule]", "Right"}], ",", 
   RowBox[{"ExtentMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Filled\>\"", ",", "\"\<Empty\>\""}], "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", "None"}]}], "]"}]], "Input"],

Cell["Example 2", "Text",
 CellDingbat->"\[EmptyCircle]"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input"],

Cell["\<\
In an amusement park there\[CloseCurlyQuote]s a stand where you can win a \
giant teddy if you pay \[Euro]2 and play ten dice. Now, if the sum is 20 or \
lower or 50 or larger the teddy is yours. What\[CloseCurlyQuote]s the \
expected value you have to pay for the teddy?\
\>", "Text"],

Cell[TextData[{
 "In this case ",
 Cell[BoxData[
  ButtonBox["TransformedDistribution",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/TransformedDistribution"]]],
 " is not very efficient. Since the sample space is finite an efficient \
method is ",
 Cell[BoxData[
  ButtonBox["ListConvolve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ListConvolve"]]],
 " which computes the convolution sum very fast."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "1", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"P", "[", "n", "]"}], "=", 
   RowBox[{"ListConvolve", "[", 
    RowBox[{
     RowBox[{"P", "[", 
      RowBox[{"n", "-", "1"}], "]"}], ",", 
     RowBox[{"P", "[", "1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", "0"}], "]"}]}]}]}], "Input"],

Cell[TextData[{
 "We recognize the probabilities for getting sums ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", ",", "3", ",", "...", ",", "12"}], TraditionalForm]]],
 " if we use two dice:"
}], "Text"],

Cell[BoxData[
 RowBox[{"P", "[", "2", "]"}]], "Input"],

Cell["\<\
The probabilities occurs as positions in a list so we can easily make a \
function of this:\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pf", "[", 
   RowBox[{"n_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"P", "[", "n", "]"}], "\[LeftDoubleBracket]", 
   RowBox[{"s", "-", "n", "+", "1"}], "\[RightDoubleBracket]"}]}]], "Input"],

Cell["The probability of getting the sum 50 in one game is then", "Text"],

Cell[BoxData[
 RowBox[{"pf", "[", 
  RowBox[{"10", ",", "50"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"pf", "[", 
   RowBox[{"10", ",", "50"}], "]"}], "]"}]], "Input"],

Cell["The probability of winning the teddy is", "Text"],

Cell[BoxData[
 RowBox[{"Pwin", "=", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"s", "=", "10"}], "20"], 
    RowBox[{"pf", "[", 
     RowBox[{"10", ",", "s"}], "]"}]}], "+", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"s", "=", "50"}], "60"], 
    RowBox[{"pf", "[", 
     RowBox[{"10", ",", "s"}], "]"}]}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"N", "[", "Pwin", "]"}]], "Input"],

Cell["\<\
The number of trials you loose before you win the teddy is geometric \
distributed. So expected value of the number of games you have to play is\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalG]", "=", 
   RowBox[{"GeometricDistribution", "[", "Pwin", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Egames", "=", 
  RowBox[{
   RowBox[{"Mean", "[", "\[ScriptCapitalG]", "]"}], "+", "1"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["1", "Pwin"], "]"}]], "Input"],

Cell[TextData[{
 "Since you pay ",
 Cell[BoxData[
  FormBox["\[Euro]2", TraditionalForm]]],
 " for each game the expected value you have to pay for the teddy is around ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Euro]2", "\[Times]", "173"}], "=", "\[Euro]346"}], 
   TraditionalForm]]],
 "."
}], "Text"],

Cell[TextData[{
 "Now if the teddy costs ",
 Cell[BoxData[
  FormBox["\[Euro]100", TraditionalForm]]],
 ", what is the probability that you pay less than this if you roll the dice? \
Answering this question is equivalent to the problem of computing the \
probability that the number of losses is less than ",
 Cell[BoxData[
  FormBox["49", TraditionalForm]]],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"CDF", "[", 
   RowBox[{"\[ScriptCapitalG]", ",", "48"}], "]"}], "]"}]], "Input"],

Cell[TextData[{
 "So that\[CloseCurlyQuote]s a fair chance. On the other hand, the \
probability that you pay at least ",
 Cell[BoxData[
  FormBox["\[Euro]100", TraditionalForm]]],
 " is around ",
 Cell[BoxData[
  FormBox[
   RowBox[{"75", "%"}], TraditionalForm]]],
 " and the probability that you pay at least ",
 Cell[BoxData[
  FormBox["\[Euro]200", TraditionalForm]]],
 " is "
}], "Text"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"1", "-", 
   RowBox[{"CDF", "[", 
    RowBox[{"\[ScriptCapitalG]", ",", "99"}], "]"}]}], "]"}]], "Input"],

Cell["\<\
We finish with a plot of the probability function of the sum of ten dice \
(maybe you recognize the shape).\
\>", "Text"],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"pf", "[", 
      RowBox[{"10", ",", "s"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "10", ",", "60"}], "}"}]}], "]"}], "//", 
   "N"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"10", ",", "60"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "s", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"pf", "[", "s", "]"}], "]"}]}], "}"}]}]}], "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 ".",
 
 CounterBox["Subsubsection"],
 " Theory for Continuous RVS"
}], "Subsubsection"],

Cell[TextData[{
 "The distribution of a sum of two independent continuous rvs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicS]", "=", 
    RowBox[{"\[GothicX]", "+", "\[GothicY]"}]}], TraditionalForm]]],
 " can be determined by the following reasoning. If the sum ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicS]", "=", "s"}], TraditionalForm]]],
 " and we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicX]", "=", "t"}], TraditionalForm]]],
 " then ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicY]", "=", 
    RowBox[{"s", "-", "t"}]}], TraditionalForm]]],
 ". Since  ",
 Cell[BoxData[
  FormBox["\[GothicX]", TraditionalForm]]],
 " and  ",
 Cell[BoxData[
  FormBox["\[GothicY]", TraditionalForm]]],
 " are independent the pdf is"
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["pdf", "\[GothicX]"], "(", "i", ")"}], 
   RowBox[{
    SubscriptBox["pdf", "\[GothicY]"], "(", 
    RowBox[{"s", "-", "t"}], ")"}]}], TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 "If we integrate over all the possible values of ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]]],
 ", where the product is nonzero, we get the probability density at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicS]", "=", "s"}], TraditionalForm]]]
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["pdf", "\[GothicS]"], "(", "s", ")"}], "=", 
   RowBox[{
    RowBox[{
     UnderscriptBox["\[Integral]", 
      RowBox[{"\[ForAll]", "t"}]], 
     RowBox[{
      RowBox[{
       SubscriptBox["pdf", "\[GothicX]"], "(", "t", ")"}], 
      RowBox[{
       SubscriptBox["pdf", "\[GothicY]"], "(", 
       RowBox[{"s", "-", "t"}], ")"}], "d", "\[InvisibleSpace]", "t"}]}], "=", 
    RowBox[{
     UnderscriptBox["\[Integral]", 
      RowBox[{"\[ForAll]", "t"}]], 
     RowBox[{
      RowBox[{
       SubscriptBox["pdf", "\[GothicX]"], "(", 
       RowBox[{"s", "-", "t"}], ")"}], 
      RowBox[{
       SubscriptBox["pdf", "\[GothicY]"], "(", "t", ")"}], "d", 
      "\[InvisibleSpace]", "t"}]}]}]}], TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 "This integral is called ",
 StyleBox["convolution",
  FontWeight->"Bold"],
 ", often written with a star ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["pdf", "\[GothicS]"], "(", "s", ")"}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["pdf", "\[GothicX]"], "\[Star]", 
       SubscriptBox["pdf", "\[GothicY]"]}], ")"}], 
     RowBox[{"(", "s", ")"}]}]}], TraditionalForm]]],
 ". In order to retrieve all the values in the integral the variable ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]]],
 " should cover (at least) all values of the union of the sample spaces of ",
 Cell[BoxData[
  FormBox["\[GothicX]", TraditionalForm]]],
 " and  ",
 "\[GothicY]",
 ", i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "\[Element]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[CapitalOmega]", "\[GothicX]"], "\[Union]", 
      SubscriptBox["\[CapitalOmega]", "\[GothicY]"]}], "}"}]}], 
   TraditionalForm]]],
 "."
}], "Text"],

Cell[TextData[{
 "If we would like to continue with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicV]", "=", 
    RowBox[{"\[GothicX]", "+", "\[GothicY]", "+", "\[GothicZ]"}]}], 
   TraditionalForm]]],
 "  we can consider ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicV]", "=", 
    RowBox[{"\[GothicS]", "+", "\[GothicZ]"}]}], TraditionalForm]]],
 " and use the convolution sum for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicS]", "+", "\[GothicZ]"}], TraditionalForm]]],
 "."
}], "Text",
 CellDingbat->"\[Therefore]"],

Cell[TextData[{
 "Now, assume that all rvs ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[GothicX]", "i"], TraditionalForm]]],
 " are iid and introduce a variable ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " for the number of rvs in the sum. A convenient way here is to make a \
recursive definition:"
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["pdf", "n"], "(", "s", ")"}], "=", 
   RowBox[{
    UnderscriptBox["\[Integral]", 
     RowBox[{"\[ForAll]", "t"}]], 
    RowBox[{
     RowBox[{
      SubscriptBox["pdf", "1"], "(", 
      RowBox[{"s", "-", "t"}], ")"}], 
     RowBox[{
      SubscriptBox["pdf", 
       RowBox[{"n", "-", "1"}]], "(", "t", ")"}], "d", "\[InvisibleSpace]", 
     "t"}]}]}], TraditionalForm]], "DisplayFormula",
 UnderscriptBoxOptions->{LimitsPositioning->False}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 ".",
 
 CounterBox["Subsubsection"],
 " Continuous Examples"
}], "Subsubsection"],

Cell[TextData[{
 "The recurrence above can be programmed (see ",
 ButtonBox["Functions That Remember Values They Have Found",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/FunctionsThatRememberValuesTheyHaveFound"],
 "). However, in some cases you can use ",
 Cell[BoxData[
  ButtonBox["TransformedDistribution",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/TransformedDistribution"]]],
 " or ",
 Cell[BoxData[
  ButtonBox["Convolve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Convolve"]]],
 "."
}], "Text"],

Cell[TextData[{
 "Notice that when you use continuous distributions in Mathematica the ",
 Cell[BoxData[
  ButtonBox["PDF",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PDF"]]],
 " means the ",
 StyleBox["p",
  FontWeight->"Bold"],
 "robability ",
 StyleBox["d",
  FontWeight->"Bold"],
 "ensity ",
 StyleBox["f",
  FontWeight->"Bold"],
 "unction. This means that ",
 StyleBox["PDF[\[ScriptCapitalD],x]", "Output"],
 " has to be integrated over some interval in order to express a probability. \
The ",
 Cell[BoxData[
  ButtonBox["CDF",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/CDF"]]],
 " (",
 StyleBox["c",
  FontWeight->"Bold"],
 "umulative ",
 StyleBox["d",
  FontWeight->"Bold"],
 "istribution ",
 StyleBox["f",
  FontWeight->"Bold"],
 "unction) however, expresses probability."
}], "Text",
 CellDingbat->"\[FivePointedStar]"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubsuperscriptBox["\[Integral]", "a", "b"], 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{"\[ScriptCapitalD]", ",", "x"}], "]"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{"\[ScriptCapitalD]", ",", "b"}], "]"}], "-", 
   RowBox[{"CDF", "[", 
    RowBox[{"\[ScriptCapitalD]", ",", "a"}], "]"}]}], "\[Equal]", 
  RowBox[{"Probability", "[", 
   RowBox[{
    RowBox[{"a", "<", "X", "\[LessEqual]", "b"}], ",", 
    RowBox[{"X", "\[Distributed]", "\[ScriptCapitalD]"}]}], 
   "]"}]}]], "Program"],

Cell["Example 1", "Text",
 CellDingbat->"\[EmptyCircle]"],

Cell["\<\
Here's an example of the sum of two uniformly distributed rvs.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalX]", "=", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "7"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[ScriptCapitalY]", "=", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"10", ",", "15"}], "}"}], "]"}]}], ";"}]}], "Input"],

Cell[TextData[{
 "We can use ",
 Cell[BoxData[
  ButtonBox["TransformedDistribution",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/TransformedDistribution"]]],
 " in order to compute the distribution of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "=", 
    RowBox[{"X", "+", "Y"}]}], TraditionalForm]]],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalS]", "=", 
   RowBox[{"TransformedDistribution", "[", 
    RowBox[{
     RowBox[{"X", "+", "Y"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X", "\[Distributed]", "\[ScriptCapitalX]"}], ",", 
       RowBox[{"Y", "\[Distributed]", "\[ScriptCapitalY]"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input"],

Cell[TextData[{
 "The density at ",
 Cell[BoxData[
  FormBox["15", TraditionalForm]]],
 " is"
}], "Text"],

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{"\[ScriptCapitalS]", ",", "15"}], "]"}]], "Input"],

Cell[TextData[{
 "We can also compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["pdf", "X"], "\[Star]", 
      SubscriptBox["pdf", "Y"]}], ")"}], 
    RowBox[{"(", "15", ")"}]}], TraditionalForm]]],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{"\[ScriptCapitalX]", ",", " ", "t"}], "]"}], " ", 
     RowBox[{"PDF", "[", 
      RowBox[{"\[ScriptCapitalY]", ",", " ", 
       RowBox[{"15", " ", "-", "t"}]}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", "3", ",", "7"}], "}"}]}], "]"}], "+", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{"\[ScriptCapitalX]", ",", " ", "t"}], "]"}], " ", 
     RowBox[{"PDF", "[", 
      RowBox[{"\[ScriptCapitalY]", ",", " ", 
       RowBox[{"15", " ", "-", "t"}]}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", "10", ",", "15"}], "}"}]}], "]"}]}]], "Input"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox["pdf", TraditionalForm]]],
 " is"
}], "Text"],

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{"\[ScriptCapitalS]", ",", "s"}], "]"}]], "Input"],

Cell[TextData[{
 "Here a plot of the ",
 Cell[BoxData[
  FormBox["pdf", TraditionalForm]]],
 ":"
}], "Text"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"PDF", "[", 
     RowBox[{"\[ScriptCapitalS]", ",", "s"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "10", ",", "25"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "s", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"pdf", "[", "s", "]"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"Darker", "[", "Red", "]"}], ",", "Thick"}], "]"}]}], ",", 
   RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]], "Input"],

Cell["Try also to plot", "Text"],

Cell["\<\
Evaluate[
Convolve[PDF[\[ScriptCapitalX],t],PDF[\[ScriptCapitalY],t],t,s]
]\
\>", "Program"],

Cell[TextData[{
 "The probability that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"12", "<", "S", "\[LessEqual]", "18"}], TraditionalForm]]],
 " is"
}], "Text"],

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"12", "<", "S", "\[LessEqual]", "18"}], ",", 
   RowBox[{"S", "\[Distributed]", "\[ScriptCapitalS]"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CDF", "[", 
   RowBox[{"\[ScriptCapitalS]", ",", "18"}], "]"}], "-", 
  RowBox[{"CDF", "[", 
   RowBox[{"\[ScriptCapitalS]", ",", "12"}], "]"}]}]], "Input"],

Cell[TextData[{
 "Here a plot of the ",
 Cell[BoxData[
  FormBox["cdf", TraditionalForm]]],
 ":"
}], "Text"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"CDF", "[", 
     RowBox[{"\[ScriptCapitalS]", ",", "s"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "12", ",", "25"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "s", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"cdf", "[", "s", "]"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"Darker", "[", "Red", "]"}], ",", "Thick"}], "]"}]}], ",", 
   RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]], "Input"],

Cell["Example 2", "Text",
 CellDingbat->"\[EmptyCircle]"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "Assume that we consider the sum of ",
 Cell[BoxData[
  FormBox["10", TraditionalForm]]],
 " independent uniform rvs in the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "5"}], "]"}], TraditionalForm]]],
 ". How does the distribution look like?"
}], "Text"],

Cell["We start with one random variable:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalD]1", "=", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "5"}], "}"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{"\[ScriptCapitalD]1", ",", "t"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"p1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{"\[ScriptCapitalD]1", ",", "t"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "1"}], ",", "6"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HoldForm", "[", "t", "]"}], ",", 
       RowBox[{"HoldForm", "[", 
        RowBox[{
         SubscriptBox["pdf", "1"], "[", "t", "]"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Darker", "[", "Red", "]"}], ",", "Thick"}], "]"}]}]}], 
   "]"}]}]], "Input"],

Cell[TextData[{
 "Looking at the sum of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " independent rvs ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox["X", "i"]}], TraditionalForm]]],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["X", "i"], "\[Distributed]", 
    RowBox[{"U", "(", 
     RowBox[{"0", ",", "5"}], ")"}]}], TraditionalForm]]],
 " there is a built-in distribution: ",
 Cell[BoxData[
  ButtonBox["UniformSumDistribution",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/UniformSumDistribution"]]],
 ". "
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalD]", "[", "n_", "]"}], ":=", 
  RowBox[{"UniformSumDistribution", "[", 
   RowBox[{"n", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "5"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"\[ScriptCapitalD]", "[", "2", "]"}], ",", "t"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"p2", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"\[ScriptCapitalD]", "[", "2", "]"}], ",", "t"}], "]"}], "]"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "1"}], ",", "11"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HoldForm", "[", "t", "]"}], ",", 
       RowBox[{"HoldForm", "[", 
        RowBox[{
         SubscriptBox["pdf", "2"], "[", "t", "]"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Darker", "[", "Green", "]"}], ",", "Thick"}], "]"}]}], ",", 
    RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"p3", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"\[ScriptCapitalD]", "[", "3", "]"}], ",", "t"}], "]"}], "]"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "1"}], ",", "16"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HoldForm", "[", "t", "]"}], ",", 
       RowBox[{"HoldForm", "[", 
        RowBox[{
         SubscriptBox["pdf", "3"], "[", "t", "]"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Darker", "[", "Blue", "]"}], ",", "Thick"}], "]"}]}], ",", 
    RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}]], "Input"],

Cell["\<\
And finally the plot of the pdf of ten independent uniform rvs  (maybe you \
recognize the shape). \
\>", "Text"],

Cell[BoxData[
 RowBox[{"p10", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"\[ScriptCapitalD]", "[", "10", "]"}], ",", "t"}], "]"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "1"}], ",", "51"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HoldForm", "[", "t", "]"}], ",", 
       RowBox[{"HoldForm", "[", 
        RowBox[{
         SubscriptBox["pdf", "10"], "[", "t", "]"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
    RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p10", ",", "p3", ",", "p2", ",", "p1", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "t", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{
        SubscriptBox["pdf", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3", ",", "10"}], "}"}]], "[", "t", 
        "]"}], "]"}]}], "}"}]}]}], "]"}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Normal Distribution"
}], "Subsection"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 ".",
 
 CounterBox["Subsubsection"],
 " Theory"
}], "Subsubsection"],

Cell[TextData[{
 "According to the Central Limit Theorem (CLT) a sum ",
 Cell[BoxData[
  FormBox["\[GothicS]", TraditionalForm]]],
 " of independent rvs ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[GothicX]", "i"], TraditionalForm]]],
 " approaches the normal distribution when the number ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " of variables increases."
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SubscriptBox["\[GothicX]", "i"]}], "=", 
    RowBox[{"\[GothicS]", 
     OverscriptBox["\[Distributed]", "CLT"], 
     RowBox[{"N", "(", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}]}]}], ",", " ", 
   RowBox[{"\[Mu]", "=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{"E", "[", 
      SubscriptBox["\[GothicX]", "i"], "]"}]}]}], ",", " ", 
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], 
    OverscriptBox["=", 
     RowBox[{"indep", "."}]], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{"V", "[", 
      SubscriptBox["\[GothicX]", "i"], "]"}]}]}]}], 
  TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 "The average ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[GothicX]", "_"], TraditionalForm]]],
 " satisfies"
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "n"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      SubscriptBox["\[GothicX]", "i"]}]}], "=", 
    RowBox[{
     OverscriptBox["\[GothicX]", "_"], 
     OverscriptBox["\[Distributed]", "CLT"], 
     RowBox[{"N", "(", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}]}]}], ",", " ", 
   RowBox[{"\[Mu]", "=", 
    RowBox[{
     FractionBox["1", "n"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{"E", "[", 
       SubscriptBox["\[GothicX]", "i"], "]"}]}]}]}], ",", " ", 
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], 
    OverscriptBox["=", 
     RowBox[{"indep", "."}]], 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["n", "2"]], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{"V", "[", 
       SubscriptBox["\[GothicX]", "i"], "]"}]}]}]}]}], 
  TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 "If all ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[GothicX]", "i"], TraditionalForm]]],
 " are iid (independent identical distributed) with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Mu]", "=", 
    RowBox[{"E", "[", 
     SubscriptBox["\[GothicX]", "i"], "]"}]}], TraditionalForm]],
  CellChangeTimes->{{3.5251827091027575`*^9, 3.525182760458048*^9}}],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], "=", 
    RowBox[{"V", "[", 
     SubscriptBox["\[GothicX]", "i"], "]"}]}], TraditionalForm]]],
 " we can write"
}], "Text",
 CellDingbat->"\[FivePointedStar]"],

Cell[BoxData[
 FormBox[
  FrameBox[
   RowBox[{
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      SubscriptBox["\[GothicX]", "i"]}], "\[LongEqual]", "\[GothicS]"}], 
    OverscriptBox["\[Distributed]", "CLT"], 
    RowBox[{"N", "(", 
     RowBox[{
      RowBox[{"n", " ", "\[Mu]"}], ",", 
      RowBox[{
       SqrtBox["n"], " ", "\[Sigma]"}]}], ")"}]}],
   FrameStyle->RGBColor[1, 0, 0]], TraditionalForm]], "DisplayFormula"],

Cell[BoxData[
 FormBox[
  FrameBox[
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "n"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       SubscriptBox["\[GothicX]", "i"]}]}], "\[LongEqual]", 
     OverscriptBox["\[GothicX]", "_"]}], 
    OverscriptBox["\[Distributed]", "CLT"], 
    RowBox[{"N", "(", 
     RowBox[{"\[Mu]", ",", 
      FractionBox["\[Sigma]", 
       SqrtBox["n"]]}], ")"}]}],
   FrameStyle->RGBColor[1, 0, 0]], TraditionalForm]], "DisplayFormula"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 ".",
 
 CounterBox["Subsubsection"],
 " Example"
}], "Subsubsection"],

Cell[TextData[{
 "Example: Assume that we consider waiting times at a bus station ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Tau]", "i"], "\[Distributed]", 
    RowBox[{"U", "(", 
     RowBox[{"0", ",", "10"}], ")"}]}], TraditionalForm]]],
 " minutes. If we compute the average waiting time ",
 Cell[BoxData[
  FormBox["\[Tau]", TraditionalForm]]],
 " for 20 persons. What is the error in computing ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", 
    RowBox[{"\[Tau]", ">", "6"}], ")"}], TraditionalForm]]],
 " if we use normal distribution as an approximation?"
}], "Text"],

Cell["We can compute the approximate probability with", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{"\[Mu]", "=", 
   RowBox[{
    RowBox[{"E", "[", 
     SubscriptBox["\[Tau]", "i"], "]"}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"10", "-", "0"}], "2"], "=", "5"}]}]}], 
  TraditionalForm]], "DisplayFormula"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["\[Sigma]", "2"], "=", " ", 
   RowBox[{
    RowBox[{"V", "[", 
     SubscriptBox["\[Tau]", "i"], "]"}], "=", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"10", "-", "0"}], ")"}], "2"], "12"], "=", 
     FractionBox["25", "3"]}]}]}], TraditionalForm]], "DisplayFormula"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Therefore]", "\[Tau]"}], "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "20"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "20"], 
      SubscriptBox["\[Tau]", "i"]}]}], "=", 
    RowBox[{
     RowBox[{"\[Tau]", 
      OverscriptBox["\[Distributed]", "CLT"], 
      RowBox[{"N", "(", 
       RowBox[{"5", ",", 
        FractionBox[
         SqrtBox[
          RowBox[{"25", "/", "3"}]], 
         SqrtBox["20"]]}], ")"}]}], "=", 
     RowBox[{"N", "(", 
      RowBox[{"5", ",", " ", 
       SqrtBox[
        FractionBox["5", "12"]]}], ")"}]}]}]}], 
  TraditionalForm]], "DisplayFormula"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"P", "(", 
    RowBox[{"\[Tau]", ">", "6"}], ")"}], "=", 
   RowBox[{
    RowBox[{"1", "-", 
     RowBox[{"cdf", "(", "6", ")"}]}], "=", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"\[CapitalPhi]", "(", 
       FractionBox[
        RowBox[{"6", "-", "5"}], 
        RowBox[{" ", 
         SqrtBox[
          RowBox[{"5", "/", "12"}]]}]], ")"}]}], "\[TildeTilde]", 
     RowBox[{"1", "-", 
      RowBox[{"\[CapitalPhi]", "(", "1.55", ")"}]}], "\[TildeTilde]", 
     "0.061"}]}]}], TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 "The probability is approximated with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"6.1", "%"}], TraditionalForm]]],
 "."
}], "Text"],

Cell["Here's the calculation with Mathematica:", "Text"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalU]", "=", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"\[Mu]", "=", 
  RowBox[{"Mean", "[", "\[ScriptCapitalU]", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"\[Sigma]", "=", 
  RowBox[{"StandardDeviation", "[", "\[ScriptCapitalU]", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalN]", "=", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"\[Mu]", ",", 
     FractionBox["\[Sigma]", 
      SqrtBox["20"]]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Papprox", "=", 
   RowBox[{"1", "-", 
    RowBox[{"CDF", "[", 
     RowBox[{"\[ScriptCapitalN]", ",", "6"}], "]"}]}]}], "]"}]], "Input"],

Cell["\<\
In order to compute the error we need the exact distribution, which is\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalS]", "=", 
   RowBox[{"UniformSumDistribution", "[", 
    RowBox[{"20", ",", 
     FractionBox[
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], "20"]}], "]"}]}], ";"}]], "Input"],

Cell[TextData[{
 "We use the ",
 Cell[BoxData[
  ButtonBox["UniformSumDistribution",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/UniformSumDistribution"]]],
 " for ",
 Cell[BoxData[
  FormBox["20", TraditionalForm]]],
 " rvs and scale each variable to the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", 
     RowBox[{"1", "/", "2"}]}], "]"}], TraditionalForm]]],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Pexact", "=", 
   RowBox[{"1", "-", 
    RowBox[{"CDF", "[", 
     RowBox[{"\[ScriptCapitalS]", ",", "6"}], "]"}]}]}], "]"}]], "Input"],

Cell["The absolute error is then", "Text"],

Cell[BoxData[
 RowBox[{"absoluteError", "=", 
  RowBox[{"N", "[", 
   RowBox[{"Papprox", "-", "Pexact"}], "]"}]}]], "Input"],

Cell[TextData[{
 "So the absolute error is in this case ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.029", "pp"}], TraditionalForm]]],
 " (",
 ButtonBox["percentage points",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Percentage_point"], None},
  ButtonNote->"http://en.wikipedia.org/wiki/Percentage_point"],
 "). The relative error is "
}], "Text"],

Cell[BoxData[
 RowBox[{"relativeError", "=", 
  FractionBox["absoluteError", "Pexact"]}]], "Input"],

Cell[TextData[{
 "I.e. the relative error is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4.7", "\:2030"}], TraditionalForm]]],
 "."
}], "Text"],

Cell["\<\
We finish with a graphical comparison between the exact distribution and the \
normal approximation:\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{"\[ScriptCapitalN]", ",", "t"}], "]"}], ",", 
     RowBox[{"PDF", "[", 
      RowBox[{"\[ScriptCapitalS]", ",", "t"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "2", ",", "8"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "t", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"pdf", "[", "t", "]"}], "]"}]}], "}"}]}]}], "]"}]], "Input"]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ". Mathematical Task"
}], "Section"],

Cell["\<\
Required for grade E (approved). Keep in mind that it is the mathematical \
method on the task that is interesting to consider, not the answer. \
Furthermore, solve the given task, not a variant or extension. A very good \
report and presentation is graded D.\
\>", "Text"],

Cell[CellGroupData[{

Cell["The Relative Error of Normal Approximation", "Subsection",
 ShowGroupOpener->False],

Cell[TextData[{
 "If you consider the average of 20 iid rvs, normal distribution is often \
considered as a good approximation. However in this task you will go beyond \
this recommendation and study under what circumstances it is valid. The \
exponential distribution is very skew compared to the uniform distribution. \
How is this effecting the approximation with normal distribution?\n\n",
 StyleBox["Antag att i genomsnitt 20 iid rvs(independent identically \
distributed random variables), normalf\[ODoubleDot]rdelningen betraktas ofta \
som en god approximation. Men i denna uppgift kommer du att g\[ARing] l\
\[ADoubleDot]ngre \[ADoubleDot]n denna rekommendation och studera ",
  FontWeight->"Bold"],
 StyleBox["under vilka omst\[ADoubleDot]ndigheter det \[ADoubleDot]r giltigt.",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" Den exponentiella f\[ODoubleDot]rdelningen \[ADoubleDot]r mycket \
skev j\[ADoubleDot]mf\[ODoubleDot]rt med j\[ADoubleDot]mn \
f\[ODoubleDot]rdelning. Hur p\[ARing]verkar detta approximation med normalf\
\[ODoubleDot]rdelning?",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.6264616822264*^9, 3.6264617535849333`*^9}, {
   3.6264618213501987`*^9, 3.6264618497115593`*^9}, 3.62646190543601*^9, 
   3.626594874168845*^9, {3.6265994672932987`*^9, 3.6265994825169477`*^9}}],

Cell[TextData[{
 "\nIn a certain cellular phone system new calls arrives with exponential \
distributed interarrivaltimes with expectation value ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Mu]", "=", 
    RowBox[{
     SuperscriptBox["\[Lambda]", 
      RowBox[{"-", "1"}]], "=", "3"}]}], TraditionalForm]]],
 " minutes. The interarrivaltime is the time between two incoming calls.\n\n",
 StyleBox["I ett viss mobiltelefon system, anl\[ADoubleDot]nder nya samtal \
med exponentiell distribuerade interarrvall tider med v\[ADoubleDot]ntev\
\[ADoubleDot]rde ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Mu]", "=", 
    RowBox[{
     SuperscriptBox["\[Lambda]", 
      RowBox[{"-", "1"}]], "=", "3"}]}], TraditionalForm]],
  FontWeight->"Bold"],
 StyleBox[" minuter. Den interarrvalltid \[ADoubleDot]r tiden mellan tv\
\[ARing] inkommande samtal.",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.6264618718392963`*^9, 3.626461993110119*^9}, 
   3.626462044716277*^9, {3.626462074808848*^9, 3.626462076840912*^9}, 
   3.62659488114323*^9, {3.627034813874208*^9, 3.6270348140325937`*^9}}],

Cell[BoxData[
 GraphicsBox[{{InsetBox[
     StyleBox["\[Tau]",
      FontFamily->"Mathematica1",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Plain"], {92.59070094167677, 94.98272326852974}], InsetBox[
     StyleBox["k",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Italic"], {95.8125, 90.4375}], InsetBox[
     StyleBox["-",
      FontFamily->"Mathematica1",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Plain"], {100.125, 90.4375}], InsetBox[
     StyleBox["1",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Roman",
      FontSlant->"Plain"], {105.625, 90.4375}], InsetBox[
     StyleBox["\[Tau]",
      FontFamily->"Mathematica1",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Plain"], {152.29013396111773`, 94.44867861482369}], InsetBox[
     StyleBox["k",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Italic"], {156.313, 90.4375}], InsetBox[
     StyleBox["\[Tau]",
      FontFamily->"Mathematica1",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Plain"], {231.1191562879708, 94.18165628797081}], InsetBox[
     StyleBox["k",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Italic"], {234.875, 90.4375}], InsetBox[
     StyleBox["+",
      FontFamily->"Mathematica1",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Plain"], {239.188, 90.4375}], InsetBox[
     StyleBox["1",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Roman",
      FontSlant->"Plain"], {244.688, 90.4375}], InsetBox[
     StyleBox["\[Tau]",
      FontFamily->"Mathematica1",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Plain"], {398.26117861482373`, 93.64761163426485}], InsetBox[
     StyleBox["k",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Italic"], {401.75, 90.4375}], InsetBox[
     StyleBox["+",
      FontFamily->"Mathematica1",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Plain"], {406.063, 90.4375}], InsetBox[
     StyleBox["2",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Roman",
      FontSlant->"Plain"], {411.563, 90.4375}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{72.5, 85.1875}, {489.6875, 85.1875}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{484.25, 87.875}, {489.6875, 85.1875}, {484.25, 82.5}}}]}, 
   InsetBox[
    StyleBox["time",
     FontFamily->"Times",
     FontSize->10,
     FontWeight->"Plain",
     FontSlant->"Italic"], {499.302701584478, 85.18063438965203}], 
   {AbsoluteThickness[0.5], 
    LineBox[{{{100.3125, 29.5625}, {100.3125, 85.1875}}}]}, 
   PolygonBox[{{96.25, 77.0625}, {100.313, 85.1875}, {104.375, 77.0625}, {
    96.25, 77.0625}}], 
   {AbsoluteThickness[0.0625], 
    LineBox[{{{96.25, 77.0625}, {100.3125, 85.1875}, {104.375, 77.0625}, {
     96.25, 77.0625}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{155.9375, 29.5625}, {155.9375, 85.1875}}}]}, 
   PolygonBox[{{151.875, 77.0625}, {155.938, 85.1875}, {160, 77.0625}, {
     151.875, 77.0625}}], 
   {AbsoluteThickness[0.0625], 
    LineBox[{{{151.875, 77.0625}, {155.9375, 85.1875}, {160., 77.0625}, {
     151.875, 77.0625}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{239.375, 29.5625}, {239.375, 85.1875}}}]}, 
   PolygonBox[{{235.313, 77.0625}, {239.375, 85.1875}, {243.438, 77.0625}, {
    235.313, 77.0625}}], 
   {AbsoluteThickness[0.0625], 
    LineBox[{{{235.3125, 77.0625}, {239.375, 85.1875}, {243.4375, 77.0625}, {
     235.3125, 77.0625}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{406.25, 29.5625}, {406.25, 85.1875}}}]}, 
   PolygonBox[{{402.188, 77.0625}, {406.25, 85.1875}, {410.313, 77.0625}, {
    402.188, 77.0625}}], 
   {AbsoluteThickness[0.0625], 
    LineBox[{{{402.1875, 77.0625}, {406.25, 85.1875}, {410.3125, 77.0625}, {
     402.1875, 77.0625}}}]}, {InsetBox[
     StyleBox["t",
      FontFamily->"Times",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Italic"], {124.063, 52.76117861482379}], InsetBox[
     StyleBox["k",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Italic"], {127.375, 48.75}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{100.3125, 43.4375}, {155.9375, 43.4375}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{150.5, 46.125}, {155.9375, 43.4375}, {150.5, 40.75}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{155.9375, 43.4375}, {100.3125, 43.4375}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{105.75, 40.75}, {100.3125, 43.4375}, {105.75, 46.125}}}]}, {
    InsetBox[
     StyleBox["t",
      FontFamily->"Times",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Italic"], {188.95502232685297`, 52.22713396111786}], 
    InsetBox[
     StyleBox["k",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Italic"], {192, 48.75}], InsetBox[
     StyleBox["+",
      FontFamily->"Mathematica1",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Plain"], {196.313, 48.75}], InsetBox[
     StyleBox["1",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Roman",
      FontSlant->"Plain"], {201.813, 48.75}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{155.9375, 43.4375}, {239.375, 43.4375}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{233.9375, 46.125}, {239.375, 43.4375}, {233.9375, 40.75}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{239.375, 43.4375}, {155.9375, 43.4375}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{161.375, 40.75}, {155.9375, 43.4375}, {161.375, 46.125}}}]}, {
    InsetBox[
     StyleBox["t",
      FontFamily->"Times",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Italic"], {313.813, 52.49415628797084}], InsetBox[
     StyleBox["k",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Italic"], {317.125, 48.75}], InsetBox[
     StyleBox["+",
      FontFamily->"Mathematica1",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Plain"], {321.438, 48.75}], InsetBox[
     StyleBox["2",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Roman",
      FontSlant->"Plain"], {326.938, 48.75}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{239.375, 43.4375}, {406.25, 43.4375}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{400.8125, 46.125}, {406.25, 43.4375}, {400.8125, 40.75}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{406.25, 43.4375}, {239.375, 43.4375}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{244.8125, 40.75}, {239.375, 43.4375}, {244.8125, 46.125}}}]}},
  ImageSize->{549, 113}]], "Text"],

Cell[CellGroupData[{

Cell["Task", "Subsubsection",
 ShowGroupOpener->False],

Cell[CellGroupData[{

Cell[TextData[{
 "Study the average ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["t", "_"], "=", 
    RowBox[{
     FractionBox["1", "n"], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "n"], 
      SubscriptBox["t", "k"]}]}]}], TraditionalForm]]],
 " of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "20"}], TraditionalForm]]],
 " interarrival times. \[LineSeparator]Plot the absolute error of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["pdf", 
     OverscriptBox["t", "_"]], "(", "t", ")"}], TraditionalForm]],
  FontWeight->"Plain"],
 " and the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["cdf", 
     OverscriptBox["t", "_"]], "(", "t", ")"}], TraditionalForm]],
  FontWeight->"Plain"],
 " using the normal approximation. \[LineSeparator]Make also a plot of the \
relative error of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", 
     RowBox[{
      OverscriptBox["t", "_"], ">", "x"}], ")"}], ",", " ", 
    RowBox[{
     RowBox[{"\[Mu]", "-", 
      RowBox[{"2", 
       RowBox[{"\[Sigma]", "/", 
        SqrtBox["n"]}]}]}], "<", "x", "<", 
     RowBox[{"\[Mu]", "+", 
      RowBox[{"2", 
       RowBox[{"\[Sigma]", "/", 
        SqrtBox["n"]}]}]}]}]}], TraditionalForm]]],
 " Conclusion? Is the approximation always useful? \[LineSeparator]",
 StyleBox["Hint:",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " The sum of iid exponential rvs has a well-known distribution, which is \
built-in in Mathematica, ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["ErlangDistribution",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/ErlangDistribution"], "[", 
   RowBox[{
    StyleBox["n", "TI"], ",", 
    StyleBox["\[Lambda]", "TR"]}], "]"}]]],
 " or ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["GammaDistribution",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/GammaDistribution"], "[", 
   RowBox[{
    StyleBox["n", "TI"], ",", 
    StyleBox[
     RowBox[{"1", "/", "\[Lambda]"}], "TR"]}], "]"}]]],
 ".\[LineSeparator]"
}], "Item",
 CellChangeTimes->{{3.6270456421435204`*^9, 3.6270457068554583`*^9}, {
  3.627045827600421*^9, 3.627045846031664*^9}, {3.627047637145625*^9, 
  3.627047644085672*^9}}],

Cell[TextData[{
 "Study the number of incoming calls during one hour. Plot the absolute and \
relative error of the probability function using normal approximation. \
Conclusion?\[LineSeparator]",
 StyleBox["Hint:",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " What is the distribution of the number of events in a certain time \
interval, e.g ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", 
    StyleBox["h",
     FontSlant->"Plain"]}], TraditionalForm]]],
 ", if the time between the events is exponential?\[LineSeparator]"
}], "Item",
 CellChangeTimes->{{3.627045720144978*^9, 3.627045727196004*^9}, {
   3.627045832870578*^9, 3.627045836183288*^9}, 3.627057108318012*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Formulera", " ", "normal", " ", "distributionen"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.626462769826853*^9, 3.626462826153488*^9}, {
  3.62661626629679*^9, 3.62661627600909*^9}, {3.626616327289481*^9, 
  3.626616336876322*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]]], "Output",
 CellChangeTimes->{
  3.626462788481785*^9, {3.6266163283593807`*^9, 3.626616342994143*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CDF", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{3.626616227833117*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"Erfc", "[", 
   FractionBox[
    RowBox[{"3", "-", "x"}], 
    RowBox[{"3", " ", 
     SqrtBox["2"]}]], "]"}]}]], "Output",
 CellChangeTimes->{3.626616228847659*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "20"}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{"givet", " ", "interarrival", " ", "time"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"\[Lambda]", "=", 
    RowBox[{"1", "/", "\[Mu]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"givet", " ", 
     RowBox[{"v\[ADoubleDot]ntev\[ADoubleDot]rdet", ":", " ", "\[Mu]"}]}], 
    "=", 
    RowBox[{
     SuperscriptBox["\[Lambda]", 
      RowBox[{"-", "1"}]], "=", "3"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "3"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Medelv\[ADoubleDot]rdet", ".", " ", "steg"}], " ", "1.", " ", 
    "Addera", " ", "alla", " ", 
    RowBox[{"nummer", ".", " ", "steg"}], " ", "2.", " ", "dividera", " ", 
    "summan", " ", "med", " ", "antal", " ", 
    RowBox[{"nummer", "."}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.626176964580677*^9, 3.6261769895708847`*^9}, 
   3.626462396118765*^9, 3.626462553767556*^9, 3.626462963050963*^9, {
   3.626616623092881*^9, 3.626616637892809*^9}, {3.627048030054242*^9, 
   3.627048038285075*^9}, {3.627048084505862*^9, 3.6270481243848963`*^9}, {
   3.6270482237263517`*^9, 3.627048246354823*^9}, {3.627048463622167*^9, 
   3.627048514547894*^9}, {3.627048555264552*^9, 3.627048592234434*^9}, {
   3.627050575481297*^9, 3.6270505835190983`*^9}, {3.627056437459898*^9, 
   3.6270564638858557`*^9}, {3.627056503670082*^9, 3.627056517114381*^9}, {
   3.6270566827260523`*^9, 3.627056683448209*^9}, {3.627057167562974*^9, 
   3.6270571689377937`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Plottar", " ", "Probability", " ", "Density", " ", 
       RowBox[{"Function", "/", "T\[ADoubleDot]thets"}], " ", "Funktionen", 
       " ", "av", " ", 
       RowBox[{"ErlangDistributionen", ".", " ", "En"}], " ", "summa", " ", 
       "av", " ", "n", " ", "exponentialf\[ODoubleDot]rdelade", " ", 
       "variabler", " ", 
       RowBox[{"(", 
        RowBox[{
        "med", " ", "samma", " ", "v\[ADoubleDot]ntev\[ADoubleDot]rde"}], 
        ")"}], " ", "\[ADoubleDot]r", " ", "Erlang"}], "-", 
      RowBox[{"n", " ", 
       RowBox[{"f\[ODoubleDot]rdelad", ".", " ", "Det"}], " ", 
       "\[ADoubleDot]r", " ", "samma", " ", "som", " ", 
       "gammaf\[ODoubleDot]rdelning", " ", "alpha"}]}], "=", "n"}], ",", " ", 
    RowBox[{"beta", "=", 
     RowBox[{"1", "/", 
      RowBox[{"mu", "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"ErlangDistribution", "[", 
       RowBox[{"n", ",", "\[Lambda]"}], "]"}], ",", "x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "150"}], "}"}], ",", 
    RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"GridLines", " ", "\[Rule]", " ", "Automatic"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.626176945568594*^9, 3.6261769456331453`*^9}, 
   3.626177061321295*^9, {3.6264629766290283`*^9, 3.626463012092017*^9}, 
   3.626616679742599*^9, {3.6266169637065153`*^9, 3.626616979154996*^9}, {
   3.62661702651947*^9, 3.626617031030601*^9}, {3.626617121452526*^9, 
   3.626617206982834*^9}, {3.626617403725752*^9, 3.626617432822042*^9}, {
   3.6266174901782913`*^9, 3.626617626267324*^9}, {3.62705066345623*^9, 
   3.627050707732389*^9}, {3.627050750038813*^9, 3.627050752744112*^9}, {
   3.627050842036525*^9, 3.6270508446572933`*^9}, {3.627050956221065*^9, 
   3.62705095760713*^9}, 3.627051509047303*^9, {3.627051682994404*^9, 
   3.627051697578631*^9}, {3.627051741052742*^9, 3.6270517979020033`*^9}, 
   3.627056997055657*^9, 3.627057264797544*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
/vtf6X/58D9KhA+f
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl13fA1mMbh/Gn0i7tnYZ2aQ9Fe++9VWgXGgrR0FA0hWhpWNFeKCtUStGe
2pIQ7aWI93O+/jic3+9x3Y/u7uv6XfdT/u4DWw9InJCQkAiPJ0lIGKqMNMvp
I8xX9I7mdi/oLZeUS8kfoK6eWv/Qa1Pq45CXO4uHufz6XNyv/4Mp3I94iLuJ
DVxZfS1S6GORh/sZ3bh8+hxU0u9gMncKnbkb+IIro69Bcn0M7uHOoCuXV5+N
ivrfmMSdRCfuOj7nSuurkUwfjdzcT+jC5dFnoYL+FyZyJ9CRu4bPuFL6KiTV
n0cu7jQe4u7RZ6K8fhsvccfRgbuKT+Pz1FfiLn0UcnI/ojOXW38D5fRbeJE7
hvbcFXzC3aevQBJ9JHJwp9CJy6W/jrL6n5jAHUU77jLWcyX05Uisj0B27mTs
OZdTn4Ey+k2M546gLXcJ67ji+rI4P/pwZONOoAOXQ38NpfUbeIH7AW24i/iY
K6YvTfjvAD6HrNxxtKey66+ilH4d47jDaM1dwEdcUX0J/sWzXBbuGNrp2fRX
UFK/hrHcIbTizuNDroi+GP9gGJeZO4q2+hgcREv+D6zlC+sf4A6e4TJxR9BG
H40DaMH/jjV8If19/I2nuYzcD2itP4/9aM6fw2q+oL4If+EpLgN3GK30UdiH
ZvxvWMUX0N/DbQzl0nOH0FIfib1oyv+Klfy9+ru4hSFcOu4gWsTzjj1owv+C
FXx+/R38iSe5u7kDaK4Px2405s9iOZ9Pfxs3MZhLy+1HM/057EIj/mcs4/Pq
b+EGBnFpuH1oGvuJnWjIn8FSPo++ENcxkEvN7UWT2D/sQAP+Jyzh79EX4BoG
cKm4PWgc+4fvUZ8/jcV8bn0+ruIJLiW3G41i//Ad6vE/xh3I54r3F3uF7ajL
n8L71nLGMxDnOM5ivK/YI2xDHa85iUVel1Wfhyt4nEvB7UL92CN8i9r8CbzH
Z9FLxp+BOnoqd/Cb3GU8xiXndqKenlWfjvv0q3iSW603kzP7ua3x95QryLX4
43g31vjp8Rzz27hecdfI98U9F+9NXiT3MGvrKc258ZmaL8b5MD+13tdsH/tg
XoozZA7RHzD7W+9mJtN3oG6cEX1KPE/m14n++07qGs+FmUV/Vq4pvyyXkK9g
sJ9bpTeVM1nbEp+jXF6uyR/DO7EWn6XcM+49ayXi80QtPYU+x/oners4B/pF
vZ+eVP8edfTM+jQU1y9jEPcNanBH8TaXUZ+NC+jL3cV9h9pxZrEZ1fkjeIvP
oM/CefThknDbUSvOLDahGv8DFvLp9XSoGXuHjahq7TAWWL873k98BvgaD/KH
MN9aWn0m/kBvLjG3DdXj7OArPMAfxDw+jf4GfkcvLhH3LarpmfSpKKZfQn/u
S1ThDuBNLrVePM4UaurJfa6vc+fQk0vgtqKqmFGfgqL6RfTjNqAytx9z46zr
xWI/UUNP5v83g/sNPbh/sYV/UM8gT0YR/QL6civ1JrFHfu4L/X59H+bEGdaL
xh6iup7Ua17j1utt41nXf9W76//gmzjHenp5Egrr59GHW6E3jr31M5/rlfS9
mB1nTd8az45c3HqROAeopt+lv2p9nd4m7hD9F/1R/Q42c1Vin+Qucf9bTydP
RCH9D/S2vlxvFGfF+mext3I5uSK/B7NiL/gtcne5mLXC8qi4N+SFclU5SfwO
6HUf6631HPrZeI7jfciP8H9jk1459l9+KL5nrN0tD5NryC/JBeXf0cvrlukN
5XRxT+j95bJyBX43ZsbexrMlPyoXtVZIHhn3hLxAflBOLE/3ugnxHSN/xLeS
s8s/84PjfckP839ho34/P9lszW/gOsf3nJxWfiaehbjD5ALyOfT0+rHxHcAv
5RvEMyZ/EveDXEYuz+/CG3Fu+JfN9vxm7hG5iFxQHhH3iDxffkBOFHeZ14+X
m8bv0nxLOZt8hh8U71fuxnc1b5tfc5WsTTJbxTnmHjM76fnMNPrT8YzKE+LP
N+/Vf0MPPzfGbMgtiXvdrB/3grk+7iu5dPz+H5+LudN8Pc6ltWlmO24TNyA+
U72wWUAfHvebPC/Ok1lFTzCnGS/ITeS11vqYLfSs5k+xP+bA+PvEPR9n2rxl
fsVVtP6sPlFuGc8R39/sqOc1U+tDzKfi/jDH6w+b+fVf0T2+l/XRcgNzcdz9
Zr2418x1cR+bffRSZlnrncwd5ozE/3/7CcP9Z6rc1tzIPxF7oReKz1Qfaj4X
d3V8B8dZNSvr/2Jq/M6gj5Mbm2us9zab61nM07G/ZvwDrKLZJZ4d80/zS66C
9WHx7Mgt4jnm+5kd9DxmKv1/83Ocng==
        "]]]}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
3xjfhzw58f//1ivrtf8BGuWjfw==
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->{{0, 150}, {0., 0.03037435051344511}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6266171646411667`*^9, 3.626617207554384*^9}, {
   3.626617404989196*^9, 3.626617426983779*^9}, {3.6266174946078863`*^9, 
   3.6266175739125643`*^9}, 3.626617626951614*^9, {3.627050742526197*^9, 
   3.627050753299205*^9}, 3.627050856525259*^9, 3.627051525553749*^9, 
   3.627056999085466*^9, 3.6270572718878613`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"ErlangDistribution", "[", 
      RowBox[{"n", ",", "\[Lambda]"}], "]"}], ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "150"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.627055170316896*^9, 3.627055177452643*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxFm3c8lX/4/1FJkpVkZM9Q9nbu92WPZO95ztFQVkYioyUlI3slSopKiiJl
j9AiFZEVEjKOlRHxu8/38ft+vv7xeP3jcZ/39Xq/rud1nZsQ2c/qOB0NDY3t
Nhoa6u/ndht/Zp68xWj+/8/xnGOPpuN3wv/qUHW6f1djuUD9xInmPjVNgknL
y6YaTWF4mh/q1XixnzB16nzU272SgJ7Fm+7nMMRmU3Rt808fhhCjmMbSzBxs
tvLJ7gwpBbg5yW6c+L4H45yqDtJ1V4bQ6GfV/Of2ICOeZOfVKDXYtOkY3vVQ
GfndY66KDtKExFCTy+x0tqjVLyE/7B4GE2eP3Fl77Y8Y3zvRirUDcIw6egy/
i0blLpZnWHV1QD8ec0z4konWbhqLPP2mC1c7NcbU5R8itTNpyRqW+pBcemG2
eLgcsSyM6If+NoCCwVnuPzsakVfAXjWtcCOoWfgQoLrtPWrMy/g1tWAMkwMB
Pk1nP6NSX75es5gjYOHhQ3vKowfd+r18LXf7UbjPd8qTU3gQ8TF8Pn83zwyO
CJDmH/CPIHZ2I7tUbgvg3zF+2X3iJ0pZtjja3mUBnJdp9HrVx9GPx06/hu9a
QhT3Mdku90n0WDVhwItoBZKcqyEc9FPopY7ikiqvNXgpNV13sZpGify9xQNj
1uBh6GnNcmoGjX8qalrLt4Gdb04ZLkrPol02oeEUP1sI3XaA/uubWeRrV2Uj
oW4H6dpBh0dlKchSViK2a8kOrg4abpQHUdBWT4qHa709OGU80IkopCBpR6ls
50gHkIo2YvnTQkFZDgpzt9QcASnwDfj3UdAXSc2JcjoncKE5Lv52koJiO3ww
gzoniBndo6O5QEEshndVnsU6Q4Ixaez3CgWxpm3GJZq4QKrn1QyxdQqyJX+k
e77DFURmIlY4/1HQcZrbPE8/uYLZMU8zx00KWghKTxRKcAMW8v78XVsUdPR1
YpGPsztsDl02DsF1ENqkRLATIXOrFyvHNe2etxoXzxDhTnd3TBeul3RS7fy6
idAmIK8xiWvxY0F3s5RJ4JvVQVrE9Zreno2fySR4FXVzfRXXCgkPJPhWSZAj
FGu5getHjTaXE+3I8IFQsfUP11eiUte26shgt7t5cxPXb8J09WfjV9D/3odu
XZ6D2EF2QAIS402/q7ToR9UaL17ihwh+KUJ9XCqBh4u7oElCDE7t+yTCvr4P
m94cnFZG0nC8dZLtV3sQFtAgwbv0VA4WOu6EqX2sxuislGGmWRHmwhdFGk4u
YU8vS0zwLahAYMlpouZLYdTvZhFbt6EOXj3FRbDNAN2KaT9My0SAh8Kx39l+
eKBztJan5lkAlBmShpPpI9CPvd2V2de1gebNn7JF7iRkH/zxrfseXVDvSLDw
WbuLuC5Svgel6gFXyZt5uY/PkKi81nQvnwFcddlD996rGhEU1mudnhsCW5Ea
fY1hC9Lo7OLu0bQE6UbllHOOE6jFf2lYnNYKyncpTvYRfiP5mh8TnTVWwPT+
/tRI+RQqkIv+dOOiNRiaqsanj0+j6hWo9NKzASmnmbSczhkUws52J2iXLWzq
TwtHXphFWrbZnrFfbSHVjRz1aGsW/dCZ99tMtwNXBvWvx2wpSDLK9VyWkz24
FTQ6VyRS0D7uoUgXAQegyd/y7KikoBGHw2/C+nD/vv/Uqv2ZgirqVaaLbjtC
nAxHW8AoBcmG2+zdJDpBspDis7BZ3F+x1zTCxJyhrKsxzfcP7tfZDpLglDPY
qAoYvl6joLL1sVahIhcgtFikaW1QkKt8ObO8lyuU3Pf98xH3b/HrLFtPWTc4
1ikwUo37905GSk7rkhucfRcwYoT7JTvHoFmp3h1yNd+K3sK1xgOPfRe0ieCr
yZ7Viuu/hSVt5+4R4VZL9MAPXMdbbw/fTk8C7Nr6TgquE7/Wm6FjJOgzaEtd
xnX6ZC/bpTckoOw9NfkX175F/77aSZBBxibaiOrX9HtLBKNYMrB+zkil+vWq
Bm3YfPz4f35lSDaNVJrb81+eQ8Jt9yvRvDBuElaAck4TFPwmnteXioAPdpyn
IeAvwftFceWFhwfhvBIf/TwXETsV+1Zff0wW0t1nCYxWT7CQq/NijSsKsJfp
Rjx57Bc2ohJQ8kxSBd5WXfiu0bofJWv5L/aBOjC3RHgGiSB0NX12SRe0wOnD
+oF4AVfkpJ6p8ZSEQLZJ64BqRzA668c14C6tDT9DxnWeM8ah6FMsfGpFOsCq
HPE6nCYXMVw/sMWmogd6maLut2SfoJJPnujGS30wWL0aQdn2Comz+9H9NjOE
5y7j4euczeiXR4riFwZLaPxVktz6YRx9SZA4FtVpCTYCH7Dszknke151lP+m
FeS/cf4YTJxCJa9cyMNHrWE7bcxsXN40Et8dXya6zwayQh4oKOXNoGfz/fKq
3TbQ1CjpHWY/i/K/xgQQ8m1hr0U0HePPWVRoajfC7mkHrDEHiaG6FFTtqHPp
pYQ9pOxevOd9hYIYQ9Xn+yn2UPF9VjntGQXROxY/nSp2gEMhiQFjHyioKE7J
V9jLEVKJguefDFHQpc+t/3rlneDca0VGvWkK8n5yvpq44ASV5G/Js4u4P7LV
TD2rnGFHylTij1UKIhkFSDmGusDT06uJr/C87TVuYAhQc4WQzub7Ibhfr7vy
Vu6mcYOQHg+LBNyvxvRp6UENbuD5ePWqNDVfH3updMa7Q91W/soNXH9beHZ5
8yARvLUvMtXhOvJ7Fe1GDJ6/GM3dPlzDEdNJ9VkiGLeY2U3j2jmHJ2TalASh
RRe5/uDaKGORXrGYBHkSgzuofrXgtdp8xUKGVyEq3dS8FXwuSpw+QwauJE8L
ql+LMOa9ZKd9wHi9q3LDgJbwi/c0O6oVhEdhKWs7lV4T6BqMU1tui4PpnWad
7mw5zMeYTWj6qwwQYxL/jIjEYHI1p1P0feTBVvTiqQml91gcf6gTV7IS2Mm9
VaXJpkXh7f1CsVWqkKb7YWqhTQaJX5IVuVepAQmPBz+Q75mh0vASz9pvBFhO
/SSQWnUawS9b5d1+AFfYzTuYDC8jk8qU1K4xbSDtkVv6+DQVSV6JDb4WoAvu
sNbX4nIfSYY0Vnxb0APWkvCThRrPUXYSS9bBKAPQM4g4+JCpHi1txcxGTVsB
R9bmjlD6aZRd+BRTem4NKz2K3k+lZpDVz6WaskAbYDE1I52jmUWgqM9cpmUL
Nz670igVzKKurkduvfR24C/XxfGTi4K41OP+Tb6xgz9XeZObj1NQakmIT1i8
PfxdUdMqy8HP91UUU7+ZA2z27PqC1VNQrcOz77sZHYH+MI/y/m8U1Lykdlr2
kyMsxt56+fEXBQ2IDUsKJzoBJftUbfAcBR0+lVqZ5uAMxSYbG/XLuN+0T57r
4XGBhhUvprC/FLT9qePx390uwJi3EPkMz8dhroccc7ddIU9h6gQX7q+O/VyL
zW5ukFFq0jyG62XJ5HweSXd49FHrKBmvd0O8kFXmgjs8lyCIPsR1riNn0ZYD
EfYRzjN14Prc2bs3F6uJsFvD2HUM19+dq5k7+Ehge4nXdR7XzUwnxZLDSGBq
pD24guufmvUHOgZJ4H/i5eN1XMcpP3y8iJGhIWb1ETUfmVKbeQvuk+H3onQ7
1W/bK8N/rcR/+y8fVTIcUlnrGP/Lx/5R85Ltu3jgFp8mT9gja0ItzyfNumVh
8PRKHO0ZmCLI3EzJLRiUhILVZ/KXQqyx4pvRHxclZOE7Y3iVYEYBppjXkSmT
pAAjY1/WuWZ+YBuJGWx/m5Qh84pUGF0rO/J5fEni94gaSJMeXKik10B/czbt
j3/XBN+CRxPf2xxQok2KbxodAiubAPPjIkEIbqv7NW7g/V3I8660eQzi93hm
UHBWB5p2x/OYWd1CNEyKST/o9eDLmqankMhjFCi45UmO0oe7Hm+XhU+/RDx0
BwtKDxjCOovZoTOMTUjrUEC9BcUCBrd5hXBGjSMnPm2x568soa3X551n1iRi
6iUT35yzgnZnLuNfilNIYdPwcZySNVwrYh7KCZ1GfRzPZS/9swahV6mQEzWD
TIcbz2dW24BXakuutM4ssku9dI4zxhZEjks/0+uaRTc6r/PetsD7ud9K3pg6
BUU3K0UbMNuDVrr4HwjH6/HwhBRfjz1UanTIixfj/nacKriX5gDqFbfyaN7h
/TVAUXbI0hGGP3xHeQM4r0XQLhryOMGdtBdnWKYoKBwLivjS4wQHHW+U8+L5
+GnOWzvunjNwS9r5nMLzsdK3sm+J5AL9scmf/fF83G/XepVdwBWeuzsFGeP5
uHzY5ZTrhCsYNREfBeF+za1J2/u+0A3qjvHI8uJ++aEQ6ZcX5A5dxx2WL1H5
MsteHeMnwuvzly1e47o+UIcfiyAC+9G3ZT245jGcy7MZIQLbrQvdv6l5ebGV
SVebBAWxa3pL1PzzvUgbl0cCDe25q2vU+2CzkTy1jQzFNfbp1Hwce63lX+tB
hs2ghoNUvyJtDv5PDXshpcV+3j/1h9ap+OjArU0BGCKLeL+pKCQkeMsfeDMi
BgwlIzcuWopgMqKr9GyMMqB99HC449GLmCUy/pbDLA8ZfM731keaMEM1+4+X
pZVg3FN/h9jEXyxdku7qVztVWOW29b5tIIFo55B9qZMGND95Ub6w3QSJX6l9
P+RPgLbSnCKf/SdRf6C1eSQCqHczbHtmdhHt+/VCXO2lNkjwx5+e/ZKM6sNl
7iwiXZhe/WpIvn0PCW70GD1o0gOrH8SEjo1S5D58v5HW0gB+9ki3DarXomS3
ci/pLivYXWqf2jI4hQSms68NZVmDFn/PnZpdM2jnLI8mi4sNlOw52RAyOYP6
haXt94rYQq31DQWUPIuup+V7lM3YAp92vF0SEwVt1NSqBJXYgf30vHGzKwW5
cXsFMAbZQ275fan+dLw+k6X6B1QdYKE3zDavGveLA6WjacEBbBfIKdVfKajm
u6r0dAWel8/Sv8mM4f26k4c/McQJ/M23nbhIoSDsb3woA3IG/u1lEnx4Pn7K
uOW9QecC+U2vs/nwfHTuyuOMrnOBf1ptliF4PgqIPU1KjHKFMrrywCXcb9ik
QwGnoRvccf77rxP325EfyQL+zO7QUxCwxw6v9+F9SrEnet2h8KD/8XxcT29V
u6GjRCi/nhv4HteVzJLFys/wvGw+ojiK6xf2xDeTbCQAKUvCHHWemdv7esKP
BE2LvoiajzXsR/dLfibB2RMnzaj5+M/XGsQUybD1Mj2Mmo+dt/plgjPJYNmY
VUb1m4+BoFJxIut/eXhPbYqVbjsf0NK/OKX39yLhQRONTKO3KDTsFi0e8GLA
invffHYKkgKbkMltCXynsRRdevcjlnLw3OepjkvhC6zGa+9zezdF8CROLVSW
zWJt/aZHTsargF8kp2HINB96+ZFY9zFXHXaVGUV0x+kg1sTBJOEHWrAiZFfm
vJuERPlv07+tR9Asq63a1BSKHmmvmPxz1Aa2uErrJJqbaNbPd/H9dx14PJLA
suPMHeRy4NL6zG5nUBnSzHuxhPOH3nZ7vS/OsJh5sdIC53tGYZnQmkQXUIid
Zf+H58EtQlVsp6UreNcerS/A68MT953+9X43uPepwukBXp8ls1Ru/j43GF+w
qNLAz2enqOM/ukJ3YLcfdEjB9XVTxg+1ykQITjcLacK1lrby2Kt0Ikgl3nEY
xPUJ8yIFgb9EaKyKqZrBdXClz2iaA85HH/wHqLzkV3+C6XslCdyf8IdTeWlo
uPDUdV4yDPVcYKPWx/kxkzlPJBnuac0FUuvDqsXAsLTACfkll1mfcQkSuOZZ
vTbDhSCx+c+G3df3hOB9ZKY2BwkIeMYi92VJEyvxldJszTsEF+fzMxy4UjAW
zTjz2ffy8DS8ffyL/2esc/ut8SerSqAw8bpQqo8ekYNe1moLqsHA1qntP5/L
IxN2AUoqpyYIbf2ee7tqibSCc3fcJmCw8kZf3eSbL7rv4MCbmQtQISmp7+kX
hYziihk/l5GBg/fiOPV56Z4H1mxPaP2v37ZnueVFiu/6z1+PmB/a6ptwA536
/aw+O0NC1FzTBSxLGCKktpk60/4kxG1Es6mGSsJbus2eNGYz7CPbcbYjbw9D
5qWh5C+H72KsxdjnYVcFyDp/VDeTdgDbhUk15SYpw4JlS7vvfVb0fSRGe/65
GuQ7MTyOa1BFSneidwUXasJUqJRs8Fc7JDOSeJ3hCwYRJZOf940HIDElk8rA
MYBHpQxb5vTX0e+hi85OLjqgFJxcK7AnG20cxb4bUnSBMdDb7af4I2Rn9C6i
/bQ+qPZNltbeq0Acf3ecTdtmCC/q+d8dvtaIJpKGo2+OWIDNgSsCB93H0e2f
H6++e2IJtcq1Fu/DJ5HL9dVcLm8rmFOgbRLjm0JBd2rMRySsIaSyW0TixDSq
4DbwfTpvDSc4V1qWgmcQT6+ywNunNlAeZrMqozqL5IL+rV0Ot4VgD1eJ/I+z
aGOvsNqInh0YBFIiF5Tw/Fh7wpBAaw+OSc0F10Lwemj/MyB8sAdsPV6w9yEF
CffeyNuKcYDqiKfvL7RRUM5Y2U2CviPMLQ7Ex/XjeWWdOxPJ7ASWC+aJvr/x
fr1zfoDpgxOwilpoPlmgoDnenVq5Gc5ALC44II3325+XnF/o2LlAxf5WI1P8
fqm4mDST2V1BOa4pXw6/XyUZG9rR/a4gzPNN6SR+v4y4Oa2Ws91gB1t5Ijt1
ng3eGUfv6Q61fvwqEdR90PQjDjcuIoi2135+iWti/VWZoWAi2LZOi32j3kd9
nXVSPz5fGzEwUfut4gKfva8mCYoDTndR9z9xvS2Ralkk8JLi1aH22/P+lq7b
N0lQt5gaRO23bbVtoRKuZLgxJLOP6tcbOhki1/6ww1GvvTQGq+1aapVDPAAC
MFfSo5N/PI9goyNG1LsqBsIpTS5D6nxYXNJU6L0CaZDvavcu5D6PkS+qhRoN
yUF+qvyE33w9JqrfQq+2qgjrShMZEUErWH5XqkqoqCroXonLWRwRRb4SRv6V
0hpw6Eqnd/68ISJGG0TMYQTIiBS/8MH3OHqkYdX/UgJgcC2s4UBrJPob/sZv
Mk8bfAh7339cSEJxaxsvHorrQvutd5072/LRAexn0p5iPThj5i+g5VGKdHb5
f/NRNYDgN6YfCi1q0MieI48i31pB973gQ2HvphA5gVVGOd4aus1SZDtXp9HI
wpNQgoUNPDPLef1gYAY94sld1+W0BZYsjbur12cR+Sz/L/5hWxjcJ/dWjp6C
fGkcrF/l24HHZt3TO44U1GT2c8nypD1Mbt9/9ksKznOXjMha0g7wviUkseY1
Pp/2JLwTGHeA4HqVI1e+UNDroy9jTR45Qrjw7d3WPyko+8FLrlZvJzAoXBjZ
mqWglkbG79oKztCangGtf3C/NSqfZF5xhrhjeWXTeJ5HT+hQvjx3gYBD7RNO
eL/FpBU+/TjnChzH7lwfxv32x3ItHGm6gWY7Z04rdR7R3OuWQ+sOD0JI6ebU
+cGhpvDjB3d44zjVlYvrvdasGu6GeJ6LdCW8xbWjs9fr7odE2OvByTyC6zu2
ZYIru0lwT+bMfeq+5jb59HaO0yRA0femqPsaqciU1K/vSRCbM36A2m8rYosY
sUNk2Fd2nUzN8xd5nspDSWQA+t/3qH7zv2kQ2HKd5b88DPDQq9TRPwBV+29t
0zh5luCdteSnzSIKSzwsb97tpMOYDF/pzzBLgc66++etuGNYQdQfmhUhOcg8
L+B7xrsUyw65PM0krQhCQn4Fdjd+Y10xQxu7nVXApPt9wHQpDxLdcar3q586
FDQqDHTQaCOTlBO6ioFacOb5PfbNq+6o7nG2oFYSgnu39S8zQwhK7NmZWqKj
Ddn/3G+KRcaj19MYw+UGHQjc+4t27VQe+vnzn7PElhOsbdOQsMb77Rm/XEu7
VmdI1/kVwY3XR0W5w3L3VRcQZrrT1YfnwWtd7J2Qvitg36vYb+L16Vw6PzSy
2w32avhey6by9yMOB+N2N3iwmqmriJ9P7ckR7tPZ7sDimqx5E9fP8lwLB2WJ
8IiT27QB1wPxIYtOiUTw6vDYNoBr66N/42WWiDDkIsRE7beeUs2HGqxI8H6w
Kpzab/uln8REl5HAxkJSh9pvMzc3FO/uI8ODGM8lah5gTzPtr5wjw32II1Pr
40KI3fNYnBPS2Vil5n+yEi5E19Tm8gmB8VkR+2DZJoLWlK2F4bo4vDqX8yU1
Sxlj7ucrcdQ4BE3jKux9jDcxwfCw+awceXhiIjm1/WUHVsLGKOTxRgnOCzPY
n927HfkJmZz5NaMKSm0KE1vzsqjSWGJXzrgGqO6xj7+bZYGCQ8VfPmHE4OsV
l7J3r7xRgIB9UWc0AO3nLfFdtleQVKLaXs1iMmh28fRRn5f51TJ9cysPRM/P
CiscJRJW9fpXkI0I/DyxSf6lu0j4IHRHml3vINzk0j6AcTtiN/YUxeREywIN
+uHyMrsIs0smup9rVgCivlimQ/koRhndTrRdVoZD1cZZxWL7EE1Q6J5RNnWo
UDC7dDtMC9VnBT+w2aMFLL+8tZSHndASSuLiTuAAqX9ChbmH57WOlnKeGHIT
BF+dMqa2l6WEtnRCjz6IQ2fN3aonxw9iHyq2p0b6ycACwaYxzygKg01H5XmC
PLzfbn8m0rgVOy09kfLRTQkYF2RMjrVvYjFhfl9kY1RBvplGZu7XQZRaqUp4
FKMB8/pHjnojUzR9QYWno4AAf8Un1rE+TySsf/vwHxe2/+7X1z3Jpxoa+WDj
X97Hb6k3CD9mmCZ03olCf1qex6ovK2bq/dm9rVcKmFY/2S9HncEu0+2vybso
B2/SwpgyvCqxH24FoflJinCZxNhh+HIeq5Z9ndVYpwKSXZJ3dtUJomaNq3SE
uv2wu7bBOHruEKHU+dh+t34hCLftEAil+Up4hnzbjCok4HJSSPkYjQ5mRqva
prTjMDRHiOvEeGZgm2s5T3TW5YGeP4Ti69mFLa1Il6xKK0Pzzivlx9Z2IdtW
0T23rdTgl8qMvHSmIjpxXZDu1CsyRJNIi9T6bxaRvPgTXv7HWzy3hguUnRj+
+/zsBbYPx35zwZP5+smNfm3Cyb4aocjTwvAr407a518/CFrPaY5cNJDE+WVM
f8LJBBu0snm+nHUYnkj/Spd1ycMuKCz7aukpwO6snQcuffmOJaYu8vqHKEPF
r1+W5dYsKGkzvj0oRw2yfeuzxp6qoM93Tcib8ZpgtRxbJzxui/4W3dynU4XB
41qJK7vNA1Dmhc8uH3oBbkYqSs+fuIYs+CePl5vj+eJ7nTjum4X+zjZFho3q
wq2m3DXC44fIsF/2+nY3fZivXnwtrVOB2IODXHeuGACbT9sbC4NGhOlx/z7c
bwGSTTKh8abjCDPiUOkutITCD1ftnH0n0XaiLqZzwgq+yVoSCtmmULr/qlC8
kDVgQdsumLpMI5Gcm/EtU9YQOc7bs+vMDKKx9fMnPbQBkWs1NzPkZ9GBY5qa
6sG20E/DnF7/dhYpl/u2bEd2IKM0ecxXAc+v1N9v5dftIOMD7c+7wRREE29k
e7TFHlIbSaxPiqj7g+85h6Ic4Af3oZKqVnzeyFuom8Ycoce5VI0G5y2G2unT
2QxOcHLolO8BnLeMvGQTHr5xgnUd+WdBOG9dlLdRL0xyhp9vS7HdOG+d3/3k
zikLF+CeydmnjuerwVDsKCOTK7jdaZkQwfOV8YNpSXa3KzDqLpkT8XzlM7Sb
j011wz9vlggz7pcALlOe1yR3uB129s156r4jzYbOdx8RtunlxFZQ8/ZE4fOn
gUT4PNnp2E31l+5UkWcvEUgfmQqo37fJSBtvXFEjgXedYA6Vt3RYTtcwp5Mg
5+shASpvdW+FNbKukyDskboHNV9f1TNv9jmSofh4AiPVr3JNDg/IN9lBMEXI
13K0WSvvaJzvjx/8kFvNactxJougekiALspODO6tHRgwcOXGtIyOP5/2l4bI
v9mE3ZbnsN+Ccia5rXKQPbzoRA91WMr7iHvJg4rQWBhHXhj+g0nKuN08slsV
7lb/qCa1iCAxXdNNTQ4NEJ1XC1j+Y4A2rzF2h4gRYGHKJNmg4Bhize3M/8oL
8GN3lK7Mzwjk03aUQydVG3JMc7icryahBdXjddt5dEFbp97xp3s+4hk6paJ9
Rw8mi3eNv9lfihRvdw/fkzKAifwb9CUD1ejGWJpxUZMV/MxIfaZWP4WuuB/Z
HIq2Bh1njzLC3DQyP7uSaWNiA1F3yl8WfZtBSenfjvaz2MICOWVGO2oWmR93
kej6bgvVOzc8F+goqPBuwXBfjh3EKd/uvGqPz5OTghV/iPag8c443DCZgjg/
ppwxFXOAIfOYPW2vKGgwc7D16LADkPbsSB39TEFqO1eq1u45Aq9catXoKAUd
Y6NPHznhBBeFOLVrcd5ilDC+MSjtDAX+f/Ru4bx1sefysf3zziBVsPnkC97P
DwSk9v194gLLwR/7j+C8ZVYSSLnu7worjB5fv+F+s4g2nrRWdsPP09ikEffb
+1PW/+TX3cDhnYSeKV7vur+0Kpda3MHvxR3a27h+sPFKwk+PCCl/eNPbqPsL
2njtwgdEIKbDuWHqPGDj3P6PgQQPAr3sqbyVfivt4cGTJHDMyqqn8taP5ypf
HrWRYNj71DYqb7HzfPEzkSJD1e0HtlTeun+35FVKAhn8C21zqH6rTnwbElHN
/F8e9q7O7R4d4wUBV89zzeNnCOZRs2yXfojA6x+S8w8nNgnV/xQuqPQfhMnm
52uzCmRMRmym05RRDsg0GeUFa0+xXVvqMSfZFOFLsU+ze9EE5vKjyHZQWwWc
u0+U0Ctyoz5BnxMODuqw6ljW06QPaCJVKqfKUQu6V/JW8o66obiArCdnQxG4
fmBSsLp6DtGJJqrtVNUG421b4SmNcUhQupB94IUOJM0eZS5+noskjbWYmled
QIyBSUcI5y2aq1Nm7g3OMJsfhv3D8+BDrSCmcMEFjM6Vfn2H58G7lguTbzFX
ENVLXLqC10fm4PsjKzvcgGUtOSQVr09Qj83KYKsbVOcV+8ji55O1S6KIL9Ud
2oqj+ONxrWe8M21Whgg5p5oO11P3U0rZ56XjidB4d9C6H9cmpvc0FeeJwLbA
UEb9PojsQfncbU4CuTHWI1TeSiZZtLk8JcEZMXNRKm8txUlkPWEnw0pk4Bg1
D2RLB/tUg8iQPJjs+D/7glrTxOj6fQAaAuYyGANBoTNlYnZGEDgWenmwujqC
QLf5QvQHcbC9165vt6iA1SZnjOfvPATG8dEJYwuxWNGBwEZKlDzw7Wrvo5A+
YnyZDTU1j5Wgp7ld5cxHOrR8bu/byq+q0PL3vDiyOYz8jkunC3zSAN6zhlNP
xswRR9hvFpV5AlSo8G32V3ih3svdvrPnAYoMaQaiPlxGvMmRGZQiMrAsvfhK
fd6zZvecjnnygDe/ApuMuyOhT7Y764KYCBzqWjRjOTFHCO/hPu7MdhC4zrcf
r+a3w26ZZUgb2cuC4KRaJnPUA6yZi2uj85ECXNX7Y79dfwQL1mivlBhQBlPD
8nNOs3tRxc2I7BN/1SAi+qIBraYmcr2lsdW/qAm8Ehy2pz45oux6q1tLEhzw
/obVSNryuBbtxvRNWVlBONbBmtdN/4Tw+JLq+ats4uButCxrKyWOhftEfmzV
koHMrvF/QfKXsbZcS3pDcXnoVjBsfRj9BuspzZOT1FcCL21FSZkPGxjrZzUZ
ujOqcLC/QWw0QRKZfNV8dyhAA84/P/NCjO8Iirn0N8A+lgCdGXFmfX9OorY3
bqWflv9vf6h1D6shefCB9sm7efsNrxKaeuhvXL4lCid+05mGODFhG8KmWWyF
UrB0MJHc4+GDMd5jTvjjKQfJY6KvD5yrwMzGnDn/nVOEufiwiuTIOUwn+spC
6gMVsGsknZt6KIBOVxlc5XLcD7pNHSsW28UJxx5oaJcUC0EPY21w8vNPhBQp
z9PXr0nAgx01qfvqELb58hlt5OdDgAVWiVWLp2HR2amRmaPyQDQY2uby4wtG
jhw1sWZXBvu+xY9Tbgyon2/2uJ+6GpyQyGR5eEcB2d84Ec1XQYaaXxdnqPXX
Dd2gvf+QG04dEmB/6mJGuLvj3cBmqzD0DPfeFswfJ/Tr7+mZeSwJk1+X45f4
LLHqT2f98lYPg9LoM8u1T/lYvtg15WvnFMDLJEzpiMMQ9rOh685j570QlD3A
WtjQrfVJWLE1L08AKnKU/6ha3SP420vXbn8hBtcYtVVNPwli/d/9wembNLS2
p+o/lY3Avg9B0cKyHDBlrFyMcmnEKmqZTw+wKcGVrn/n6gTXMMb2jGP5BQdg
tZZOlY42jBBT8vcjLSYKgeOe6Xo0OzCXRMRUoC0Fs883TtIfPokd+PlP9q66
HKQeXDr+a60Mk1l4Z16mpwg9LXOMIvHTWEX12xsdcZxgePKS4uyx/YQPmuOp
ZkeFwHfP7yQp4VaCI41LyU4pCdB7lXa/PF0NcxMrCGL1OQRe75sYFdWTsMy+
K4J6L+Thm1yqgyNvJ1YoYvJcRIIXdl9KSZscOEbY5zRiS3NFBPKIpTllGcuE
A17iC23BB2Fi3PBvuL8LZlbXkUZY4gCaxz6FAUGrWtknQOtmgiA4FhBqV5PL
CWOPdVXo/cRB53G/yH2WQ9gBmlgn5XwZWNPXH36aEY2FN/c95m5iA55Ewa+b
oWVaPiFj+4SE+SEzf2uHenwi4R/dXoNta6LwXuhNrdSOvVhOuYP4BSZp0C07
8+ZLXADG/7rpAkmMCwhvfcT+EJQIm6wJM3uYhCGclY1IP/6N0G4TJL5rTALm
2xwwneN6WK5JTcKU6mFoGRfWxUaysKDo7xEvqslApyK8RvXTSiqh1TKh8D9+
r+e9J8G29H/v47XMSn9RruICt4zMfXuVEKHn0+sFPmthcLoxEKrLNERITagZ
Fz0kCY0VrrIFj4ywE4tHokwvH4Yz5zV+rS/cxir+WNacUlWA+Qj+ucl3vdgX
5GD03UsZzvCUFkqTmZE3E2taRaIaLH7fKSAqrYLu5Bcn6FzShLTE+b9pgbaI
yMTS7/YUA9t6p9ao7QHI8j7n09UvAJXPz0he5LqGLhP4psjGOjB8fPTMkGAW
Ol9Hb5k2oAu7GA6+3+n7EMEDcnyevT5cO2f37S1bBWJ98diyfs4ARO/a5bKL
NyJPvvJbmz0W4J1v7KeiO45Yzqsy9xdYwunRKgbek5Oo5/3EHnsPK3AY+eTx
Y/cUEv++L5bMbw3yDfdl7e2nkZOrEt/nCWvovLkQk+A9g5bY47IPPbCB0v1u
xq2HZxG7y3dnjkBb2LQOfPq+dRZ93pG2h1PLDkgChiUH5Slodfj6o22rdhBc
xlFRfBbvr4q+LrZN9vD58cDdfTi/S4ZevqV3yQFOGbs8dcD5/XsYu0OzpiMI
lAuavuqjIN/FlINFO5ygsOIkZWGSgk7fNvt1rtEJdo292OeA87tR9d+XjxOc
QVowSWh9hYL0P3VxRhx1gds7aIiyeL9uvyOzOMjgCnpz3Of48H6t9ivoZ8EX
V2i99u6zC96vGdyW6+2S3ODvl9Nju6n70FO+wylu7qB1eeJ6KJWfTh9c+7OX
CKfT5sao78v1qKut7A8gAkOM5QL1fbnQprqtqW9EeHjZ2Y/K7w9bB9uZVUlA
c4z7ApXf+R9V9YemkkCB7uweKr9vN2T7k75GAtVf3k7Ufl3WIA8qDmS4kH1w
B9WvV668Omnhwg47T5/n9eNq0LLKJGfKlfJDR35rpPpQOqFI+MAXnLqhhzT2
7d3t/ViqiLBFkoM0fIh5aZqyMxg7PP9Y4W2VHOzc5uT+iaYWe5fQO1/XqQhW
3kXPRoX+YN7fGqtebKpAb5Lb74MEEURj2d4cwaABPv6Hdl0KM0AfrnvT1XAR
4HpaQ/wx7WOo2ZyNfhTHB4/qa+IVQRFIfDbphG+CNnCnBZBOmCchUfssvbK9
uvBIoPhioEw+ynpazOCcrQeX9slZui88QzInd41jogYg1un7MKugGrlZanLX
1FuBFI+8GmvVFOJo8zxZfsUarDqi06enplG0So4k0dAGuvxFvQu+zqAom6Xg
IiZbaNceKB6+NIsMXNcNn32zBRbzB0XmtDhPLbyTnMmyA8bIpv3BdhTUoVKX
3upqDyOdU0kXknB+D3x1zkbYAd5UMuCGwvk2JLrl2KADhBApc8k4v6+Mctp0
3nGELbnbwY9xfn9n8MRmzsMJ8u685LyN87uMo+dIsaQz9Hxa3XYV53cjj4Oj
vLPOkOU6Q9+K8/u4So0l82MXWA+NAz2c37v9OLZcfF1hsc/k92fcb5F3/AXc
FNygj48+qw73W8XFxQ8bK24Qtk07zQSvd/ER0X9OTe5gv2LEkYPrM50J/Cs6
ROi1EOai8vvnr3xXWe4T4dKuBikqv7N/lRW7tJMEK8bDslR+36smHf7iOAlK
Od49ovJ7ldn1hX2tJPj8JHSZyodA8sz/JEmGLkt+cyq/5+Z3rs/EkcFxLSyT
6jcyW+y6g93/8XucbquyYgUv7J9G3ojOl1AfOjUi+FYEdqtYLOzM2iBw9FJ4
+xoPwo9dAVm2/CTsx+/OIMqGLHjVOD4SyivBoDHtW+p2RSCdlm7lbxrH8mL3
XDZUVoGfu/xH353nQhWHKTLZpurw8TrcaO5CqCItrm3LVAs61swiLctd0WIX
V1CyDwIJ85TB0oPnULXx1xuK8tqwGNI3fehEHLI26cu4UaIDvYrBUqWOucgk
zPlY8h8n+L05vI0B5/c2luSPHrXOsHIy6c8szu/pV4xf6Ie7AFMpQbMRzwOr
64JrtzVdYZb7iHUkXh8n3cVLtNvcgF6u+GQSXh83ylLLw2Y3sLzCGn4IP59o
J2O/lUR3kGW3ZIqj7gP5+2ODpYkw+gVyqe9z2e2Urk2JJcKn5L6/1Pe53rw/
l1xBIYJiDDGKyu+DW1H3SWYkUHs6Jk/ld5+Nu+OtT0hQ2HFwH7U+wl+r3yuy
kcGMdXCAmgeSZbT8yQFkCBjbZkutj23kE8ug+H1wzE3Roi5sOyFuOfIfZ7cg
sLdN9w31VhMS35s2iZeLw/2Y5/njNfIYp69NlOGsDHBfubnx6PINbHp69hFP
qDwkuR5sSzL4gNk48zFN5SrB8RvWJUHydEhdJOSPUJsqGPuidtu4Q8gk8IkL
qVkD2F7NiYjqmqORMFOt8z8JEFLM1Gig5oXilDg/bwQBpIfMcHjGXEYcKXd7
jQvxeWM0qJP6vJJZoVEv1HhgZMChQsfRjmAq9uW0ALMISP8M3s1GmCV8fd5N
S7MqCXT+B88XNNhgopSEjdtIFpaT1V8nXr+PbfQFmmzdVoA1sbMs3OnD2Ksx
hbHET8rwz5Kt4bXDXpR8e4tYNKsG77tu/XDI00AyOTnSQuOaQFicCo884oim
Lz53GVnaC9knxnZ0L45qOQv1FNjvFwTJE4ZbFdgjwoFzSkfE/oqBdoRegnmZ
KPbVSPO0t4gMHNq20G+mfglj8vs4688jD29WNy/vKW3GWM+uR9qqKUH1+6M9
Yd3rmHXEbQcvD1XoTb5L7pyQQOIjNYl+JzTg+kbT8fabJsjhskverUgCiFq8
JLZdPYl4ousCapv+j9/nZjjGSxX54KctRfLOtisEpfZtzsJRosBTE3vllSUj
ZrPJoFIRLwUf6S+pmpd7YWaBN4IFXeXg5LPZ/R9vlGPRRS+PSXkpgvnr4RsK
XyjYVfkJ/s0sFdhxOKr4dBs/qgkrNKAX3w/aNz7tGOgWJtS+F7PrThWCCbFM
teMX2gnbBY9rSp6RgNa3fOxl7wmYXYpPrvCrQ8DnH9lC4k7F3p1mPdn0TR5Y
Mn782hT7gmVro6yLO5TBTZZBwCB7JxJ4a5XcI6MGn8/GGf+RVEAWsTFt516Q
oTMt6je1/stNn6X/hHLDm6GkQVK+CYF9vaUk95kwXLV+aFFVN0ZQEnoXlJws
CV07RVIyGS0wPX8f+PPjMORp76xLXL+L9U6MXHlxWgGCmATSyyUGMdXLKuQs
yb2Q9m+M6eO7z1pRPrvmKX4C8C24OZ7B+y5hxFTyZkGOGJxianf67SSAKVUc
HtiskYbemaii69lhGP+z6kS+KTmocNAQe3SvAZu5dLqScYcSzHnsMbA0XMVq
uXwTFoIOgM4xT33RPSGEv/dWcu+Ki4Ke4vXkm8HbsBdeG0VGklIQxHzug+zX
4xjxRSjXh0NycDrVrtJMtgzzKBfPHVJVhPjshvNXrk1huyKkTGscOeHjnX87
/Mb2EsRJnx8GKwvB5MrU/Wb2N4R3fxwuFLJLwO3GdvsnTKpYBQ2Jrdz6ECTs
ntMRcErE+h9vMfgVycNZcoL105BPmJOv4EDgCg/8miNotwWSCdHmQ+J3vEQg
YaCdnn5wiRBkMJrg43oQRiSztXe8csLuXpCzl27gwPNpMi0waklrKVba8mWw
IEzXeJ0vS3hOsLsLOx/Yi0NQyv4JehlpLKjPcKX3ugykez7u6PW8inVEafns
TPy//b5gUxXyX+AD8iiTc1dxPMF3lWX/vWFRoHFECd0lbNhS4r4mkUUpsFtI
d1q55I/5nxfVNl/YD3Y3aD4d85InOKiE0qksCcFfQ8ttDENdBGTiv1L0UQKi
/cZzQUoXWxY7L53Ifxh4+9YjeXMzMZ9r/+qYq8iws0J/meonN8cLF9J4uKEj
Pfb8Nl89wvJYvcXgJWF4ThI8fPHYCOHnN92SPndJ4OvoveUmbooN0K3+DGpk
B2ID353LwW+1pukq9BJZBSBZjtnWWT+H0KIqLP/TRwxaBJy0bDV5MfESnpHk
fQfAKj16snJnIGEwYR6GV0TgEzEiE8posKf/ptozF/dBfhXv7FgBE6HncdGX
lh1C8C9sndwR1EAo+WElND4qDpyk4/TyWkpY47aPchyZPFDJPPrkTIsL4bRG
b9uQlggwLw5812ydJxjSLPTSO3PAzS1uTfNX01qF3bRhOw0FoSBkIOwi4zOC
RpzGwzFJ/O/5b6csv5bArjt4prCl8EHvqU9yD95dI1iN7no1UiYKGx/fvTl+
nRnbvz7WJBW3H35zbx5yLT1IYLxkLhPdLARsnhYeBkafCYmHxXtserlBuepr
eI6xJSGZ9uxQTcJeeFOrspx3oU/rQI/LbfMOATh5zbcq69R9gt2VBg2rrwdg
nPbX/gNHIgkeG55vh+s4gT3oZVFfMC9hqScw5osdLxj0vQtHKScJ65u+X80l
9oH1oc6HRK5/WqBtK3HygSC8jk17dbftJeH1IZbpT5b84DUo8eNAYDLhwxq5
NtCBC3LerDp7RKgSwq++1HSqJYP28vL6//Dv//9/kf/13/8DBMU0SQ==
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1: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
y+Ypc2LsQ3wHm/8Do8WLWw==
        "]]]}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->{{0, 150}, {0., 0.9999995208639614}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.627055179398941*^9, 3.627057007296679*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1599, 822},
WindowMargins->{{Automatic, 1499}, {Automatic, 93}},
DockedCells->Cell[
  BoxData[
   GridBox[{{
      GraphicsBox[
       TagBox[
        RasterBox[CompressedData["
1:eJzsXQV4lEfX3QrFXZJA3f96vzpQoFgS4glJcC+uLVIcCsXdSoitZuPu7q7E
jQgx4u7yn5nZLEFCgxUp+ww8yebVmTP3njtz5Z0lGzSXvMLhcEIl/8jPOw0j
dQ74zTro/aK9aI+kzTnkv/SE/88bHQeomQ5VFw/VeNFetEfQhmlZjNERK2xz
G6kpHj3T5EV70R5JG6Nj/n+LLBUJrkyf+MO8aM9Ne4Gr+2vaXf5/0bpvL3DV
syYClkZqCgco8QYq82S0yK9yT/6pnt72Alc9a6KRGsL35pnPOuCttc/rdV3T
UZqiJ/1IT3V7gat/bjomg1UEw1QFoUnFHfRjF5TTR8F4uLpwjPYLY+fu7QWu
7t2g7ICfjxZYbjeIAKKWHA/4Q5/8sO58yNtzzKAZX3Ctu7YXuLp3A5UaoSEK
iC9sbWvPLa4bt85BZad7XkkdoGXpnzVYlS8384VCvEt7gat7t+Fqwq9+teno
aN9wMaSfIlcOdF1b1EeRe1gcW1vfPFpXLPOCaN2tvcDVvdsoDdGbs00Ly+vi
s8oNnFK/WWk7cZOTvnNqVlF1Ynb5CHWhnNaTf8insL3A1b0b+NUQVcGsg94+
sQXQfco73Jcc98cPLmHXlXa4D1UTPPEnfDrbC1z9cxdpi/vIG3+wwKKusUVp
u/vi436l1Q3gXf1n8MbovLAHu+m0F7j6x6YjHqDE/WypdVNLq/JO92UnAqrr
m96YZTpElT9G+0Wn3b29wNU/tuEagrfmmDE9mFtcfaOCGIPWAVkyM01Garwg
7XdvL3B1RxPJEVolAYzsTNFgFZ5TWG5BWZ3CH67JuRW2QdlK212r65uvOKX0
m8F7sZtz1/YCV3c2ChURDL3haoJ+ityfNzhBQEWklhw3v5pfWheZWvwnPzoh
u7yxqfWTJdYDlXiwCp/4Mz9t7QWubja6lTxETTBUXQAxNUxV8PVyG/Bz3QNe
wFVcZlllbSPbx6mqa8oqrG7vaB+/wfH9+eafLLYaqopTxINV+cPVBbjOGO3/
us/DC1zJsaZtIkOXFH7e6PjTOvuXpxrtMoqsqmvOyK/ax42qaWj+ab1DUELh
OasEvke6XVCO1j6vitrGczaJZVWNpZUNGns9essbT97s/O0qW6BLVluMC8pS
lfrEX/CJtP88rsSgUgOVeUAFsHTEJK6hqRXi6Ij4amlV4w6DSKuArOq65oam
lmuF1U3Nrf5xhZFpJTX1zTk3auobW1rb2qETTbwyrmaWXXZIaWppg6m48Kgf
5xfDPgrcoar8/6zU+g/jijBzyJNBKoKZ+zzPWCWsPRvc0Nwy/7Dv2nPBTN9F
pBQXlNZ2dH5a2tp2G0cdFcd1dPkkXCtLya1gP0/6zfmSfXJ6fuXqs0G44Nh1
9oNVAK0717iefyvyv4MruS6NGX0j1AWvTDFceMSvtbUtPqu8ra0N2Dhvk2jq
nclwAk3nd7VQzzHpD/2IE+ZXIce+WWE7bYsLGPtfJrF7jKME7umxGaV1jS3s
+GNmcY4hufgBTAyWY0llw3er7CAJR2oIJbfW+q9oxv8OriA3hqjwB8zg9Z/B
G6UpGqQs+GihBZh5eEqxdUA254tzZ60TGDzqGpov2SWp7nZ/b67FEBVBHwUj
zni9DRdD8afItOKErHL8sOxEAGecXl9F7nB14SdLLOcd8rH0z5IKsVkHfThj
9XKKavSdU79abvPGLDGY2whNEazL/orcoWqC595x67nHlayWaLiaUEZTBJNN
fbeHa3jeacsEEKpFR/3AoGobmgGD+GtlCw/7Xr1WBr501jrxo4WWfeS5A5V4
VM6IZImu5AcnFkWllb4/3+LzZdaZBdUu4dcH0MUrmZkiQKvfDC4wM3adA/gY
c6FZfjqgrLoBP9c2tGQUVOFP78w1M/HOtPDN+mG1/TA1AS5Otq0lz/m8acbn
GFdjiDeCcIgq/5PFVoDWO3PMymsa7YNz80trRZ4ZJZX1Jy3iv1xmYx1wjQmZ
+sZmrb2evaYbY9AJKdIWj9EWjdYxgXB7e45ZbUPTedtEzg9/c8ZdsfLPKq6o
H6MjZo7u9GBK1ZR5/RR5f1APQIlmNL365TJrt4i8q1llntH5sRll4cnF0ekl
AOGbuqYfzrcYpMR7Lj0inkNcURsfAz1KiwgBoWdGfWMrlN3cQ76w7HQPeDtQ
ClRd1zRCQ8j55qLqbg/8CotPeac7QMUEyE0WpG0Cs+7njY6UNTVtuRK2jxfV
0Nja2NwC7jRMTXgLX9ImIHx1utEOwwgGVGhAzjcXJv/uzGD2lzBmp1HktYKq
2Qd9sotqyqsbdxtHUhg/b+tdzyGudMRD1aCYeJwJ+qvOBMH2B2C8ovOKKxua
mhjBbofgam9vP2OZ8ONae7fI6/hqHy/6lWlGo+/wTwBswMeASRzT1NIq9Mq0
9ruGc/Gryk73gcr8Ox8AeO6jwLULzsExF2wTf1xj5xKe29zShptKzIGaRiD8
ol3S6rPE8PxutR1nsiEk2PO0bv+84UrbBIrvu9X252wSN10K3WEQWVheB0Yk
9mImXru57zULn2t1DS0QPlJtlXOj+u3ZZoTt3C16q4+i8U4qf1afC+b8YgAM
wBLEr2vOBgFyd+lSbfFAJf6kTU6AtPQWuB3gZOCc6hdXwL6BugQyYTlq7/c6
bBILUfbuXDMIwOeD0j9nuMK4wP66XlKTlFNRWFaXWVDV2iYZXBh94zc6fr7U
qqyq8Yg47p055gAe++vf9km9pxuPnnn3kMDe8ty/7ZNx2P8ttoKAAoP6cY09
fj0kioVcuutjyGqZDKZUH4eBiWnu8fpwoaV9cE5MeukITaH6Ho+QxBvSpYyC
0tq0vMqCsrqgxCI5bfHzEUH23OBKjixJiQCPXUaRpVUNnEkG3660Y2OXVVg9
66B3/xlczkT9bfrhGMcBSrxByvyXphr6xOZ3kCgbf6ihbi5rgoPN/Yi4Axr7
K/GGqgmuOKbgVz2H5N4Kxt09Tx9543N04eKMVTxn4pU+CsafLrFqaW2T3+bG
mWwwXEO4+XJYdT2xRiFRcZ2PF1ngZ6Ud7njOrg4Vz2h7PnA1hgQjEwfOPopc
7T+9oXFm/+VzQBCNkXIOy4WBD8EiC4TM4C0+5gea9PVyG7AvWHkZ+VU4ZsYO
t0F3Y0qj6TLFMHWhZ3Qeg2h4Skn8tXL2M1QqINfdOmdfBS4LDXMKy+2rALJ3
ZcFh37b2drbIMEpTCBvhp3X2CdnlANvCo76g+pBsX/5qjWsCWrJaRBvKaT2r
6Ho+cDVSQwjKfcEmKS2vKiihsLpewp1EHulDVAXEsVNHDABAxchombhH5gFO
l+ySk7LJ/gtI+PStLoO7wZWMpmikpjAyrZRBVH2P58z93r6UI7lF5A0hbgx3
H3rgausVyYKDb2yBvlMqrL+T5ldxIwlatIlF8P48i+j0UnYYtDbs1sTsii16
4UNUBM/0yvxzgCsM00Alnsgzo7a+eZdhpE1gNhsm79gCSAayFKAjZlY8Ruq1
6cY7jSLoonpLcyevnrnPE1LirhcHFHFWfgkoUBUABrS8Jm8MQVdc0RCTUTZC
QyjTjUjBkfv5Mez6eLC2NmJCKu90g8Idw47RZh7OvI8WWubeqGH25iW7pJMW
8SSs7ELoXY2CZ6U9B7jC4H60yKKhqXXBET/OWL3e8sbRGaWgLp8ttYZ2Y4Mo
R3UlftXY4wUJ9Yd+xOu64k8WWzEQQj706YYpkbQMc83rGpoFHhlQnb0VjXEk
5xd979jC7KIqgKo7XPVT4Jr5ZLKl0bdmm74z15zvnl5V2wTDYTiN4pHsVGqb
QEdr7fXEkYYuKZzxVzjj9MDf4q+VQWTJvtCDT6jJUWYFBgVOte1KOGe8HoQA
bKtjZnG9pnddjyJip78S1yEkxzsm/6UphsPVhRjQt+eY1tQ3uYblDujGo3iE
uhD9U1PfnJBVrrbH46Jd0inLeLU97rhFfmntaB0oyrssOo3SEL6uI4ZBejWz
DI8BdTlIhT9K06SkqmGXYQQofdeDZbVN+ipy/a8WekblvzzVEBaHXWB2WEox
NOYLXD2xRleqYdmtPR9UXtPIdUuLSC2urG2CLJJsx0iHbyZRl0EJRXyPdAwf
cDVQmf/JEmvAo76x+fOl1sNvDQZkRhm+/OJXmxpquN32ySupldMW3xVXA2fw
NKkI8ozOhyYdqMSHUIXKS7lecdz0KlvTuHkjQrS46nvIsr9jaK51YPaN8vrJ
vzu/hnlBwqufdA8/UHvWcYVux3hN3ex8xjIR8OhcqsqCGpK7bT1K2wTcZh8v
qr6x5aOFFu/MMbMPzimpJFvDpVUNny6xGqZ+Cw4Z/4Gaw/jOP+LX1NzSFVTQ
aLMP+PSW596Ft2uLIRhVdrnD0EMrKK372yGpvxJfcy/xZ9bY4znoVi4nR+Ub
/mfGKT7ZRTV7jKP+t9wGyH9Gl0mfdVxBf60+GwT7PTK1FAZaO6XHe3nRt+ma
0XQZHKIDhmFI0o18aKhrZVKQgFSDY3N+vgJuNpSk8mB8jBw/TEMIhOw0igR/
w5HJuRWw2igU69ecC54GQ1KFL03RQF1P+a9OM3p5ipFVF7cZfIITbzS1tOg5
pOD4O1cP5LQwO7g2geSUqromh+Cc9LwqiN+pm10GKT+T7P2ZxhXIzyeLLRua
Wo6aEjbVa5rRb5fCMDSrzgT2v3Odk/gniGEejtAUwt6/Tanll9adtUzAdX5c
6wB1CWElo0US9IkkG0DkA2NtiJpwpJZI3On4197eccLsKoZeTlviTqO22/Os
dcJlh+TmLps4+DQ2ty47GQjUyWje/V36KfKMXdNwmPxWl1emEkrmEZkP8A9T
F8o+gyvwzzSuAICZ+7xqG5rfm2cOOQPZNVhFAKUGSXL3nTuy0SMYoMzX3u8F
GYV2yS55wRHfgKuFUgBASij+4TaYXm35ycCuwPhsiRXuCI49doN9V8zIbyPH
g0Rtvhze9XvnsOsLj/gLPdLxc0ZB1dcrbKENu9umgY429bkWnlLMmWhAbQpj
lZ3u9U3Nny61HPEMZoF4pnE1RIX/y2/OkBqKf7i+NNkQ477yTBDsu19+d6a4
EslqmVDvJhZqajJMVfDpYiv/eAmKuG7pnCmGsA3fmm2WVVgtxYNPTMFgVQFo
laFLalddOeuANwYd9hrkYVf87DKKhO77cKFFWVUDFWJEF8dmlEI2vjzVqJe8
sXMo8cxpam7juaXJ0Bw1EuKnRT2TtcgayCtTDf+4EgEypr7bA9OEM0F/t3EE
tO2bs8SjnkE/h2caV2R7V1XgGJqD4TDzzqygjigYVBOvTMglAANkpr8SEWJy
dL19kDLfOuAm7dluEAGQDNcgwacQFNLvrxVWvTlbDMUKwEj1HWE+tY37edHH
za423srh5x7yAX4mbXLq+qVTWC4QO1LThDNR/4JtkvT7bVfCofJGs53HGTwI
wIEqPPCx/1tkJd2Mzi2ugdHa3NIK1tcPE+QZdPx7pnE1miRpFLyha3q1c8+O
wop8LtolHjGJg9ku8MiQ3+aKsRulKXxvvjkQKD0sPb/q542OIFGbL4fdAonQ
XCAQmHx/vnlcF3rvf7Uwv7Q2IassMVt6uw7X8OsjNUms/btzzfK7BO+0trUv
O+E/UkMov9U1n9wU2CQ3dQm7DgOWOTwsPuZv7nvNJjB7h0GkE5Vp9MEkr4An
H6DEl30GQfUc4Iqton+6xKqrIrvtU1PfPHGTE9kj1hGnXq/slEBk+KrrmlJz
K+IySys6ne5yb9SOW+8AIvT2HNPeCsYfLrA4KIwReGZAuL012/R6Sa1fbP7r
s0zB8CFSdhhG0lUF3us6YjCiJcf96jtjczLzq7OLqpNyKpgXVjtRj+SOYq8M
Fj3Rlbzd+YFtC8YOonW3MLFnoD3ruGJbIX0VjJV2uLW1t0OSzP3Ld8PF0OJK
CdVh+DFySe2jyO03g/vbpdCuwwfbLT6rzC+24ItlNgDJb3+HfrrEmjNJf+w6
h5j0Uu393sSR7+crYDuc7y/toP4JEEQ6f3pzvrsEBccZrwdmBXHnGZUvoyV6
eYrhhE1Ou42jVp8J/m6VXXFFPSxHsHfp7eqbWqZucRmgzBuhIYzJKO0UUG0U
zzXLTwUsPhaQc4P4JwPPkIGju3EJe/rb04+ru3bsbV8OVgaBd4JhOHa9A2ey
AUZ8zdlgiVyiWgW0ClJlmLoAlv7q00HeMQWB8Te2XgkfosqHsMIBa88FE/yM
03tlmtHE35ySaahpU0urwCN9yXH/uYd8jbpwePArsKzZB31XnAq0DZJsc9sF
53600JLgkF7E0Jkcf8kucYiq8KJtUnhysX1wrvJOd0mCbh1xTlGNVPHhowMM
TzLA6eDtVXWN/1thM1xNwOINpS73PemKp6Q95biS1RIxj4KbD3y3zgT71T3g
DWnwzlwz/PzKFEOVXR5d5dK688GvyRt/utQKaoUz8UpfRS4aRND8wz4UeOQf
zMBTlvFQQPdQT/f+VNc1m/lknrdJjO9kZRCbny+14vz090Alfq/pxrj1B/PN
359vAVXId0/rcmr7T2sdek837qvI+3qFbWNLy7QtLrB2pXCiMa2d70s3d9iX
Mpqip3MP8SnFlTbxUoDaGgGTnDIoWclyolhGi5hRLLy0/wwutA916hO+P8+8
tKrB1DvzzdmmX/5q43+1gK2QNza3XnFMhnkIQeEemecfVzjrgPc3K22/X20H
ysTiB7t+IDqyC6txmKnPtQs2Sfu4URsvhv56MgC6T2mH+5TNzmgqO93n/OUD
tfX75bCDwlg9h2TIw9Ck4sLyujvBlppXufCo3/9W2P6w1n7d+ZDU3Mqj4quQ
qB8tsPCKkmC4qq7ZMSQH4g6Qc4/MzyyokmPxRDpkVx390J84+/EI4Z8pGq0r
Hq0jHqlF9jfRUcPUhEAp2Up4mvwAnzZcMb4EmYMePiCIiUwtBfU9YX4VhhUs
o6GqgpFaopWng6CVoGiWnwqUmSkCZkCb0cmqu9yLyusra5uY8pt1wOfnjU4/
rbN/TZ4L/fLb312NvnbpTyWVDQHxhXqOyVCF07e6fLLIaoiK4JWpRkQtjteD
hCHqaYpBb3ljmPxzDvoAlhjHPrjmZEOi9SYQ7Yn/X51mjLnw5TIbPMYf+uGw
5sCgukZnSG9aWdMEcQRoDVEVTN3sApBv1SMLqi2tbTAxwPah02EtQlfigDdn
mW68GMJ1S9d3Tpl/2A89gLuMmimCFWzknJacWxmcULRFL2yMrnhwp3x74oP4
FOIKemqQimDsOvv0vKqus37RUb/Xphm9MUvsFnmLngJTeneuOS0pQtAIugt+
IvLMZH/6arkNUAdNdNIiQcK06Kemodk3tuCQSSwOfmeuea/pJFIe4BmlafLJ
YqvJm52XHPPfYRhxwSbRxCvDJeK6/9XCqLSS68W1rW1taODYMeklQCMEoJlP
xkW7JHB12HcK21xxLygsArmfr/RW4H68yHLeYW/wq6i00pbWVukDlFU3rD8f
8s4cMxh9yjvcsynXwjxSxfPMMSNO0QRU/M+WWkm9SdkHehYSGyDfrh/RFat4
PNx6KCjZ02E/Pm24wsjKzhSzTWGn0NzvVtr9YUDm8iW7JM7PemxjLv5a+YIj
/guO+LF1JNugnEHKEhe4kerEpXOwikDomcE6PD2/qrbTy6W4os7CLwtK7f8W
WxGJNE4PiPp4oSVoOUiRdUA2yJU0yu/Oj5X/te9W2323xs7y1j3lrp+y6kav
6HynsNy/7VOWHvf/dIkVeB1uhP//t9IW9iYsR+laRFF5Xc4NyfLItivhMC2h
7IhPdaf/c2gSWSmFRIKQXHE6MK+ErI+dsojHBW3oAi9uMWmTY1ACCfxxi7g+
RI0v+3SIrKcNVwOUuGAy6CV0KUQN9Mu8wyQm9Ig4DuOCH26U10MIQCAAGB8t
tGAzXWWX+8BO55Mx2mKwMiiFXUaR5TVNUrG26kzg+/PNOZP0IUnQ8+BIsOmC
E29U1DbFZZT9/neY8k43KJ1b1eXND3ja+gshEBTA7YaLofj1roctPeEPgQMx
CN2UmltR19gcmVpyzjpx5n6vN3TFRGlONvxyuc0uo6hYyTpDByQz2BrsCFla
jY69RX9F7pLjfvhrdHoJBBSRqBP1J25ywn3rGlremGXKcyO0f/o2V84EA/zK
vCx++c0ZUu6JD+JTiCuwa5bf4KAwptc0I1DWZSdIHn4IExatsMs4CoLrvXnm
0Ikw53fSrZazVgl9FYy7WuIymkLMfRB4cBL09stTiGKCJNTe7811TWOjIP1g
0Dlfn39pikEfeWOWN6brp6W1vbahBdS6rb0NEjI5p6Ktvb2yluQMuc1pAZ9f
TwRA/b2E2311fimtICD95JfWmvpkzj/i94aOKdQuHk91lwcE0btzzMhmjbZJ
15qG/ck2NBHOS477w5B8c5YZ9DVeQZ+GmNkGZbP8zKo7PQap8DHF2Fbm4uP+
T0kq3acHV3IzRaM0hX0UuWvPh3SQWNFk/AyxA2YrHRqoGMxrsGK7oJzXdcWv
TTfW2EPcMkWe6bANb7kg8Yohuzy9FYyhU4Tu6c7hJKfxXYVMXGYpCJKRS5pj
aC7Ei31wLtQiFBNIHUg4WPR3q+zAu8DWzH2zzHyufb3c5pPFlt+tsp+0yUlp
p/u8Qz6bL4eesUqwDswCE8MUuGSfBGmZJlnbv/1TWdPoHZ0PKxU8CtIPFh97
Wqk1B4Y2WJnvG0v2x2F69FE0/nCBpV9cAexKMCjpLlJzSysmzlA1zCAuOgTf
6BzwYlmYnniCmqcBV8yDbsAMYkS/PNVw7HoHdBF6T5bSreEaQgyxbWA2hh6W
OIird0w++hki6KWphnoOZP4eNY3rq3Cbcy+LwYGRzltwmCgU96i8mFs5cAdd
VcjIr3IJz4XtD8L2wxo7WJ0Qg8RvgSyzwxjUf2ky8XkAAHAp0CSoQhKoqGBM
ZOBk4t7A+ZnoVuipl6cayWiJvl9tB7MR8hYAS8gqv1WmtYP2hyYXu0eSeFj1
PR4DlHhj6G7UbX0CeSX0JA42+/nRsDrxAN+uso1IKYYJAHIIVgCRtfJ04DA1
IfjYBwssSqsa6xqa319ggedktTAwm+687H8IV3SpSlZbdNoqIS6zjOeW/vZs
04hU4l0wYaMTzGriPzyDC6b6/Rr7jPxKY9f0z5dZa+71XHUmyNSHpBiqa2z5
frX9UJW78ApIAEi88JQSgAqKaVPnJk5NfYtPTP5Ow8jJvzvD8iLm23gCIZC0
t+eY/bjWXueANw4+YXaV75HuHEbswcjU4oTschgUaAlZZRGpNwKuFjqG5OCB
j5jGQXuCFv601v6tOeaACmNxuCzmy7j1Dpsvh4HJg9Kzuy89EcD55kJEaoln
VN4AJf5d8xQNUuIp7XBjxxs4p644FThju9vXy20hS3EiiCUeeIAy0Z4DlXks
nMc6IOuduWY2AdkxGaX7+DGwkcmS8hOqtPJkcQXdR7IQq/HNfW+6ZbqFX2fe
LHP+8oWEh7zqp8iFyGppbdthELH0eADmpvTgG+UN84/4dBf9J0vW6sU2gdk1
DS12gTlNzS3+cYW/XQz96leb3vJ0bWGy4Rhd8dTNzlsuh5n5ZkK81DVKV0rb
K2oawcQwTIHxhW6RebAHIYLQ8INHVF5gQlFsRtm1wuqKLotUNfVNsZllsFs3
XQyFliQxHVMMcCNwxf9bZLHsZCAQXt/Y7BCU09DUInBPH6Ep7G7BHC+17nxw
VV3X/CS1sAigcGFRApwQniNpDkC2cWnkmsoyQrAPVPlAZf6TCrt40rii020f
CSjILKievtWFWdbsg1+hkiDVTagz8EIw3tlmDU2tTc1t+k4pf/JjICU+W2p1
O7O6teH0oar8eYd8YTmes0nkTNbnjLsMZQHpt1Uv3DXieqcnA1GITqE5fwlj
lxzzn7rF5bMlVrDsIPGGqBIHrX6KxvR/bj8FLk7vS3+GOMUr4LDPl1rjaYH5
IyaxrmHXsyV7f2Qfxyk0d+OlkG9X2uJ43BqqExw7La9y5j4vyNLuwqVHs5CQ
GbxvVtpC3O3jRwu9yMoJyD/OwizroJvmsP7AHMC7pJ0G2CvvcGerJRKB/9/D
1WiSrcX4pHl8B83bwxmr9+lSK0iGrKKaQyaxANX/LbYEkYYhprbbgzNBf/Jm
kqAMM/2EWfxPax0gbdhexr0sIJKYXdSPuqyD9H6zyg6MRZpjISm7AvMadOiL
Zdaj6NzvS90eMHbDKXUBS+nc/L1Lyln8iSw0aQiHqwmID+EMHkHdDC7u+NVy
WxA2PYfkTs+cjpj0sn3cKJB/aChZmlbrH7ZdQOZ1xHikV6Ya/vK7s4EzYZLt
He3gV2BckFeENEbmvaErxgPjRjk3asx9r72uS4xN5kmIeUfMwyexUvrE5RWE
OVg3wZV+OAzAYepknwI8ARQFeqSovB5aZiJsInmyjDBSU3jS4qo0/7AFulFH
jC//wbKmJjyuwEoHtra1wxzbcCH0fytswXthbUHjkLHWkuwiEefS+1cfrMYE
LahKtvaGqQkgSKn3guC71XaQOYHxEiU1c793d+lrbmsj1ElyXY/ObUSSUt6Q
5PcDLF+dZgQ539bWnpRT8eUya4hB4uSvht4TQcWzHLxrzwX3o9lp/oO4oq4I
PuiEgPjCISTGSkwssqlGmvu8Glta0ZPfrrQDB8Zh/RR5Q1WF0JuwjHYZRkJv
4qzdRpGQMD1wfiPZZX/e4LjhQsiXy60HKBFdhgGS6Ux8ffP/h/PPvM2nhbgc
0G1NkghXmf/NSruNl0K/X2NHMuL+E3QhIfHKLPUWjIXf/g79bJk1NCOuhlcm
1sF4vSmbnZtaWksqGyZuckKnyVK9DykHPQvZNonuMz4RivWv4apL+nSRnCQn
PxlTzNxByvyU3Mq2dtYPgtemG8+na+xgKSA56CUwUpjVW/TCP15kCfmGAzjf
XmQL44bOqX1p2eV/vDuug7mM2w0jYyr+91d4ZGnaN7Zg1ZOCmCyxkkMI8e/S
pZ6Er8kbQQB+scxmLy/KLijngm0iMAZoQYDXNbSo7HQHqcC8YxsWvrEFUKCE
unf2wHOJK8wj9BJJ7EMFAvMgGqrGV9/jMeuAj4UfWTGAkAezpRs37TfK60ni
zQn6Zl1MxRsVdQcFMRM2Oir+4caig+ce8iUOxj3AlZxESYlHS5a2nlDrzJ/c
gyMJcdpMp09YcvHPG5ymbXY5bZnQ1UcCtiGk1vRtrrUNzfVNLSq73DljL5+3
IeTqb/uk2Qd9FP5wG6pG5hHDFQzkoSqCfyEJ87+DK5Z4SveA949r7KDsSIJW
HdjRfLZHI/1o7fVS3OYKwVVa1TB2nX1fwnz4rtTRLiz5Bt89vb2Lf0sH3c4g
ukzzOS3iQJeL8WqB8YVd37q+qdXIJZUVT+G6pUFc95I3ZmH7tQ0t/1tuu/5C
iPTg5hZi8tB4fBNYIugudKzKTjfGJx/fwz9uXNH4OBEmiDTE2Cog663ZpmCY
kF2BNCDUOiArJqMMUn3iJsequqb6xpbx6x05E66MpMn8J/3mDGsdnQbq+90q
u3PWicGJN4ITi/bzY0frmILZjnniAHhsuCI2rLrg3XnmJ8zjIbIC4ouOiOO+
+NWa5sjqgAH4zQpbiKPhGkJQUJb/IaeoBr0k9MyAHe0UQjZ3BB7pfemSyIcL
LKTesJv1wrpb9Hsk7V+QV0NUBCR6tKPDMyrfwIlsj9qH5AxU4Q1WFQQnkNWq
8RscYf2hD5nP1bxDvj+ssdPY4/nRQksY45xxehN/c2pqbq2ub4Iigx0ELkqM
ekXeKI0nuVXxLzSWiJ7RQvbWL00x+L/FVuil8upGAAxwAjw+XWoFUMHA2UTT
CAQlFOFIzkT9WQcJ0TL1yQTvGqEpZO40F20TATmwfeKc9thWt/4FXPVR5MJ8
wxvBHOP8dBnv1UHTqnB+/PuAkKQAdQrN7a/AdQglk2sPN+qwKFZiVlc2YN6t
ORd0np6C6fm6rpikXtEifu/Pp+67S+usCEwjo0eoCVg+rqaWtoPCmPUXQi39
rrE0Sm3tHRDp560JubrimDRImReZVtJBslUEcb7/e8VpEla2jxfN+f7iTLoQ
veS4f3+Fx7UK8dj1IM0OdMiEQOWbVbaYOO/ONYOyS86tGL/eAQdcoy4rkXRD
8G+7pEEq/CLqJR6TUdo16xTIqvZ+r7vm4f+vNZjPv54MADHoas7EZhJPyKi0
YnAt0E4QUeZoGp5SDAtxxnb33Bu1eSW1o7REvaYbKfzh2kFiSUL6PrO4Gk3z
U80+QATymvMkr/649Y6lNI9BVFoJDGeYyTD9OkhQVduCI76wGdla8SnLhHfm
mK0+E3TaMv6AIOaH1XaPlQ88Q02WdCl36maXo+K4Uxbxi475j9EV82l2kT3G
UejAzZcl2+tp16u+XGY9TF3IgnZTcys+W2rFmWTAEp/SJEj8ZxRXcjpkw4IF
qt8or2Pbf8BVTV1zXknNGB1TCKik7Arp7MsvrWVJXC38Ml+ZagTC2UeB20eR
pKV64gP6tDRSP5rUvOtNnXb60o1LX5qIHsK/uKJeKsc8ovM4Uww/WWxVVdcI
gV/X0Nze3h5wtZBtiS466jfgsaXG/RfkVV8F4wuUIFXXNUHjn7dJPGQSBx7u
GJLbV5H3/gLzK44p07e5rjgV6BtbABVZ29DsF1vw3Wq7YSyKnK29aD9FQUxP
ttHeILm8pBWmhqjyp2xxhsEIU7q8usEpLBeMXedPL3T7KC2TYeqCiJTiitpG
iH2uS1p8VhmLbtvLjWK7Y4/jIf8FXMHCHbvOAfOluaUNFN0vrrChuTUpp/wL
ktJTSLdyiOMu8Z1T5L412+z/FlnR/NgCuigtHv10BAI8PY3Or84pRvY0RSwi
bJSm6NPFVtCJEGKcyQaQ9oNUeKQKlapg3AbHnKKa6rpmj8g8l/DrkFr5JXWf
LSEpVZ9VXHWm5vjlN2eHYJJQiG5dkfRQzB1UhrjK8Jee8PeLK/CJLZi2xUVu
Juml/k+Hn/ZT3pgkl6UOosPUiY0MWy848YZreJ7GXo+BJJEgiWx9a44pc93J
LKzCEFj4Z/24xr67UgiPZtD/nX0cHZKWB+iS0SLF37fpR3jH5H+0yGKgEp+m
KQvqup5c29ACkb7sZADE+9MZJP40NOmkG6UpHKEhAoONzyqXRpCxj/puTwiu
Acq8r1fY+McXrjwTSIeA+Lxh5j7Wpb9/A1darOCjsJ+iJBgcViFU3iAl3voL
ITy39KLyevQJ9D74pLFrqsgznRmMfwpiXtiA3TW5zj1WGD7GriTmK7uoGr0n
9ExvbmmByMorqU3NrRR4pM87TPxpeysQ5QhE9aclg2W1Hm8lzX9HD5J1XR3x
1ivhDiG5bhF5x0zjvllpy5lwZR83is0sQCgtr8I6IIvz85VeNCDdn27xTNrk
+FjF9TPdWI5x5r0AOAEtr041emmyIYzu0OQbsI9Y3xJ3+olXxm9wvGCT5BWV
bxOYs/pc8EgNESuj+azyK21SCuTNWaa+cbdsnsI2XH4qAIKLdctRs7iU3ArH
kBzMKVo0zfLqtfLaxpavH+dew7PfRJh08lvJIqd7ZN7bc8z7KBAnouj0ksD4
QiOX1Iam1vHrHWEQ7TSKbG69JdTR0j8LvEuGhpg9jmd7tLiSOlnhgUcwD0zq
7HHWirgvXs0s09jjOXWLy2Xqq9ZBA0JfnWaUfaMm7XpleEpxTX2zhd81dBFL
pbDidOC9fddftNEkIoy3h0fEfmNzq2Norl1QNiDkE5MPLgGZzxl/hbk3tLa1
HzOLn/Sb8+yDPllFZJl0K8l0ygX1BYkdqd5t+MaDtUcvr6j1B0X2/lxz/DBU
TfDWbNO8khq8NfVIN+ijyH1lmhHz/E/MLu83g7e4i9s/XRqtswnKVtrhPuCF
BuxBAx4GqvAh9j0i8290WRRta2+nxrVJSWU9QDX3kA9dyeHBUFLd5U72O1JL
RmoKh6kJh6ryP5xvMVxNMERF8KhI1yPGlbZJfyXe5N+dAq4WFZTV6zkmD1bl
f/mrdUcHydA4XEM4StPkwwWWkMBgmywl7Nj1DhBZ8w77Qkz5xBSo7/Ecri4E
omi+haciNcpT3uRmillqZTadlx73R+c7heaq7HJ/abKB2m6SX8414jrYhexM
0ccLLQCkt+eYlVXVw0p6XccUQ2buew2AdI/I/3alLYj9I7ETHy2u8GrjNzhI
AzDx2S+Ifl3XtKW1NTmnoo8Cdy83+qJdUq/pxjiSJY35eYMjbF7YwkAgXpmU
BbmDTMqRWC0S8DJEmT9E5W6t83smzMdQUjf4lmMEt50rKT6iTVT24G6udl+N
XQRmr9QfbBiRANILCro9UZnPcsiMptkIuzwPqch5j9uxKLMuACPnMnShM/ED
5Jg6zTPgFnm913SjvjNI6bplJwNlZ5pU1DZdL64ZqMznut3Mbwn9KKlX9TTh
CmM6XE3i5HPBJnHKZueG5taahuaZ+zxrG5oTsss+XGBRXNmgvsfj5cmGx0yJ
mx/IOTiYjJYk5YVExWvfEg4jp2Xyho5YcZvrjO2uk393nrjR6dbmiP8nbXSa
vtVFZYf7u3PMZTVFozSE/1tug19/+a3LkRvIwZM2Oclvc4UigNiU0SDVAzF5
u15wAmmOEzc54Vy0SWibyJfsCvj5l86Gn7ueNZGe9d48c1Z2BO8CMqO03W3K
ZpeJ7Jq3Pzm5vjwee6f7V7/asDoUeKRPFlmq7XIHG/+FvKzjbc/GfpjyO7ny
9C0urA7szb7SlgwEczOG0YfnKSqva29v//3vUBjgJGHg9QoMRFVtU0ZBlS71
ByiurP9+jT2rlmjmc6/iwk8EV0NV+BM2OJJ98+uVI7VE0OPnqKlbUUvEl4Fz
yi6jyMSs8rfnmjGvRTAulV0ebIXqtqCYm+9F6tRg6E0NnVNjMsrqG0l2IPRS
S6u0Scyc3OJa57BcVu5tMKlf6eETW9jU3Co9jFUs7aABsPbBud+vsoOlyQq6
4YDW1nbQ3a6517p+WGUueq9uDmjBX1txAeLUpMiFgIXZ8pcoNjylpLJWEvcq
vQh5GJbVtJ0sOnlG52vv9xysImB9CMw4h11Pz69qamm99UTyhOwl6hpb0BuX
7JNe1yUVx9jO6a1gELGl+P4zeMtopCE+pt6ZHyywLCirXXEqEJqxg9Z4wv/b
9MM5P1/5YAFJpIkr/99iyxHqDyuyHiGuwIi0qCusVcA1aDoSBjjHnGWTTs6t
HL/BMbe4Zo9xNEsgjA4nbqIT9Acp3Svml0XzycwkQcfQpzjlimPybWNa39iy
+XIYumWYukBavRTogrHzJz+665EB8UULj/i9P98CV5PRJCn+cMyiY1197Nu9
Y/IPCGOXnvDX/dMLDULvBHX6ZR8Y70rbXdmfFh/z38ONAQa6ukJt0QvrJ89l
ozyMBix8s8LmoDCm6Y6MRiZeGco73T9YYDGSLJgLx+jQ4aAafJi6EHIGAv+S
XTKgdNuJl+yTx65zRG8MIdn57uExK5alg4JOhhGUkku2zy7ZJV20TYxJL4Ec
ZiUSPKLyRpHQWtEgVT5LizFurcNdk108KVwNUxH8sNoOUz7nRvXruiTDITQ1
RC5MlVEkKWhgQ3OL6m6P9va2gtJa5R3uGns8l9N0FiAD3YWHyHXm/h0tIQ8C
cFHpih/7EAk/idQquuUi2ia9phlKd4gwE1eeCYJMgEE0UuNmHGtfBe7acywj
N9mynLrZheSKkSeeJ6TIyAweZ+IVpizYZ9OlMBLMSBPn0iyjxn0VuT+udfDr
XJ07wI/pS0vUSddbwII4vxhslKTVkpSTgEXz0hQDmp1PxHxfb6p+bRLhRWpY
KPM5vxh2Fh+XnEiS9U02INsxmreedUeT0SQJVTT2opOD0NuzD3pX1jahH1jB
TaUdbu/MNdPe7/XWLFPYUyBaX/5qU1XXCP0I23DEQ1fkebT8Cl3hGk4ErMgz
ExjACKLf0PN4bGgfu+CcN2eZ1jfenoJ4q174wB7v1wxS5o3f6Chd5UM/fLLE
ctgd/YAuxdDE0tzsEakl36y0eU2ehLffZkcDV9tp0oyU3Ip355n3oSqs6wED
ZnAXH7u5DLLdMLLvrZUNaXlfknIqmFa3OWuZyDK8dUG4GA/z9myzos7sW23t
bZN+c/znVya5jgUfLbCU2kHQjD+usRukfDM/bXdEiBUDOmUZ33HrJ6+kVoZ2
i//Vwl7TjEiMgKaIxZgzcnLFOfmfA/z/XVzBloF++WaFbRH1/+S5pRN1Qyo2
8tWptTvvkO+rUwzXXwgOTiwOTCgycEq54gA53369pBb8c5RGj+aIJN1TZ1en
5VW9Ndu0a/E1mupc9Op0o8Ni4vwM9gKVMUCJdzNwT+umK1c/Be4xM2JBgCr3
lieLhLdF9/wjrkbT/F0Yi3HrHfEuQs8M6tTUZVy0xbJU0UhLO4FxfbHsn80u
Eo+vKXpDVwxTmp1YWFb33lzzkT3oKNCAz5dYQUGAQZ21TsBYBCcWwaSaf9gX
sv0PmvN27DoHyAGIJhjg7pFEGiRmV7w333w4yNXTgyttElA8XF0Eo+N/K2yz
qc/nX8JYDGjfGTz74JzKuqa3ZpuBS2AeDdcQDVUTYL68Jm8M0gUC/8Wy28sr
d4srTcx9U2k1nOj0UhmafEMKKmADl51z0Ad/dQjJHkXN9jHa4rtObeBK5JUR
lVZCayHdJRajJ7hiZ/VW4DqFX/eOKYB+vO06uDJsBK/ofHaRiprGL3616Yk5
L0PKIggjU0vYiZD5b80x6wmuhqjwx9P0dKHJNzgT9dEhIHugCugKSCeoPGhV
EK3e8saDVPislAYYL6gsVDYhe7QGMbnUg8YYPjJc6YgBlW9X2x01jVt7LgR0
orahpbKu8Y1ZpqBYYLZct/Q+CsZ4L6hFSIbXphtDX8w95AuNdq2gegwpwN2j
OQLt9vYs04y8Lrii+1w3KZMiF0Y9bLOAq4WE3hBQdXs12G7ukXmYv327ScTR
E1x1HsmDURCRUjJcTShz63wH8YP6dqTRfPjkl9R9tNByZA84jCx9NSmu4q+V
v65DKpX/o54aoSb8hIbtoMlvc+2jwCWZBhUIbxyiyh+gzPeNKwDXAtK+WgGM
dRRXNMw/7Lf5cjhMDFLqWk0w+uESsj0qXAHkwI9UjDA7uqSyAax1I92f0tjt
+cpUo+lbXfdyoy7YJnHd0nzjJPN3m35Ezx2tiZfabNPM/LvIK2bffbfaDsI/
NLGIZr76By8jaIElx/y/+tWmOyHQc1xBMEJB/3oykDra3fInli+0sxJcR05x
7QfzHwRXkKvMFuhJR6FLz9Bt2Y72do/IfK5rGrp9u0HkuPX2EEqsNCfs93fn
mndNLN9B6Sjxa3q4aOhHgis5KiVYlkVM/0MmsaAEYD5Ljwe8Ns0oMqWkrKph
qJoQ1p90EYl9cm/UbjcIH6wq6PmmJ4bvzdmmGQW3yyuov4G0YBzYXWJ2+Ru6
poN6siWhTUacUrtukub1GFekxgpd7r5z++k2XOUWV38w3+IBcBWdXiLbY1yN
0iDnHjaJ7RpJ0UHcJptVdpJqCK1tbTYBWS9P1t+qF5ZRUBV3rWwvLyqCkkCY
wP2VHqqa2KOSV307M+oAPJxxeuBaMP2gviE9Ooh5mAEt70cTZafnVx03vaq+
23Py7854u34kXa1Jz7cCR96JKy2RLCFRgvfmWeQUVSdnV7xNSzY8kvj6+8FV
t+0OXNV8sMD8PnCVVvoAuCLZgLVI2t6PF1pO3eKi+6f3BdvEwjKCMTOfTM4E
/YD4wrqGFsjYPiSswFR2pojz0+W9xsQ1AsSg9/2/5uPBFfeAgESlXbRLfGmq
Idg1Xh9W/BY9EuG1+KjfS5P0mUXfQYnrJbukwarE2+HeizA9wRU6ZJASD0iO
yShNyCp/d64ZiRd4RPvyjwtX8y1G0BRY926Et2s9oLyS3HommXE0l2YGy0cH
lbHsZABwxVLfz/vLt58SSZ00XEPYa7qRFc3suvJMIEnI9hB9+KhwBab3/Wq7
hqaW9vb2jZdCgXYYMgOVeTBgIW+/pObPMHWyTHfGMpHWpe2AlqTuVfdn0t6B
qxLYAhgjP+Jf2v7JEmsYBWN0H1kmoseBq6yimpEaopenGJHQyHu2XtONX51u
LM25+gC4Gk0zbbIZnXq94rjZVYVtbpjOg1jJ9Y4OY9fUvopkc6SfIg+kvYNU
V6kn4pRWUnuyuGIRbRC5689LMuScMI8H24HoIPmBM0qHq4vw5CA8JCP6j5dN
aZmbNeeCepgO8R64Ck8pxoy2ogVrAGmeWxo0IKTl04yrytqmk+bxGMRDJnH3
bn+JYtFYWZyHwdVBAdnPOmlxlfPtRc4kA5I9VV34uq64sKw2M78Ko4NfedSx
AXa07p8+/XuQUuzfwRX1RiDLQbMOeF8vJv2w7lzIzxscqGZMArmCBp+62XnF
6UD74GymCj+DPat+3/Frt+HKK7qAuUZIdzou2CSBMMhoSRJ+PoW4eoBPe3vb
A+NqiKpgwkYnts8o9MyAmpi4yfl1HTFniqEdHYtPFlseoylek3MrFP5wJfvm
Mx8kw+ojx5XkUnQ57t355iY0I7Rr+PV1VHzNOuCjudczPf9mSZqC0rqZ+7yI
O+j9O1ffhqvgxBswDa7dWjR8Lze6N4vkfSpxVVzZsPps8MKjfktP+N+7LT7m
D2qanl/5MPKKvIUyf835oK555uOzyn7e6Pg7TQa44Igfq8RxwTaJJKt8FCFg
j9ZP5ucNjtKk/ft50X/bkQweyjvcWYoY8IQzVgkrTgV+vNCCbqw8CAu6k7f3
ocnYmTUtdXRZSwvvPrzH6ePAVXZRtQzN6wJ6ee/WV8G4j7xxWHLxQ+JKTluM
Dv9imRVm+jmbxHi6bXo1sxwqj03Dyw4SL5HMgirokeFqT9G+c+/pRn9Qr3Xv
mPwZ291A1MOSb5RWNXy13JYVPIIEG6Eu7DXNaDh173mwtZHbcZVG1hlem240
fYtLZ2kGAq3mljbdA969FYwfUmQ92XUGQGjUg65f3f4M1LZ6earhO3PNmCEQ
m1n2zSrb9o52m4DsQSoC6JSYDOLBu/S4P/jME8cVYVbUi2yAoiSWLf5aGakz
pSqoqm3yjyvgjNX7fpVdOg2f36oX3vuWXBP33UV3Wb+iizy4rPY+T+bmxKRW
VV3ztK2ufeQfqoseE67ev6/1q0eEK1AmTLTT1MkhKq0Ez/DKVKOswqqknIpX
pxlP3OTEiPEvvzkNkbhMiB5sjB4KV7Ra1mBS6cy4D02VA5tihIbIjGY2xsc5
NBfj6x6ZC/V93iaRZfHV3u8lcXNlYuSh+ZUUV7LaJpBaIKUsty2DVmFZ3ber
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
qKLuZg0LxbnW2MJBMTlwKPCzCKkePwxsWe2BK1o08ItUavGt4bPIMamJeaBt
7Z8KSg+fMlTPFjx89FKn6lrqx0RoHJ1CydJTHgnn2cgDEEv4izb8ss/eGsRK
0K+lU+mIa2iGxJcoh2NwOq4tIprr1KYhVdCSvLkA7JHSa5EJlB2duMkTdgk3
BbeG3yCWN25LObJ2wlWz0W6peKRu9OnbqI3lQgKrgWe56HWHQ/vNlBSWVmUX
lC9jnVbccOE7ZuaVNTQ0jFnprNBcq9C5/r76qolVtlDTU3TybXA80LDcosrq
mjrENYhzE28UgdOCY/xud1Uw5TQ4Ia4qAqiPV7vSpAxZObTMDj9+dWvr1V72
6u41mBUjgX/ywobf7K52VTFXZhOZQS+5ohdvENtqcgF2W17TMo6pMyHcU3gk
/aXnZPVRk01V872Uja0KX8aTbIiYOGtVMvYqLq9BvAmyasFS1qBVvKulXT9Y
x+CKlg6lGWfu8OX5osiE/PEbPQ45xYHej1nlwjV/QMZen2fTQ1U4xdirsbEx
ObsYPOERxEyem4W4z/LdRfbgVOVVdR+tcobJGmngyE+7vCIzPzV0Kyip+sbk
gtqOs0mZFBvmFlZ8ZsiGCeo8KFv4+KuDcEWpAEteBjDtG+/wuHyWsazX3x+Y
llNi5Z/2Mh3BeLyhZ6swi9o23cIoZ/6t6UXBRBOE+fKz2iZIeTYWmwFB1c5c
9E8wyZRXep9yT+g5Q6TAdLQAHjl1i3NXckPjclf+ISvnA18dR+k+rkrXvtSi
w+yVIpsJ2EdD3Iu4ooT3kvtduqnEiq8IQpNMuZQQN+yx6YUaO84iWLYJTEMg
2Vf9EQc0P4OLFerLqVlM2ezlFJxu6pUIL5CVXw7f98lqt1dmWZLQ0OTTx1zi
G5sav1jvnnDjTkND4+qDVPpIIiQ0FlzaJsXGD7zdHYSr/rOk7y11kvqnpuWU
JmcV877a5Kw7gilmXLFh9g9+3dloe16OFXQlJ7dIJvuDl4xY7PCACsnna1G2
VjKOfJxM3C8psziMlcFsNb3QQ1UEgmrIDtTWHwmD/S+prOb7NDW7JPVmyWnP
xLcWPNR06cdZHcTb2fkLr/asq2uoqKqtrK7Nul2x6Xg47xG+kIj9Vos4RTDR
9Hfbv0qk9kljeH5+jySaKro7veEcdsSvKuYFOcfd4vmkGP6gSR/jT6luJYPv
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
aqnLOEO3/wc/y2U7
         "], {{0, 200}, {200, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> 
         True, Magnification -> Automatic], Selectable -> False], BaseStyle -> 
       "ImageGraphics", ImageSize -> {60., Automatic}, 
       ImageSizeRaw -> {200, 200}, PlotRange -> {{0, 200}, {0, 200}}, 
       ImageMargins -> {{27, 0}, {0, 0}}], 
      StyleBox[
       RowBox[{"KTH/ICT", " ", "-", " ", "Communication", " ", "Systems"}], 
       "Text", FontFamily -> "Arial Narrow", FontSize -> 16, FontWeight -> 
       "Bold", FontColor -> GrayLevel[0.501961]]}}, ColumnAlignments -> Left, 
    ColumnSpacings -> 1.6]], CellMargins -> {{0, 0}, {0, 0}}, Magnification -> 
  1., Background -> GrayLevel[0.99999]],
PageHeaders->{{None, None, None}, {
   Cell[
    TextData[{"KTH/ICT - Communication Systems"}], "PageHeader", FontFamily -> 
    "Arial", FontSize -> 9], None, None}},
PageFooters->{{None, None, None}, {None, 
   Cell[
    TextData[{
      CounterBox["Page"]}], "PageNumber"], None}},
PrintingOptions->{"FacingPages"->False},
TrackCellChangeTimes->True,
Magnification:>1.25 Inherited,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell["Modify the definitions below to change the default appearance of all \
cells in a given style. \nMake modifications to any definition using commands \
in the Format menu.", "Text"], 
   Cell[
    CellGroupData[{
      Cell["Notebook Options Settings", "Section"], 
      Cell[
       StyleData["Notebook"], ShowCellBracket -> Automatic]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          StyleData["Title"], FontFamily -> "Arial", FontSize -> 36, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["Subtitle"], FontFamily -> "Arial", FontWeight -> "Bold"], 
         Cell[
          StyleData["Subsubtitle"], FontFamily -> "Arial", FontSize -> 18]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Chapter", "Subsection", 
          CellChangeTimes -> {{3.6182073006504073`*^9, 
           3.6182073204926414`*^9}}], 
         Cell[
          StyleData["Chapter"], FontFamily -> "Arial", FontSize -> 34, 
          FontWeight -> "Plain", FontSlant -> "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
         Cell[
          StyleData["Subchapter"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[
            0.09803921568627451, 0.32941176470588235`, 0.6509803921568628]], 
          FontFamily -> "Arial", FontSize -> 28, FontWeight -> "Plain", 
          FontSlant -> "Plain", 
          FontVariations -> {
           "StrikeThrough" -> False, "Underline" -> False}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          StyleData["Section"], CellDingbat -> None, ShowGroupOpener -> True, 
          FontFamily -> "Arial", FontSize -> 24, FontWeight -> "Bold", 
          FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["Subsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{40., 3.}, {8., 12.}}, FontFamily -> "Arial", 
          FontSize -> 18, FontWeight -> "Bold", FontColor -> GrayLevel[0.3]], 
         Cell[
          StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{53., Inherited}, {2, 10}}, FontFamily -> 
          "Arial", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
          GrayLevel[0.]], 
         Cell[
          StyleData["Subsubsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, MenuSortingValue -> 1400, FontFamily -> "Arial Narrow", 
          FontSize -> 14, FontWeight -> "Bold", FontSlant -> "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
          FontColor -> GrayLevel[0]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Standard", "Subsection"], 
         Cell[
          StyleData["Text"], FontFamily -> "Times"], 
         Cell[
          StyleData["SmallText"], MenuSortingValue -> 1425, FontFamily -> 
          "Times"]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Display", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell["Lists", "Subsubsection"], 
            Cell[
             StyleData["Item"], CellDingbat -> 
             StyleBox["\[FilledCircle]", Alignment -> Baseline, 
               GrayLevel[0.3]], FontFamily -> "Times"], 
            Cell[
             StyleData["ItemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["Subitem"], CellDingbat -> 
             StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
               GrayLevel[0.3]], FontFamily -> "Times"], 
            Cell[
             StyleData["SubitemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["Subsubitem"], CellDingbat -> 
             StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
               GrayLevel[0.5]], FontFamily -> "Times"], 
            Cell[
             StyleData["SubsubitemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["ItemNumbered"], FontFamily -> "Times"], 
            Cell[
             StyleData["SubitemNumbered"], FontFamily -> "Times"], 
            Cell[
             StyleData["SubsubitemNumbered"], FontFamily -> "Times"]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell["Templates", "Subsubsection"], 
            Cell[
             StyleData[
             "SideCaptionArray", StyleDefinitions -> StyleData["Text"]], 
             GridBoxOptions -> {
              GridBoxAlignment -> {"Columns" -> {Left}, "Rows" -> {Center}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}}], 
            Cell[
             StyleData[
             "SideCaption", StyleDefinitions -> StyleData["SmallText"]]]}, 
           Closed]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       StyleData["Input"], ShowCellBracket -> True], 
      Cell[
       StyleData["InputOnly"], ShowCellBracket -> True], 
      Cell[
       StyleData["Code"], ShowCellBracket -> True], 
      Cell[
       StyleData["Output"], ShowCellBracket -> True], 
      Cell[
       StyleData["Message"], ShowCellBracket -> True], 
      Cell[
       StyleData["Print"], ShowCellBracket -> True]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Formulas and Programming", "Section"], 
      Cell[
       StyleData["InlineFormula"]], 
      Cell[
       StyleData["DisplayFormula"], FontFamily -> "Times"], 
      Cell[
       StyleData["DisplayFormulaNumbered"], FontFamily -> "Times"], 
      Cell[
       StyleData["Program"], ShowCellBracket -> True]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Citation Styles", "Section"], 
      Cell[
       StyleData["Reference"]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       TextData[{"Styles for ", 
         StyleBox["Mathematica", FontSlant -> "Italic"], 
         " System\[Hyphen]specific Elements"}], "Section"], 
      Cell[
       CellGroupData[{
         Cell["Default Box Styles", "Subsection"], 
         Cell[
          StyleData["Graphics"], FontFamily -> "Times"], 
         Cell[
          StyleData["Graphics3D"], FontFamily -> "Times"], 
         Cell[
          StyleData["NetworkGraphics"], FontFamily -> "Times"]}, Closed]]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, 2014)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 103, 4, 101, "Title"],
Cell[686, 28, 187, 7, 53, "Text"],
Cell[CellGroupData[{
Cell[898, 39, 91, 4, 73, "Section"],
Cell[992, 45, 596, 9, 345, "Text"],
Cell[1591, 56, 222, 4, 196, "Text"],
Cell[1816, 62, 130, 3, 120, "Text"],
Cell[CellGroupData[{
Cell[1971, 69, 105, 7, 170, "Subsection"],
Cell[2079, 78, 71, 0, 120, "Text"],
Cell[CellGroupData[{
Cell[2175, 82, 66, 0, 112, "Item"],
Cell[2244, 84, 63, 0, 112, "Item"],
Cell[CellGroupData[{
Cell[2332, 88, 54, 0, 95, "Subitem"],
Cell[2389, 90, 38, 0, 95, "Subitem"],
Cell[2430, 92, 39, 0, 95, "Subitem"],
Cell[2472, 94, 36, 0, 95, "Subitem"]
}, Open  ]],
Cell[2523, 97, 101, 2, 112, "Item"]
}, Open  ]],
Cell[2639, 102, 277, 5, 196, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[2953, 112, 116, 7, 131, "Subsection"],
Cell[3072, 121, 656, 11, 345, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[3765, 137, 104, 7, 131, "Subsection"],
Cell[3872, 146, 346, 10, 196, "Text"],
Cell[4221, 158, 258, 4, 196, "Text"],
Cell[4482, 164, 171, 3, 120, "Text"],
Cell[4656, 169, 102, 2, 120, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[4795, 176, 110, 7, 131, "Subsection"],
Cell[CellGroupData[{
Cell[4930, 187, 86, 2, 112, "Item"],
Cell[5019, 191, 94, 2, 112, "Item"],
Cell[5116, 195, 117, 3, 112, "Item"],
Cell[5236, 200, 135, 3, 112, "Item"],
Cell[5374, 205, 177, 3, 180, "Item"],
Cell[5554, 210, 187, 4, 180, "Item"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[5802, 221, 74, 4, 55, "Section"],
Cell[CellGroupData[{
Cell[5901, 229, 104, 7, 51, "Subsection"],
Cell[6008, 238, 172, 3, 120, "Text"],
Cell[CellGroupData[{
Cell[6205, 245, 80, 1, 80, "SubitemParagraph"],
Cell[6288, 248, 76, 1, 80, "SubitemParagraph"],
Cell[6367, 251, 68, 1, 80, "SubitemParagraph"],
Cell[6438, 254, 76, 1, 80, "SubitemParagraph"],
Cell[6517, 257, 71, 1, 80, "SubitemParagraph"]
}, Open  ]],
Cell[6603, 261, 128, 3, 120, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[6768, 269, 110, 7, 40, "Subsection"],
Cell[6881, 278, 316, 7, 372, "Text"],
Cell[CellGroupData[{
Cell[7222, 289, 163, 10, 125, "Subsubsection"],
Cell[7388, 301, 764, 26, 288, "Text"],
Cell[8155, 329, 643, 21, 112, "DisplayFormula"],
Cell[8801, 352, 242, 8, 125, "Text"],
Cell[9046, 362, 830, 27, 176, "DisplayFormula"],
Cell[9879, 391, 953, 32, 315, "Text"],
Cell[10835, 425, 529, 18, 203, "Text"],
Cell[11367, 445, 469, 18, 210, "Text"],
Cell[11839, 465, 324, 11, 210, "DisplayFormula"],
Cell[12166, 478, 72, 0, 125, "Text"],
Cell[12241, 480, 466, 16, 176, "DisplayFormula"]
}, Closed]],
Cell[CellGroupData[{
Cell[12744, 501, 157, 10, 91, "Subsubsection"],
Cell[12904, 513, 657, 21, 288, "Text"],
Cell[13564, 536, 429, 11, 288, "Text"],
Cell[13996, 549, 588, 17, 196, "Program"],
Cell[14587, 568, 264, 8, 203, "Text"],
Cell[14854, 578, 57, 1, 125, "Text"],
Cell[14914, 581, 207, 7, 125, "Text"],
Cell[15124, 590, 70, 1, 125, "Input"],
Cell[15197, 593, 608, 17, 288, "Input"],
Cell[15808, 612, 325, 12, 203, "Text"],
Cell[16136, 626, 357, 10, 125, "Input"],
Cell[16496, 638, 56, 0, 125, "Text"],
Cell[16555, 640, 96, 2, 125, "Input"],
Cell[16654, 644, 263, 11, 125, "Text"],
Cell[16920, 657, 372, 10, 125, "Input"],
Cell[17295, 669, 36, 0, 125, "Text"],
Cell[17334, 671, 723, 23, 180, "DisplayFormula"],
Cell[18060, 696, 107, 5, 125, "Text"],
Cell[18170, 703, 470, 13, 210, "Input"],
Cell[18643, 718, 310, 11, 125, "Text"],
Cell[18956, 731, 115, 4, 311, "Program"],
Cell[19074, 737, 172, 7, 125, "Text"],
Cell[19249, 746, 198, 4, 125, "Input"],
Cell[19450, 752, 108, 5, 125, "Text"],
Cell[19561, 759, 701, 18, 288, "Input"],
Cell[20265, 779, 57, 1, 125, "Text"],
Cell[20325, 782, 70, 1, 125, "Input"],
Cell[20398, 785, 295, 5, 288, "Text"],
Cell[20696, 792, 424, 13, 203, "Text"],
Cell[21123, 807, 713, 23, 277, "Input"],
Cell[21839, 832, 201, 6, 125, "Text"],
Cell[22043, 840, 54, 1, 125, "Input"],
Cell[22100, 843, 115, 3, 125, "Text"],
Cell[22218, 848, 235, 6, 125, "Input"],
Cell[22456, 856, 73, 0, 125, "Text"],
Cell[22532, 858, 80, 2, 125, "Input"],
Cell[22615, 862, 109, 3, 125, "Input"],
Cell[22727, 867, 55, 0, 125, "Text"],
Cell[22785, 869, 365, 12, 237, "Input"],
Cell[23153, 883, 57, 1, 125, "Input"],
Cell[23213, 886, 168, 3, 203, "Text"],
Cell[23384, 891, 266, 7, 210, "Input"],
Cell[23653, 900, 54, 1, 125, "Input"],
Cell[23710, 903, 78, 2, 187, "Input"],
Cell[23791, 907, 315, 11, 203, "Text"],
Cell[24109, 920, 376, 10, 288, "Text"],
Cell[24488, 932, 125, 3, 125, "Input"],
Cell[24616, 937, 393, 13, 203, "Text"],
Cell[25012, 952, 150, 4, 125, "Input"],
Cell[25165, 958, 131, 3, 203, "Text"],
Cell[25299, 963, 263, 9, 125, "Input"],
Cell[25565, 974, 389, 11, 210, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[25991, 990, 165, 10, 91, "Subsubsection"],
Cell[26159, 1002, 758, 26, 288, "Text"],
Cell[26920, 1030, 235, 7, 112, "DisplayFormula"],
Cell[27158, 1039, 283, 8, 203, "Text"],
Cell[27444, 1049, 796, 24, 213, "DisplayFormula"],
Cell[28243, 1075, 1003, 34, 315, "Text"],
Cell[29249, 1111, 529, 18, 203, "Text"],
Cell[29781, 1131, 325, 10, 203, "Text"],
Cell[30109, 1143, 508, 16, 213, "DisplayFormula"]
}, Closed]],
Cell[CellGroupData[{
Cell[30654, 1164, 159, 10, 91, "Subsubsection"],
Cell[30816, 1176, 524, 16, 203, "Text"],
Cell[31343, 1194, 842, 34, 378, "Text"],
Cell[32188, 1230, 597, 17, 210, "Program"],
Cell[32788, 1249, 57, 1, 125, "Text"],
Cell[32848, 1252, 86, 2, 125, "Text"],
Cell[32937, 1256, 70, 1, 125, "Input"],
Cell[33010, 1259, 350, 10, 210, "Input"],
Cell[33363, 1271, 325, 12, 203, "Text"],
Cell[33691, 1285, 357, 10, 125, "Input"],
Cell[34051, 1297, 105, 5, 125, "Text"],
Cell[34159, 1304, 96, 2, 125, "Input"],
Cell[34258, 1308, 265, 11, 125, "Text"],
Cell[34526, 1321, 745, 21, 210, "Input"],
Cell[35274, 1344, 95, 5, 125, "Text"],
Cell[35372, 1351, 95, 2, 125, "Input"],
Cell[35470, 1355, 108, 5, 125, "Text"],
Cell[35581, 1362, 670, 18, 288, "Input"],
Cell[36254, 1382, 32, 0, 125, "Text"],
Cell[36289, 1384, 102, 4, 311, "Program"],
Cell[36394, 1390, 157, 6, 125, "Text"],
Cell[36554, 1398, 187, 4, 125, "Input"],
Cell[36744, 1404, 191, 5, 125, "Input"],
Cell[36938, 1411, 108, 5, 125, "Text"],
Cell[37049, 1418, 670, 18, 288, "Input"],
Cell[37722, 1438, 57, 1, 125, "Text"],
Cell[37782, 1441, 70, 1, 125, "Input"],
Cell[37855, 1444, 305, 10, 203, "Text"],
Cell[38163, 1456, 50, 0, 125, "Text"],
Cell[38216, 1458, 182, 5, 125, "Input"],
Cell[38401, 1465, 96, 2, 125, "Input"],
Cell[38500, 1469, 673, 20, 288, "Input"],
Cell[39176, 1491, 640, 24, 203, "Text"],
Cell[39819, 1517, 219, 6, 125, "Input"],
Cell[40041, 1525, 124, 3, 125, "Input"],
Cell[40168, 1530, 801, 23, 338, "Input"],
Cell[40972, 1555, 800, 23, 338, "Input"],
Cell[41775, 1580, 123, 3, 203, "Text"],
Cell[41901, 1585, 767, 22, 338, "Input"],
Cell[42671, 1609, 486, 13, 270, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[43206, 1628, 118, 7, 40, "Subsection"],
Cell[CellGroupData[{
Cell[43349, 1639, 146, 10, 125, "Subsubsection"],
Cell[43498, 1651, 384, 12, 203, "Text"],
Cell[43885, 1665, 843, 27, 210, "DisplayFormula"],
Cell[44731, 1694, 141, 6, 125, "Text"],
Cell[44875, 1702, 1043, 35, 210, "DisplayFormula"],
Cell[45921, 1739, 621, 21, 125, "Text"],
Cell[46545, 1762, 484, 15, 263, "DisplayFormula"],
Cell[47032, 1779, 531, 17, 263, "DisplayFormula"]
}, Closed]],
Cell[CellGroupData[{
Cell[47600, 1801, 147, 10, 91, "Subsubsection"],
Cell[47750, 1813, 595, 17, 288, "Text"],
Cell[48348, 1832, 63, 0, 125, "Text"],
Cell[48414, 1834, 255, 9, 168, "DisplayFormula"],
Cell[48672, 1845, 369, 12, 176, "DisplayFormula"],
Cell[49044, 1859, 681, 24, 236, "DisplayFormula"],
Cell[49728, 1885, 570, 18, 203, "DisplayFormula"],
Cell[50301, 1905, 145, 6, 125, "Text"],
Cell[50449, 1913, 56, 0, 125, "Text"],
Cell[50508, 1915, 70, 1, 176, "Input"],
Cell[50581, 1918, 182, 5, 176, "Input"],
Cell[50766, 1925, 100, 2, 176, "Input"],
Cell[50869, 1929, 116, 2, 176, "Input"],
Cell[50988, 1933, 206, 6, 255, "Input"],
Cell[51197, 1941, 181, 5, 176, "Input"],
Cell[51381, 1948, 94, 2, 125, "Text"],
Cell[51478, 1952, 240, 7, 237, "Input"],
Cell[51721, 1961, 414, 16, 203, "Text"],
Cell[52138, 1979, 180, 5, 176, "Input"],
Cell[52321, 1986, 42, 0, 125, "Text"],
Cell[52366, 1988, 124, 3, 176, "Input"],
Cell[52493, 1993, 383, 12, 125, "Text"],
Cell[52879, 2007, 99, 2, 237, "Input"],
Cell[52981, 2011, 140, 6, 125, "Text"],
Cell[53124, 2019, 124, 3, 203, "Text"],
Cell[53251, 2024, 552, 16, 260, "Input"]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53864, 2047, 79, 4, 73, "Section"],
Cell[53946, 2053, 283, 5, 59, "Text"],
Cell[CellGroupData[{
Cell[54254, 2062, 89, 1, 51, "Subsection"],
Cell[54346, 2065, 1326, 22, 150, "Text"],
Cell[55675, 2089, 1112, 27, 133, "Text"],
Cell[56790, 2118, 6759, 187, 158, "Text"],
Cell[CellGroupData[{
Cell[63574, 2309, 54, 1, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[63653, 2314, 2214, 75, 136, "Item"],
Cell[65870, 2391, 677, 17, 76, "Item"]
}, Open  ]],
Cell[66562, 2411, 76, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[66663, 2416, 455, 11, 57, "Input"],
Cell[67121, 2429, 440, 14, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67598, 2448, 203, 5, 35, "Input"],
Cell[67804, 2455, 231, 8, 62, "Output"]
}, Open  ]],
Cell[68050, 2466, 1585, 35, 80, "Input"],
Cell[CellGroupData[{
Cell[69660, 2505, 2157, 45, 78, "Input"],
Cell[71820, 2552, 24833, 420, 294, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96690, 2977, 508, 12, 36, "Input"],
Cell[97201, 2991, 23154, 392, 301, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
