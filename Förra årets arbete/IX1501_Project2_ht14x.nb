(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    454480,       9609]
NotebookOptionsPosition[    390767,       8332]
NotebookOutlinePosition[    442848,       9262]
CellTagsIndexPosition[    442805,       9259]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["c"], "Input",
 CellChangeTimes->{3.6265763165209236`*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["II",
  FontFamily->"Times New Roman"],
 ". Normal Distribution"
}], "Title"],

Cell["\<\
KTH/ICT:IX1501 - Statistics
G\[ODoubleDot]ran Andersson, goeran@kth.se
ver. 141126\
\>", "Text",
 CellMargins->{{27, 10}, {0, 0}},
 FontFamily->"Times New Roman",
 FontSize->10],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ". Implementation and Assessment"
}], "Section"],

Cell["\<\
The course includes two-three project tasks on a total of 4 hp. Data shall be \
recorded in writing and orally. They will be given a summary grade in scale \
A-F. The assessment includes how many project tasks which have been resolved, \
the quality and the implementation of the written and oral presentation. The \
first two tasks rating E. If you've been approved at the scheduled \
examination of these, you can at the end of the course, choose to account for \
a third project task for a higher grade. In general, excellent performance \
increases the grade one step.\
\>", "Text"],

Cell["\<\
In this project task you will work in a group of two and solve a mathematical \
task, write a report (Swedish or English) in Mathematica and prepare a short \
oral presentation (Swedish or English).\
\>", "Text"],

Cell["\<\
Carefully read the following information so that you know which rules apply \
and what is expected of you.\
\>", "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Report"
}], "Subsection"],

Cell["The report should be written in Mathematica and contain", "Text"],

Cell[CellGroupData[{

Cell["a summary containing the results of resolved parts", "Item"],

Cell["separate sections for each part containing e.g.", "Item"],

Cell[CellGroupData[{

Cell["mathematical formulas and equations", "Subitem"],

Cell["a brief discussion ", "Subitem"],

Cell["explanatory diagrams", "Subitem"],

Cell["your conclusions.", "Subitem"]
}, Open  ]],

Cell["\<\
separate code section (do not mix code and text with conclusions and results)\
\>", "Item"]
}, Open  ]],

Cell["\<\
The report will normally be sent by email to teacher/teachers one-two days \
prior to the examination (see 1.4 below). Your emailed report should be \
printed on paper and submitted at examination. Type the names and email \
addresses on the first page.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Oral Presentation"
}], "Subsection"],

Cell[TextData[{
 "You should prepare an oral presentation of your solution to the task. The \
presentation will be carried out with your own laptop and ",
 StyleBox["should not take more than five minutes",
  FontSlant->"Italic"],
 ", effective time. A computer projector will be available at the \
presentation. Please carefully consider your presentation, what is important, \
in what order and how it will be illustrated. Practice the presentation in \
advance and make sure to meet the time frame. One of you in the group (of \
two) will be selected randomly for the oral presentation and the other part \
will be selected for questioning."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Rules"
}], "Subsection"],

Cell[TextData[{
 "The task is considered ",
 StyleBox["individually",
  FontSlant->"Italic"],
 " and ",
 StyleBox["assumes that you have full knowledge of all the material you are \
presenting",
  FontSlant->"Italic"],
 ". In order to be approved, then you have solved the task and be able to \
explain the entire task and solution. "
}], "Text"],

Cell["\<\
To account for the task that you do not have solved is considered cheating. \
It is also cheating to copy the solution or part of a solution from another. \
If two solutions are presented as (partially) copies they are rejected both. \
\>", "Text"],

Cell["\<\
If the solution contains parts, e.g. background material, which you do not \
have produced, you must clearly indicate this and indicate the source.\
\>", "Text"],

Cell["\<\
Suspicion of cheating or misleading can be reported to the Disciplinary Board.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Examination"
}], "Subsection"],

Cell[CellGroupData[{

Cell["\<\
The examination takes place according to the booking in Daisy.\
\>", "Item"],

Cell["\<\
Application for examination will be open in Daisy two days in advance.\
\>", "Item"],

Cell["\<\
The report shall be sent via email to Haris Celik, harisc@kth.se, before \
2014-12-04, 13:00.\
\>", "Item"],

Cell["\<\
A printed copy of the report must be submitted at examination. Don\
\[CloseCurlyQuote]t print the code section.\
\>", "Item"],

Cell["\<\
If you do not present the project tasks in time, an extra examination (grade \
E only) will be offered in connection with the examination on the course. \
\>", "Item"],

Cell["\<\
On subsequent accounting, next time the course is given, most recently \
published project task is considered. This may mean that you have to solve \
another task.\
\>", "Item"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ". Preparations"
}], "Section"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Study"
}], "Subsection"],

Cell["\<\
Read the following chapters in the course book (Blom). A \[FilledSmallCircle] \
means read carefully and a \[EmptySmallCircle] means glance through.\
\>", "Text"],

Cell[CellGroupData[{

Cell["4.1-4, 4.5, 4.7", "SubitemParagraph",
 CellDingbat->"\[EmptySmallCircle]"],

Cell["5.1-3, 5.5", "SubitemParagraph",
 CellDingbat->"\[FilledSmallCircle]"],

Cell["5.6", "SubitemParagraph",
 CellDingbat->"\[EmptySmallCircle]"],

Cell["6.1-5, 6.7", "SubitemParagraph",
 CellDingbat->"\[FilledSmallCircle]"],

Cell["7.1-4", "SubitemParagraph",
 CellDingbat->"\[FilledSmallCircle]"]
}, Open  ]],

Cell["\<\
Hint: Also study the notebooks from the lectures. These contain Mathematica \
code on how to handle  .\
\>", "Text",
 CellChangeTimes->{3.6265550143923454`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Convolution"
}], "Subsection"],

Cell[TextData[{
 "In this project task we will focus on a ",
 StyleBox["sum of independent stochastic variables",
  FontWeight->"Bold"],
 " (or random variables, rvs). In some cases, it is possible to determine the \
correct probability distribution. In other cases you have to rely on \
approximations."
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 ".",
 
 CounterBox["Subsubsection"],
 " Theory for Discrete RVS"
}], "Subsubsection"],

Cell[TextData[{
 "The distribution of a sum of two independent discrete rvs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicS]", "=", 
    RowBox[{"\[GothicX]", "+", "\[GothicY]"}]}], TraditionalForm]]],
 " can be determined by the following reasoning. If the sum ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicS]", "=", "s"}], TraditionalForm]]],
 " and we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicX]", "=", "i"}], TraditionalForm]]],
 " then ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicY]", "=", 
    RowBox[{"s", "-", "i"}]}], TraditionalForm]]],
 ". Since  ",
 Cell[BoxData[
  FormBox["\[GothicX]", TraditionalForm]]],
 " and  ",
 Cell[BoxData[
  FormBox["\[GothicY]", TraditionalForm]]],
 " are independent the probability is"
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"P", "(", 
    RowBox[{"\[GothicX]", "=", 
     RowBox[{
      RowBox[{"i", "\[Intersection]", "\[GothicY]"}], "=", 
      RowBox[{"s", "-", "i"}]}]}], ")"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"P", "(", 
      RowBox[{"\[GothicX]", "=", "i"}], ")"}], 
     RowBox[{"P", "(", 
      RowBox[{"\[GothicY]", "=", 
       RowBox[{"s", "-", "i"}]}], ")"}]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["pf", "\[GothicX]"], "(", "i", ")"}], 
     RowBox[{
      SubscriptBox["pf", "\[GothicY]"], "(", 
      RowBox[{"s", "-", "i"}], ")"}]}]}]}], 
  TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 "If we add up all the possible values for ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " we get the probability of that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicS]", "=", "s"}], TraditionalForm]]]
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"P", "(", 
    RowBox[{"\[GothicS]", "=", "s"}], ")"}], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["pf", "\[GothicCapitalS]"], "(", "s", ")"}], "=", 
    RowBox[{
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{"\[ForAll]", "i"}]], 
      RowBox[{
       RowBox[{
        SubscriptBox["pf", "\[GothicX]"], "(", "i", ")"}], 
       RowBox[{
        SubscriptBox["pf", "\[GothicY]"], "(", 
        RowBox[{"s", "-", "i"}], ")"}]}]}], "=", 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{"\[ForAll]", "i"}]], 
      RowBox[{
       RowBox[{
        SubscriptBox["pf", "\[GothicX]"], "(", 
        RowBox[{"s", "-", "i"}], ")"}], 
       RowBox[{
        SubscriptBox["pf", "\[GothicY]"], "(", "i", ")"}]}]}]}]}]}], 
  TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 "This sum is called the ",
 StyleBox["convolution",
  FontWeight->"Bold"],
 ", often written with a star as an operator: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["pf", "\[GothicS]"], "(", "s", ")"}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["pf", "\[GothicX]"], "\[Star]", 
       SubscriptBox["pf", "\[GothicY]"]}], ")"}], 
     RowBox[{"(", "s", ")"}]}]}], TraditionalForm]]],
 ". In order to retrieve all the values in the sum the index should cover (at \
least) all values of the union of the sample spaces of ",
 Cell[BoxData[
  FormBox["\[GothicX]", TraditionalForm]]],
 " and  ",
 "\[GothicY]",
 ", i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", "\[Element]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[CapitalOmega]", "\[GothicX]"], "\[Union]", 
      SubscriptBox["\[CapitalOmega]", "\[GothicY]"]}], "}"}]}], 
   TraditionalForm]]],
 "."
}], "Text"],

Cell[TextData[{
 "If we would like to continue with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicV]", "=", 
    RowBox[{"\[GothicX]", "+", "\[GothicY]", "+", "\[GothicZ]"}]}], 
   TraditionalForm]]],
 "  we can consider ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicV]", "=", 
    RowBox[{"\[GothicS]", "+", "\[GothicZ]"}]}], TraditionalForm]]],
 " and use the convolution sum for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicS]", "+", "\[GothicZ]"}], TraditionalForm]]],
 "."
}], "Text",
 CellDingbat->"\[Therefore]"],

Cell[TextData[{
 "Now, assume that all rvs ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[GothicX]", "i"], TraditionalForm]]],
 " are ",
 StyleBox["i",
  FontWeight->"Bold"],
 "ndependent ",
 StyleBox["i",
  FontWeight->"Bold"],
 "dentical ",
 StyleBox["d",
  FontWeight->"Bold"],
 "istributed (iid) and introduce a variable ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " for the number of rvs in the sum. We want to get the probability function "
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["pf", "n"], "(", "s", ")"}], "=", 
   RowBox[{"P", "(", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      SubscriptBox["\[GothicX]", "i"]}], "=", "s"}], ")"}]}], 
  TraditionalForm]], "DisplayFormula"],

Cell["A convenient way here is to make a recursive definition:", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["pf", "n"], "(", "s", ")"}], "=", 
   RowBox[{
    UnderscriptBox["\[Sum]", 
     RowBox[{"\[ForAll]", "i"}]], 
    RowBox[{
     RowBox[{
      SubscriptBox["pf", "1"], "(", 
      RowBox[{"s", "-", "i"}], ")"}], 
     RowBox[{
      SubscriptBox["pf", 
       RowBox[{"n", "-", "1"}]], "(", "i", ")"}]}]}]}], 
  TraditionalForm]], "DisplayFormula",
 UnderscriptBoxOptions->{LimitsPositioning->False}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 ".",
 
 CounterBox["Subsubsection"],
 " Discrete Examples"
}], "Subsubsection"],

Cell[TextData[{
 "The recurrence above can be programmed (see ",
 ButtonBox["Functions That Remember Values They Have Found",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/FunctionsThatRememberValuesTheyHaveFound"],
 "). However, in some cases you can use ",
 Cell[BoxData[
  ButtonBox["TransformedDistribution",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/TransformedDistribution"]]],
 ", ",
 Cell[BoxData[
  ButtonBox["DiscreteConvolve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/DiscreteConvolve"]]],
 " or ",
 Cell[BoxData[
  ButtonBox["ListConvolve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ListConvolve"]]],
 "."
}], "Text"],

Cell[TextData[{
 "Notice that when you use discrete distributions in Mathematica the ",
 Cell[BoxData[
  ButtonBox["PDF",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PDF"]]],
 " actually means the probability function (pf). This means that ",
 StyleBox["PDF[\[ScriptCapitalD],x]", "Output"],
 " expresses a probability (not a probability density as in the continuous \
case)."
}], "Text",
 CellDingbat->"\[FivePointedStar]"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"x", "=", 
     RowBox[{"a", "+", "1"}]}], "b"], 
   RowBox[{"PDF", "[", 
    RowBox[{"\[ScriptCapitalD]", ",", "x"}], "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{"\[ScriptCapitalD]", ",", "b"}], "]"}], "-", 
   RowBox[{"CDF", "[", 
    RowBox[{"\[ScriptCapitalD]", ",", "a"}], "]"}]}], "\[Equal]", 
  RowBox[{"Probability", "[", 
   RowBox[{
    RowBox[{"a", "<", "X", "\[LessEqual]", "b"}], ",", 
    RowBox[{"X", "\[Distributed]", "\[ScriptCapitalD]"}]}], 
   "]"}]}]], "Program"],

Cell[TextData[{
 "Notice also that in the discrete case the ",
 Cell[BoxData[
  FormBox[Cell["pf"], TraditionalForm]]],
 " is a discrete function while the ",
 Cell[BoxData[
  FormBox["cdf", TraditionalForm]]],
 " is a (piecewise) continuous function."
}], "Text"],

Cell["Example 1", "Text",
 CellDingbat->"\[EmptyCircle]"],

Cell[TextData[{
 "Here's an example of the sum ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "=", 
    RowBox[{"X", "+", "Y"}]}], TraditionalForm]]],
 " of two uniformly distributed discrete rvs."
}], "Text"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalX]", "=", 
   RowBox[{"DiscreteUniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "7"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[ScriptCapitalY]", "=", 
   RowBox[{"DiscreteUniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"10", ",", "15"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalOmega]", "=", 
  RowBox[{"Union", "[", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"3", ",", "7"}], "]"}], ",", 
    RowBox[{"Range", "[", 
     RowBox[{"10", ",", "15"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.626556467819854*^9, 3.6265564706894274`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "10", ",", "11", ",", 
   "12", ",", "13", ",", "14", ",", "15"}], "}"}]], "Output",
 CellChangeTimes->{{3.626556459276138*^9, 3.626556471229533*^9}}]
}, Open  ]],

Cell[TextData[{
 "We can use ",
 Cell[BoxData[
  ButtonBox["TransformedDistribution",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/TransformedDistribution"]]],
 " in order to compute the distribution of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "=", 
    RowBox[{"X", "+", "Y"}]}], TraditionalForm]]],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalS]", "=", 
   RowBox[{"TransformedDistribution", "[", 
    RowBox[{
     RowBox[{"X", "+", "Y"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X", "\[Distributed]", "\[ScriptCapitalX]"}], ",", 
       RowBox[{"Y", "\[Distributed]", "\[ScriptCapitalY]"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input"],

Cell["The probability of getting the sum 15 is", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{"\[ScriptCapitalS]", ",", "15"}], "]"}]], "Input"],

Cell[BoxData[
 FractionBox["1", "10"]], "Output",
 CellChangeTimes->{3.6265565105544214`*^9}]
}, Open  ]],

Cell[TextData[{
 "We can also compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["pf", "X"], "\[Star]", 
      SubscriptBox["pf", "Y"]}], ")"}], 
    RowBox[{"(", "15", ")"}]}], TraditionalForm]]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{"\[ScriptCapitalX]", ",", " ", "i"}], "]"}], " ", 
    RowBox[{"PDF", "[", 
     RowBox[{"\[ScriptCapitalY]", ",", " ", 
      RowBox[{"15", " ", "-", " ", "i"}]}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "\[CapitalOmega]"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 FractionBox["1", "10"]], "Output",
 CellChangeTimes->{3.626556520931504*^9}]
}, Open  ]],

Cell["Calculation by hand:", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"P", "(", 
    RowBox[{"S", "=", "15"}], ")"}], "=", 
   RowBox[{
    FractionBox[
     SubscriptBox["n", "fav"], 
     SubscriptBox["n", "tot"]], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"\[LeftBracketingBar]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "11"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "10"}], "}"}]}], "}"}], "\[RightBracketingBar]"}], 
      RowBox[{"5", "\[Times]", "6"}]], "=", 
     RowBox[{
      FractionBox["3", "30"], "=", 
      FractionBox["1", "10"]}]}]}]}], TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.626556523640046*^9, 3.626556526977717*^9}}],

Cell[TextData[{
 "Here a plot of the ",
 Cell[BoxData[
  FormBox["pf", TraditionalForm]]],
 ":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"PDF", "[", 
     RowBox[{"\[ScriptCapitalS]", ",", "s"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "10", ",", "25"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "s", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"pf", "[", "s", "]"}], "]"}]}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.019444444444444445`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{10., 0.}, {10., 0}}, {{11., 0.}, {11., 0}}, {{12., 0.}, {
         12., 0}}, {{23., 0.}, {23., 0}}, {{24., 0.}, {24., 0}}, {{25., 0.}, {
         25., 0}}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.019444444444444445`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{13., 0.03333333333333333}, {13., 0}}, {{14., 
         0.06666666666666667}, {14., 0}}, {{15., 0.1}, {15., 0}}, {{16., 
         0.13333333333333333`}, {16., 0}}, {{17., 0.16666666666666666`}, {
         17., 0}}, {{18., 0.16666666666666666`}, {18., 0}}, {{19., 
         0.13333333333333333`}, {19., 0}}, {{20., 0.1}, {20., 0}}, {{21., 
         0.06666666666666667}, {21., 0}}, {{22., 0.03333333333333333}, {
         22., 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{10., 0.}, {11., 0.}, {12., 0.}, {13., 0.03333333333333333}, {
     14., 0.06666666666666667}, {15., 0.1}, {16., 0.13333333333333333`}, {17.,
      0.16666666666666666`}, {18., 0.16666666666666666`}, {19., 
     0.13333333333333333`}, {20., 0.1}, {21., 0.06666666666666667}, {22., 
     0.03333333333333333}, {23., 0.}, {24., 0.}, {25., 0.}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["s", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      RowBox[{"pf", "(", "s", ")"}], HoldForm], TraditionalForm]},
  AxesOrigin->{10, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{10, 25}, {0, 0.16666666666666666`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.626556577902928*^9}]
}, Open  ]],

Cell[TextData[{
 "This plot is equivalent to the discrete plot of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["pf", "X"], "\[Star]", 
      SubscriptBox["pf", "Y"]}], ")"}], 
    RowBox[{"(", "s", ")"}]}], TraditionalForm]]],
 ". Try to also to plot"
}], "Text"],

Cell["\<\
Evaluate[
DiscreteConvolve[PDF[\[ScriptCapitalX], k], PDF[\[ScriptCapitalY], k], k, s]
]\
\>", "Program",
 CellChangeTimes->{{3.626556550990532*^9, 3.626556552294794*^9}}],

Cell[TextData[{
 "The probability that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"15", "\[LessEqual]", "S", "\[LessEqual]", "18"}], 
   TraditionalForm]]],
 " is"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"15", "\[LessEqual]", "S", "\[LessEqual]", "18"}], ",", 
   RowBox[{"S", "\[Distributed]", "\[ScriptCapitalS]"}]}], "]"}]], "Input"],

Cell[BoxData[
 FractionBox["17", "30"]], "Output",
 CellChangeTimes->{3.6265565852964115`*^9}]
}, Open  ]],

Cell[TextData[{
 "Here a plot of the ",
 Cell[BoxData[
  FormBox["cdf", TraditionalForm]]],
 ":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"CDF", "[", 
     RowBox[{"\[ScriptCapitalS]", ",", "s"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "10", ",", "25"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "s", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"cdf", "[", "s", "]"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"ExtentSize", "\[Rule]", "Right"}], ",", 
   RowBox[{"ExtentMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Filled\>\"", ",", "\"\<Empty\>\""}], "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", "None"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`], 
    AbsoluteThickness[1.6], {}, {{}, LineBox[CompressedData["
1:eJxTTMoPSmVmYGAQAGImKIYAFQcGFKBGgK9BgK+FwRcEg4X2EL4OBn/WTBDY
CeXr4eCfhPINMPihYHAVyjfE4EPoB1C+EQYfov4plG+MwYfY9xLKN8Hgnz0D
Am+gfFMM/vt3YADlm2HwIfQHKN+cAN+CAN+SAN8KzgcA1VhfzQ==
      "]]}, {}, {
     {AbsolutePointSize[5], 
      PointBox[{{10., 0.}, {11., 0.}, {12., 0.}, {13., 0.03333333333333333}, {
       14., 0.1}, {15., 0.2}, {16., 0.3333333333333333}, {17., 0.5}, {18., 
       0.6666666666666666}, {19., 0.8}, {20., 0.9}, {21., 
       0.9666666666666667}, {22., 1.}, {23., 1.}, {24., 1.}, {25., 1.}}]}, {
      {AbsolutePointSize[5], 
       PointBox[{{11., 0.}, {12., 0.}, {13., 0.}, {14., 
        0.03333333333333333}, {15., 0.1}, {16., 0.2}, {17., 
        0.3333333333333333}, {18., 0.5}, {19., 0.6666666666666666}, {20., 
        0.8}, {21., 0.9}, {22., 0.9666666666666667}, {23., 1.}, {24., 1.}, {
        25., 1.}, {26., 1.}}]}, 
      {GrayLevel[1], AbsolutePointSize[3], 
       PointBox[{{11., 0.}, {12., 0.}, {13., 0.}, {14., 
        0.03333333333333333}, {15., 0.1}, {16., 0.2}, {17., 
        0.3333333333333333}, {18., 0.5}, {19., 0.6666666666666666}, {20., 
        0.8}, {21., 0.9}, {22., 0.9666666666666667}, {23., 1.}, {24., 1.}, {
        25., 1.}, {26., 1.}}]}}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["s", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      RowBox[{"cdf", "(", "s", ")"}], HoldForm], TraditionalForm]},
  AxesOrigin->{10, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{10, 26}, {0, 1.}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.626556599631287*^9}]
}, Open  ]],

Cell["Example 2", "Text",
 CellDingbat->"\[EmptyCircle]"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input"],

Cell["\<\
In an amusement park there\[CloseCurlyQuote]s a stand where you can win a \
giant teddy if you pay \[Euro]2 and play ten dice. Now, if the sum is 20 or \
lower or 50 or larger the teddy is yours. What\[CloseCurlyQuote]s the \
expected value you have to pay for the teddy?\
\>", "Text"],

Cell[TextData[{
 "In this case ",
 Cell[BoxData[
  ButtonBox["TransformedDistribution",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/TransformedDistribution"]]],
 " is not very efficient. Since the sample space is finite an efficient \
method is ",
 Cell[BoxData[
  ButtonBox["ListConvolve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ListConvolve"]]],
 " which computes the convolution sum very fast."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "1", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"P", "[", "n", "]"}], "=", 
   RowBox[{"ListConvolve", "[", 
    RowBox[{
     RowBox[{"P", "[", 
      RowBox[{"n", "-", "1"}], "]"}], ",", 
     RowBox[{"P", "[", "1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", "0"}], "]"}]}]}]}], "Input"],

Cell[TextData[{
 "We recognize the probabilities for getting sums ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", ",", "3", ",", "...", ",", "12"}], TraditionalForm]]],
 " if we use two dice:"
}], "Text"],

Cell[BoxData[
 RowBox[{"P", "[", "2", "]"}]], "Input"],

Cell["\<\
The probabilities occurs as positions in a list so we can easily make a \
function of this:\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pf", "[", 
   RowBox[{"n_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"P", "[", "n", "]"}], "\[LeftDoubleBracket]", 
   RowBox[{"s", "-", "n", "+", "1"}], "\[RightDoubleBracket]"}]}]], "Input"],

Cell["The probability of getting the sum 50 in one game is then", "Text"],

Cell[BoxData[
 RowBox[{"pf", "[", 
  RowBox[{"10", ",", "50"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"pf", "[", 
   RowBox[{"10", ",", "50"}], "]"}], "]"}]], "Input"],

Cell["The probability of winning the teddy is", "Text"],

Cell[BoxData[
 RowBox[{"Pwin", "=", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"s", "=", "10"}], "20"], 
    RowBox[{"pf", "[", 
     RowBox[{"10", ",", "s"}], "]"}]}], "+", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"s", "=", "50"}], "60"], 
    RowBox[{"pf", "[", 
     RowBox[{"10", ",", "s"}], "]"}]}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"N", "[", "Pwin", "]"}]], "Input"],

Cell["\<\
The number of trials you loose before you win the teddy is geometric \
distributed. So expected value of the number of games you have to play is\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalG]", "=", 
   RowBox[{"GeometricDistribution", "[", "Pwin", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Egames", "=", 
  RowBox[{
   RowBox[{"Mean", "[", "\[ScriptCapitalG]", "]"}], "+", "1"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["1", "Pwin"], "]"}]], "Input"],

Cell[TextData[{
 "Since you pay ",
 Cell[BoxData[
  FormBox["\[Euro]2", TraditionalForm]]],
 " for each game the expected value you have to pay for the teddy is around ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Euro]2", "\[Times]", "173"}], "=", "\[Euro]346"}], 
   TraditionalForm]]],
 "."
}], "Text"],

Cell[TextData[{
 "Now if the teddy costs ",
 Cell[BoxData[
  FormBox["\[Euro]100", TraditionalForm]]],
 ", what is the probability that you pay less than this if you roll the dice? \
Answering this question is equivalent to the problem of computing the \
probability that the number of losses is less than ",
 Cell[BoxData[
  FormBox["49", TraditionalForm]]],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"CDF", "[", 
   RowBox[{"\[ScriptCapitalG]", ",", "48"}], "]"}], "]"}]], "Input"],

Cell[TextData[{
 "So that\[CloseCurlyQuote]s a fair chance. On the other hand, the \
probability that you pay at least ",
 Cell[BoxData[
  FormBox["\[Euro]100", TraditionalForm]]],
 " is around ",
 Cell[BoxData[
  FormBox[
   RowBox[{"75", "%"}], TraditionalForm]]],
 " and the probability that you pay at least ",
 Cell[BoxData[
  FormBox["\[Euro]200", TraditionalForm]]],
 " is "
}], "Text"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"1", "-", 
   RowBox[{"CDF", "[", 
    RowBox[{"\[ScriptCapitalG]", ",", "99"}], "]"}]}], "]"}]], "Input"],

Cell["\<\
We finish with a plot of the probability function of the sum of ten dice \
(maybe you recognize the shape).\
\>", "Text"],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"pf", "[", 
      RowBox[{"10", ",", "s"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "10", ",", "60"}], "}"}]}], "]"}], "//", 
   "N"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"10", ",", "60"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "s", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"pf", "[", "s", "]"}], "]"}]}], "}"}]}]}], "]"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 ".",
 
 CounterBox["Subsubsection"],
 " Theory for Continuous RVS"
}], "Subsubsection"],

Cell[TextData[{
 "The distribution of a sum of two independent continuous rvs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicS]", "=", 
    RowBox[{"\[GothicX]", "+", "\[GothicY]"}]}], TraditionalForm]]],
 " can be determined by the following reasoning. If the sum ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicS]", "=", "s"}], TraditionalForm]]],
 " and we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicX]", "=", "t"}], TraditionalForm]]],
 " then ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicY]", "=", 
    RowBox[{"s", "-", "t"}]}], TraditionalForm]]],
 ". Since  ",
 Cell[BoxData[
  FormBox["\[GothicX]", TraditionalForm]]],
 " and  ",
 Cell[BoxData[
  FormBox["\[GothicY]", TraditionalForm]]],
 " are independent the pdf is"
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["pdf", "\[GothicX]"], "(", "i", ")"}], 
   RowBox[{
    SubscriptBox["pdf", "\[GothicY]"], "(", 
    RowBox[{"s", "-", "t"}], ")"}]}], TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 "If we integrate over all the possible values of ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]]],
 ", where the product is nonzero, we get the probability density at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicS]", "=", "s"}], TraditionalForm]]]
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["pdf", "\[GothicS]"], "(", "s", ")"}], "=", 
   RowBox[{
    RowBox[{
     UnderscriptBox["\[Integral]", 
      RowBox[{"\[ForAll]", "t"}]], 
     RowBox[{
      RowBox[{
       SubscriptBox["pdf", "\[GothicX]"], "(", "t", ")"}], 
      RowBox[{
       SubscriptBox["pdf", "\[GothicY]"], "(", 
       RowBox[{"s", "-", "t"}], ")"}], "d", "\[InvisibleSpace]", "t"}]}], "=", 
    RowBox[{
     UnderscriptBox["\[Integral]", 
      RowBox[{"\[ForAll]", "t"}]], 
     RowBox[{
      RowBox[{
       SubscriptBox["pdf", "\[GothicX]"], "(", 
       RowBox[{"s", "-", "t"}], ")"}], 
      RowBox[{
       SubscriptBox["pdf", "\[GothicY]"], "(", "t", ")"}], "d", 
      "\[InvisibleSpace]", "t"}]}]}]}], TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 "This integral is called ",
 StyleBox["convolution",
  FontWeight->"Bold"],
 ", often written with a star ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["pdf", "\[GothicS]"], "(", "s", ")"}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["pdf", "\[GothicX]"], "\[Star]", 
       SubscriptBox["pdf", "\[GothicY]"]}], ")"}], 
     RowBox[{"(", "s", ")"}]}]}], TraditionalForm]]],
 ". In order to retrieve all the values in the integral the variable ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]]],
 " should cover (at least) all values of the union of the sample spaces of ",
 Cell[BoxData[
  FormBox["\[GothicX]", TraditionalForm]]],
 " and  ",
 "\[GothicY]",
 ", i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "\[Element]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[CapitalOmega]", "\[GothicX]"], "\[Union]", 
      SubscriptBox["\[CapitalOmega]", "\[GothicY]"]}], "}"}]}], 
   TraditionalForm]]],
 "."
}], "Text"],

Cell[TextData[{
 "If we would like to continue with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicV]", "=", 
    RowBox[{"\[GothicX]", "+", "\[GothicY]", "+", "\[GothicZ]"}]}], 
   TraditionalForm]]],
 "  we can consider ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicV]", "=", 
    RowBox[{"\[GothicS]", "+", "\[GothicZ]"}]}], TraditionalForm]]],
 " and use the convolution sum for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicS]", "+", "\[GothicZ]"}], TraditionalForm]]],
 "."
}], "Text",
 CellDingbat->"\[Therefore]"],

Cell[TextData[{
 "Now, assume that all rvs ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[GothicX]", "i"], TraditionalForm]]],
 " are iid and introduce a variable ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " for the number of rvs in the sum. A convenient way here is to make a \
recursive definition:"
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["pdf", "n"], "(", "s", ")"}], "=", 
   RowBox[{
    UnderscriptBox["\[Integral]", 
     RowBox[{"\[ForAll]", "t"}]], 
    RowBox[{
     RowBox[{
      SubscriptBox["pdf", "1"], "(", 
      RowBox[{"s", "-", "t"}], ")"}], 
     RowBox[{
      SubscriptBox["pdf", 
       RowBox[{"n", "-", "1"}]], "(", "t", ")"}], "d", "\[InvisibleSpace]", 
     "t"}]}]}], TraditionalForm]], "DisplayFormula",
 UnderscriptBoxOptions->{LimitsPositioning->False}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 ".",
 
 CounterBox["Subsubsection"],
 " Continuous Examples"
}], "Subsubsection"],

Cell[TextData[{
 "The recurrence above can be programmed (see ",
 ButtonBox["Functions That Remember Values They Have Found",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/FunctionsThatRememberValuesTheyHaveFound"],
 "). However, in some cases you can use ",
 Cell[BoxData[
  ButtonBox["TransformedDistribution",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/TransformedDistribution"]]],
 " or ",
 Cell[BoxData[
  ButtonBox["Convolve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Convolve"]]],
 "."
}], "Text"],

Cell[TextData[{
 "Notice that when you use continuous distributions in Mathematica the ",
 Cell[BoxData[
  ButtonBox["PDF",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PDF"]]],
 " means the ",
 StyleBox["p",
  FontWeight->"Bold"],
 "robability ",
 StyleBox["d",
  FontWeight->"Bold"],
 "ensity ",
 StyleBox["f",
  FontWeight->"Bold"],
 "unction. This means that ",
 StyleBox["PDF[\[ScriptCapitalD],x]", "Output"],
 " has to be integrated over some interval in order to express a probability. \
The ",
 Cell[BoxData[
  ButtonBox["CDF",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/CDF"]]],
 " (",
 StyleBox["c",
  FontWeight->"Bold"],
 "umulative ",
 StyleBox["d",
  FontWeight->"Bold"],
 "istribution ",
 StyleBox["f",
  FontWeight->"Bold"],
 "unction) however, expresses probability."
}], "Text",
 CellDingbat->"\[FivePointedStar]"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubsuperscriptBox["\[Integral]", "a", "b"], 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{"\[ScriptCapitalD]", ",", "x"}], "]"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{"\[ScriptCapitalD]", ",", "b"}], "]"}], "-", 
   RowBox[{"CDF", "[", 
    RowBox[{"\[ScriptCapitalD]", ",", "a"}], "]"}]}], "\[Equal]", 
  RowBox[{"Probability", "[", 
   RowBox[{
    RowBox[{"a", "<", "X", "\[LessEqual]", "b"}], ",", 
    RowBox[{"X", "\[Distributed]", "\[ScriptCapitalD]"}]}], 
   "]"}]}]], "Program"],

Cell["Example 1", "Text",
 CellDingbat->"\[EmptyCircle]"],

Cell["\<\
Here's an example of the sum of two uniformly distributed rvs.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalX]", "=", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "7"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[ScriptCapitalY]", "=", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"10", ",", "15"}], "}"}], "]"}]}], ";"}]}], "Input"],

Cell[TextData[{
 "We can use ",
 Cell[BoxData[
  ButtonBox["TransformedDistribution",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/TransformedDistribution"]]],
 " in order to compute the distribution of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "=", 
    RowBox[{"X", "+", "Y"}]}], TraditionalForm]]],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalS]", "=", 
   RowBox[{"TransformedDistribution", "[", 
    RowBox[{
     RowBox[{"X", "+", "Y"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X", "\[Distributed]", "\[ScriptCapitalX]"}], ",", 
       RowBox[{"Y", "\[Distributed]", "\[ScriptCapitalY]"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input"],

Cell[TextData[{
 "The density at ",
 Cell[BoxData[
  FormBox["15", TraditionalForm]]],
 " is"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{"\[ScriptCapitalS]", ",", "15"}], "]"}]], "Input"],

Cell[BoxData[
 FractionBox["1", "10"]], "Output",
 CellChangeTimes->{3.6265578607222176`*^9}]
}, Open  ]],

Cell[TextData[{
 "We can also compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["pdf", "X"], "\[Star]", 
      SubscriptBox["pdf", "Y"]}], ")"}], 
    RowBox[{"(", "15", ")"}]}], TraditionalForm]]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{"\[ScriptCapitalX]", ",", " ", "t"}], "]"}], " ", 
     RowBox[{"PDF", "[", 
      RowBox[{"\[ScriptCapitalY]", ",", " ", 
       RowBox[{"15", " ", "-", "t"}]}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", "3", ",", "7"}], "}"}]}], "]"}], "+", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{"\[ScriptCapitalX]", ",", " ", "t"}], "]"}], " ", 
     RowBox[{"PDF", "[", 
      RowBox[{"\[ScriptCapitalY]", ",", " ", 
       RowBox[{"15", " ", "-", "t"}]}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", "10", ",", "15"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 FractionBox["1", "10"]], "Output",
 CellChangeTimes->{3.626557878718828*^9}]
}, Open  ]],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox["pdf", TraditionalForm]]],
 " is"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{"\[ScriptCapitalS]", ",", "s"}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox["1", "5"], 
        RowBox[{"17", "<", "s", "\[LessEqual]", "18"}]},
       {
        FractionBox[
         RowBox[{"22", "-", "s"}], "20"], 
        RowBox[{"18", "<", "s", "<", "22"}]},
       {
        RowBox[{
         FractionBox["1", "20"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "13"}], "+", "s"}], ")"}]}], 
        RowBox[{"13", "<", "s", "\[LessEqual]", "17"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6265578883047485`*^9}]
}, Open  ]],

Cell[TextData[{
 "Here a plot of the ",
 Cell[BoxData[
  FormBox["pdf", TraditionalForm]]],
 ":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"PDF", "[", 
     RowBox[{"\[ScriptCapitalS]", ",", "s"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "10", ",", "25"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "s", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"pdf", "[", "s", "]"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"Darker", "[", "Red", "]"}], ",", "Thick"}], "]"}]}], ",", 
   RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[
     NCache[
      Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large], Opacity[
    1.], LineBox[CompressedData["
1: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
F7BbTd4JFhex/wcqOBH2
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["s", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      RowBox[{"pdf", "(", "s", ")"}], HoldForm], TraditionalForm]},
  AxesOrigin->{10., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{10, 25}, {0., 0.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6265579062693524`*^9}]
}, Open  ]],

Cell["Try also to plot", "Text"],

Cell["\<\
Evaluate[
Convolve[PDF[\[ScriptCapitalX],t],PDF[\[ScriptCapitalY],t],t,s]
]\
\>", "Program"],

Cell[TextData[{
 "The probability that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"12", "<", "S", "\[LessEqual]", "18"}], TraditionalForm]]],
 " is"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"12", "<", "S", "\[LessEqual]", "18"}], ",", 
   RowBox[{"S", "\[Distributed]", "\[ScriptCapitalS]"}]}], "]"}]], "Input"],

Cell[BoxData[
 FractionBox["3", "5"]], "Output",
 CellChangeTimes->{3.6265579156892405`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"CDF", "[", 
   RowBox[{"\[ScriptCapitalS]", ",", "18"}], "]"}], "-", 
  RowBox[{"CDF", "[", 
   RowBox[{"\[ScriptCapitalS]", ",", "12"}], "]"}]}]], "Input"],

Cell[TextData[{
 "Here a plot of the ",
 Cell[BoxData[
  FormBox["cdf", TraditionalForm]]],
 ":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"CDF", "[", 
     RowBox[{"\[ScriptCapitalS]", ",", "s"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "12", ",", "25"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "s", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"cdf", "[", "s", "]"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"Darker", "[", "Red", "]"}], ",", "Thick"}], "]"}]}], ",", 
   RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[
     NCache[
      Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["s", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      RowBox[{"cdf", "(", "s", ")"}], HoldForm], TraditionalForm]},
  AxesOrigin->{12., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{12, 25}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6265579224736023`*^9}]
}, Open  ]],

Cell["Example 2", "Text",
 CellDingbat->"\[EmptyCircle]"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input"],

Cell[TextData[{
 "Assume that we consider the sum of ",
 Cell[BoxData[
  FormBox["10", TraditionalForm]]],
 " independent uniform rvs in the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "5"}], "]"}], TraditionalForm]]],
 ". How does the distribution look like?"
}], "Text"],

Cell["We start with one random variable:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalD]1", "=", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "5"}], "}"}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{"\[ScriptCapitalD]1", ",", "t"}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox["1", "5"], 
        RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "5"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6265690386801195`*^9, 3.6265691387661953`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{"\[ScriptCapitalD]1", ",", "t"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "1"}], ",", "6"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HoldForm", "[", "t", "]"}], ",", 
       RowBox[{"HoldForm", "[", 
        RowBox[{
         SubscriptBox["pdf", "1"], "[", "t", "]"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Darker", "[", "Red", "]"}], ",", "Thick"}], "]"}]}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQrXjXd/P//+/3M0CB2pfOmMx3CL4O9zHWy3cQfAtL
u4hlOxF8v6l6f32KEfwaX373Wc/ewfnX9l64ZXL2LZzfNS+YKWvWazjf9nz+
TrVrz+D8jUduXjiQ9AjOV5f655DJfQfOr+ss3fB18iU4fwOL4MHKmsNwfg6z
sOJDfQRfnUm00ePxITh/3n8JR3EvBL/7l8LBLeIH4fyzDxKb7qfuhfOtdixs
On1pM8J9W5c6zbJE8DU2r2TKXLAJzhddt7GJLW8jnP/QvZm1WWgdIrzkD7Pm
1y+B822kTrfy+C6G8zVFL7OukloE53OKHeM+lT0fzi97y8qz7cZUOD/wsSjP
x+LJiPi6qcqjwz8Rzj/W2S3h0t0B59eWrpbYdbAZzk8/NM0w4UMtnH9l5jVD
n9gSOL/lkU5KwZRUOH+SiicQJcH5AKP4mlo=
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCwBGIQPUnFE4iS7GfNBIGT9vfFjlW/zCiE86fO5Of2Ol8F
5zf4X5zCeq4NzpfO5BUylpoA5194HbZwcsNMON/ZPECiqnghnP9j58zlt26u
gvPD5xXOllXYBOfzKO7WqmvbDec/DGSKzS87BOeLeG/QFrU+DeerKOnX3v1/
Ec4/YrOh+l7jbTj/47NTMUKGj+D8iTFNh293PYPzXyQpHwpyfg3n1y4pS3iz
6j2cn7o78vRMi08I+6ujuiZM+ALnJ0WYzJQ48A3O5/7HVPJd7iecH3Jw1bz0
0N8I//u4T9Xb/RfOnyT+OPwJF4MDjF8hzs/7S5kRzu+pNtXYHcIE5+fnebx2
KWSG86f3+DhYdLDA+W/4vH9f28YK5wsqmMXZXWSD81OmSqsHMnPA+b9NPzWe
1eeE85NSt7YIeXDB+d9+FL1lquCG86OkZf/tnswD5zNl7lhwbyUvnH9Dym/l
mut8cH5d9IVI54/8cL5mg9oOp4kCCPslo8VPyAsi/OfZYd+0GsH/tWqTlJCz
EJz/NviyZ9sFBL/I8ZGVtqwwnP9d76P2hUwEX+n0tmv5/Qi+b3pNI/9WBD/J
9H7Y/eMIfgWzk876Wwh+c9ZnMfEnCH7fxSWM9W8RfOHWv9+MPiH4MyzC3jz7
huBHT2J67vATwZd7s+7hrN8I/u1tube3/UXwAdng0VA=
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQreo5ScWTScSBAQpaLjEnNyDxU1gZ3m9kQfBVsn+w
iXIi+MvMXprdFkTwV5w9NS1dGcFf+7s3rMENwd8eLnJtYw+C/9BRruOViiic
X1ws18e+GcFfbiUeG2knBud/Mua933AVwV9a8nNLT5I4nH/A9H8jUyqCf+cb
i39FOoIvUinwMjkHwW+pVZe1LkPwU9pCW192IvgqMzaGum1E8B0ityvt2Yzg
x0jtfW+4DcGfMudEp+xuBJ9l4f29X44g+E9W8qotvoHgM2QLf5a4jeDL6Ege
6LuL4IesU4mqeoTgH9lk3Rf4BsF/UOwYffwdgv/HxF3D9iOCb7I96JDGNwQ/
oCKif94PBD/HMi5G5DeC3/ErWbPrL4K/ZHfmt///EXwAD81zXA==
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      RowBox[{
        SubscriptBox["pdf", "1"], "(", "t", ")"}], HoldForm], 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1, 6}, {0., 0.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6265690547103353`*^9, 3.6265691412237124`*^9}]
}, Open  ]],

Cell[TextData[{
 "Looking at the sum of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " independent rvs ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox["X", "i"]}], TraditionalForm]]],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["X", "i"], "\[Distributed]", 
    RowBox[{"U", "(", 
     RowBox[{"0", ",", "5"}], ")"}]}], TraditionalForm]]],
 " there is a built-in distribution: ",
 Cell[BoxData[
  ButtonBox["UniformSumDistribution",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/UniformSumDistribution"]]],
 ". "
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalD]", "[", "n_", "]"}], ":=", 
  RowBox[{"UniformSumDistribution", "[", 
   RowBox[{"n", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "5"}], "}"}]}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"\[ScriptCapitalD]", "[", "2", "]"}], ",", "t"}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"0", 
        RowBox[{"t", "<", "0"}]},
       {
        FractionBox["t", "25"], 
        RowBox[{"0", "\[LessEqual]", "t", "<", "5"}]},
       {
        FractionBox[
         RowBox[{"10", "-", "t"}], "25"], 
        RowBox[{"5", "\[LessEqual]", "t", "\[LessEqual]", "10"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.626569077199847*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"\[ScriptCapitalD]", "[", "2", "]"}], ",", "t"}], "]"}], "]"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "1"}], ",", "11"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HoldForm", "[", "t", "]"}], ",", 
       RowBox[{"HoldForm", "[", 
        RowBox[{
         SubscriptBox["pdf", "2"], "[", "t", "]"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Darker", "[", "Green", "]"}], ",", "Thick"}], "]"}]}], ",", 
    RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], Opacity[1.], 
    LineBox[CompressedData["
1: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
/siPH4z/C9qRuxw=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      RowBox[{
        SubscriptBox["pdf", "2"], "(", "t", ")"}], HoldForm], 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1, 11}, {0., 0.19996306668723274`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6265690795253115`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p3", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"\[ScriptCapitalD]", "[", "3", "]"}], ",", "t"}], "]"}], "]"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "1"}], ",", "16"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HoldForm", "[", "t", "]"}], ",", 
       RowBox[{"HoldForm", "[", 
        RowBox[{
         SubscriptBox["pdf", "3"], "[", "t", "]"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Darker", "[", "Blue", "]"}], ",", "Thick"}], "]"}]}], ",", 
    RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 
     NCache[
      Rational[2, 3], 0.6666666666666666]], Thickness[Large], Opacity[1.], 
    LineBox[CompressedData["
1:eJxF2Xk0VG/cAHBRtlDZtxljDzPWhMp8v5akImvKUqIkhCJUfrSQUCmkUopS
lmTJvmSbQWSnVKKIUFFZIrK8857zvs39557PufdZ7/f7PM85V9rV19qNlYWF
ZX4VC8v/3jnFKrevrPysZvm/q4XDYs3ON0zHzg7UxT1lWvz1amOFvUyTr5sZ
mj/98c9Wa/qo92wn/vnu5IKOTuY35vuvdJV9rb/8s98To8yBkO5//nG0ttFd
kWnPjTD2o6Prnw9nbVFckmXa9rnGE7FXHf/sdRYMn5Bb/nkqc04j6kDtP38j
T5+4nVfzz0O5P3KfsDGd4dXsGG5TyawvLN1m9nvJP39xq44o1Hv6zw0nsy9O
XEpnlg+5F6rQ9fif3yn/HFd/8+Cf2wSq70x6X/znvbz90nbBPv8s6RFO3XTR
HthduUX8uoypuhXq6vXLwVBz5xO/jWAUVUj1UEZoWyQ8e1QgIPY8lbpjxcap
tS0WQnPTHbJ2F1LDRoOOOG6+DY0Nrp7T+rXUmvZ7x7/eT4KXRWL/JW96RV3+
4FxewfoQnKy3TY6Hd1H3Xqx4+ysjFYxMo68lv3hHfbZR5Le8RRpcCIivMO/9
RGVt9+N3/J0B3BNZlX9/DFHtA9rUbtzLArYKr6Nth8eoeRLK5vUGOZAux/Xu
we4JKtugofaSfx78FTSM2mwzSXW4/MBaU7wA2sK4Tl5wmKNecjAbNPMuhD++
8VvdCheoeZQFX/eaIphTuvrt5Y5lKsfrvdeSjpZCFduXhXBeNtBMZ5MsKSuD
cwkcmacoa+Dg2edPO3kqgBzj0iTryQGFJN5G9oJKMCmsOFSjxwOfpsvtpNmr
IX+w4m12Cx9cOlw4dZ9cA2sqzhyiVK2HvM2uF0rP1UKVx+qA+TsCYEIqa9yu
RAOzPdOCPyWEoI9r/fruLhpYjCx5G2cLA0d/5YMJ+TooUD+6m++vGCQ1CI6c
ba8DoSF6+8USCdDM86JwnqmHn6b6vPsuEuBgmNgLmZYGuHC71v76QxIUKgW8
3+fXBDb52XYJpXKwS6CF9EXiFTja7w7Z0yEPnxZljvnVvwJCb+B5nZ8KwN3R
MXtVtAU6jwVJJhoqgUsgWZBW1QZL5cSsu6AKs85hjhbH2qFXTaW464YaNMh5
W/3g7AC96s977p9SBye+ujvB+R3g9dpqVetbDbg8eFLx1pouIIuFxe5u2gTW
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
QnPZ
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      RowBox[{
        SubscriptBox["pdf", "3"], "(", "t", ")"}], HoldForm], 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1, 16}, {0., 0.1499999863119406}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.626569081430694*^9}]
}, Open  ]],

Cell["\<\
And finally the plot of the pdf of ten independent uniform rvs  (maybe you \
recognize the shape). \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p10", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"\[ScriptCapitalD]", "[", "10", "]"}], ",", "t"}], "]"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "1"}], ",", "51"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HoldForm", "[", "t", "]"}], ",", 
       RowBox[{"HoldForm", "[", 
        RowBox[{
         SubscriptBox["pdf", "10"], "[", "t", "]"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
    RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
rOyw7fB/z/SPWiGFZo246qvs8O54xaLtmC16d23fj5F6dqB6SNOX9tuhqIDD
FszD7DCgODU92GuPPghm7nKU5ADCXIht76wDil14EBZD4gAh2xYnzOGI9nR0
jJT7coDHfO7XBC0ndCFk7dbmfQ7Q8zNkqrnrgtT38bDJ93JAUKT7U+8/rmhE
Uum49TIHbPc+sI1JwR1p9rho3zLYBpdNJHbTZ3ugzwrP2sw6toGWsJzteLc3
SqEdUgj+uQ365e1WBCoOI/0Piyk3ODlh9fCE29NsH5QeJ31w3pYTBpKvpxyN
90XImXgsEMoJ+wX4XjAk+aEf6vZiJtc54b7o+/o9Of4IxuK/XR3nBDEzp4BT
/cfQdG2++VOG7WCvWeqgRXscZSY/evBddjs0Vu79r0v3BJrV/3na4Ph2+HlE
QXnhy0mUe9WSZXxtO3w3J1wnm/5D0rUa2ozbd0DvAG3Z/bhgdEYCvmeL74A1
9fAdnjYhSGbVYV+LyQ6IuuLm4clwGp3xOvzvoN0OCI99OSn6/TTq6Q6smPbZ
Aat8+7tu9YWiiFsJO3kTdsCmxRMaupYzqHdHZlvZ9R3gZq/4wro9HMlFFIXi
ezvAhWQw7t0fgfqtG4d9e3aAl7R24gDreaRIM1v8mJcL1vQOFjYvRaFoWtl1
KVku+Nfyxc0kPRp9oHO3SdLZim80FyZrxqBYxl5aFwcuMNtTObkWH4tG2Wpd
/2VzgVdesvtCQDzS5Jir8SnjgmxFD3tvrYsocZvctjcNXJCxnv67lu4S0t2R
8/jmRy5Ag8OR1x4koPRd5/iNRLhh8Kfhu3v2Keg7b92JO8rcsHJNMSfeKhVh
/vk2LsQNoTf5DNrl09C0oGfIhCs3ZBr2Dc9oX0YkcXJvTD43FDCILjlGXkG5
Euflpyu4YUYi6baASAZalKyPtH3GDY7BHx01mzJQnozCHpkJbmjlpyZMbbuG
VhU4k9qkeOBWCuOT/yazkKUS5bOKJg8Q7xhB7k42uqUcqZ9pygOWqediJAJz
kLXq4vcjh3mgjrcSeXLlonKtdyTWUh4Itn9U2XztJqLT2X4jsI4HPMOW4m+Y
5KNDutSlwXYeKM/lfcD4NB8xGTQUln3nAcm/f14XPC1AbpC3aa6wE5w8QwIV
popQrdF7+2r9ndBiRs85erYYcZjsuC9svhMkol+bOe+6hepJ0c4zR3eCC/O2
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
0Q==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      RowBox[{
        SubscriptBox["pdf", "10"], "(", "t", ")"}], HoldForm], 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1, 51}, {0., 0.08608352266352967}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6265690865027103`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p10", ",", "p3", ",", "p2", ",", "p1", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "t", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{
        SubscriptBox["pdf", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3", ",", "10"}], "}"}]], "[", "t", 
        "]"}], "]"}]}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
rOyw7fB/z/SPWiGFZo246qvs8O54xaLtmC16d23fj5F6dqB6SNOX9tuhqIDD
FszD7DCgODU92GuPPghm7nKU5ADCXIht76wDil14EBZD4gAh2xYnzOGI9nR0
jJT7coDHfO7XBC0ndCFk7dbmfQ7Q8zNkqrnrgtT38bDJ93JAUKT7U+8/rmhE
Uum49TIHbPc+sI1JwR1p9rho3zLYBpdNJHbTZ3ugzwrP2sw6toGWsJzteLc3
SqEdUgj+uQ365e1WBCoOI/0Piyk3ODlh9fCE29NsH5QeJ31w3pYTBpKvpxyN
90XImXgsEMoJ+wX4XjAk+aEf6vZiJtc54b7o+/o9Of4IxuK/XR3nBDEzp4BT
/cfQdG2++VOG7WCvWeqgRXscZSY/evBddjs0Vu79r0v3BJrV/3na4Ph2+HlE
QXnhy0mUe9WSZXxtO3w3J1wnm/5D0rUa2ozbd0DvAG3Z/bhgdEYCvmeL74A1
9fAdnjYhSGbVYV+LyQ6IuuLm4clwGp3xOvzvoN0OCI99OSn6/TTq6Q6smPbZ
Aat8+7tu9YWiiFsJO3kTdsCmxRMaupYzqHdHZlvZ9R3gZq/4wro9HMlFFIXi
ezvAhWQw7t0fgfqtG4d9e3aAl7R24gDreaRIM1v8mJcL1vQOFjYvRaFoWtl1
KVku+Nfyxc0kPRp9oHO3SdLZim80FyZrxqBYxl5aFwcuMNtTObkWH4tG2Wpd
/2VzgVdesvtCQDzS5Jir8SnjgmxFD3tvrYsocZvctjcNXJCxnv67lu4S0t2R
8/jmRy5Ag8OR1x4koPRd5/iNRLhh8Kfhu3v2Keg7b92JO8rcsHJNMSfeKhVh
/vk2LsQNoTf5DNrl09C0oGfIhCs3ZBr2Dc9oX0YkcXJvTD43FDCILjlGXkG5
Euflpyu4YUYi6baASAZalKyPtH3GDY7BHx01mzJQnozCHpkJbmjlpyZMbbuG
VhU4k9qkeOBWCuOT/yazkKUS5bOKJg8Q7xhB7k42uqUcqZ9pygOWqediJAJz
kLXq4vcjh3mgjrcSeXLlonKtdyTWUh4Itn9U2XztJqLT2X4jsI4HPMOW4m+Y
5KNDutSlwXYeKM/lfcD4NB8xGTQUln3nAcm/f14XPC1AbpC3aa6wE5w8QwIV
popQrdF7+2r9ndBiRs85erYYcZjsuC9svhMkol+bOe+6hepJ0c4zR3eCC/O2
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
0Q==
      "]]}}, {{}, {}, 
    {RGBColor[0, 0, 
      NCache[
       Rational[2, 3], 0.6666666666666666]], Thickness[Large], Opacity[1.], 
     LineBox[CompressedData["
1:eJxF2Xk0VG/cAHBRtlDZtxljDzPWhMp8v5akImvKUqIkhCJUfrSQUCmkUopS
lmTJvmSbQWSnVKKIUFFZIrK8857zvs39557PufdZ7/f7PM85V9rV19qNlYWF
ZX4VC8v/3jnFKrevrPysZvm/q4XDYs3ON0zHzg7UxT1lWvz1amOFvUyTr5sZ
mj/98c9Wa/qo92wn/vnu5IKOTuY35vuvdJV9rb/8s98To8yBkO5//nG0ttFd
kWnPjTD2o6Prnw9nbVFckmXa9rnGE7FXHf/sdRYMn5Bb/nkqc04j6kDtP38j
T5+4nVfzz0O5P3KfsDGd4dXsGG5TyawvLN1m9nvJP39xq44o1Hv6zw0nsy9O
XEpnlg+5F6rQ9fif3yn/HFd/8+Cf2wSq70x6X/znvbz90nbBPv8s6RFO3XTR
HthduUX8uoypuhXq6vXLwVBz5xO/jWAUVUj1UEZoWyQ8e1QgIPY8lbpjxcap
tS0WQnPTHbJ2F1LDRoOOOG6+DY0Nrp7T+rXUmvZ7x7/eT4KXRWL/JW96RV3+
4FxewfoQnKy3TY6Hd1H3Xqx4+ysjFYxMo68lv3hHfbZR5Le8RRpcCIivMO/9
RGVt9+N3/J0B3BNZlX9/DFHtA9rUbtzLArYKr6Nth8eoeRLK5vUGOZAux/Xu
we4JKtugofaSfx78FTSM2mwzSXW4/MBaU7wA2sK4Tl5wmKNecjAbNPMuhD++
8VvdCheoeZQFX/eaIphTuvrt5Y5lKsfrvdeSjpZCFduXhXBeNtBMZ5MsKSuD
cwkcmacoa+Dg2edPO3kqgBzj0iTryQGFJN5G9oJKMCmsOFSjxwOfpsvtpNmr
IX+w4m12Cx9cOlw4dZ9cA2sqzhyiVK2HvM2uF0rP1UKVx+qA+TsCYEIqa9yu
RAOzPdOCPyWEoI9r/fruLhpYjCx5G2cLA0d/5YMJ+TooUD+6m++vGCQ1CI6c
ba8DoSF6+8USCdDM86JwnqmHn6b6vPsuEuBgmNgLmZYGuHC71v76QxIUKgW8
3+fXBDb52XYJpXKwS6CF9EXiFTja7w7Z0yEPnxZljvnVvwJCb+B5nZ8KwN3R
MXtVtAU6jwVJJhoqgUsgWZBW1QZL5cSsu6AKs85hjhbH2qFXTaW464YaNMh5
W/3g7AC96s977p9SBye+ujvB+R3g9dpqVetbDbg8eFLx1pouIIuFxe5u2gTW
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
QnPZ
      "]]}}, {{}, {}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], Opacity[1.],
      LineBox[CompressedData["
1:eJxF1Qk0lVsbB/BjOGUodN73FCLDa4huElGX8jxRt+JeU6TbqCINikoy5UOh
XNMxVaKIupUiFBI3KZxXmapbqMNRoeQ6GhCi79y1vs+719prr9/ae+397P/a
a22tnT7OnpIsFitd3P8ducGRIT9+iO6z/tfGjvcbt3UxFoat7y56yPh6lJb9
7mjGVkmVGg0KjHdfG6pOVx+YctlLT1lzy/4pb1nyS5q3//spf2+Wif7DVjjl
L7Wm3FTnlim3F6wPzum+NOXk+SVKvHuPoS3Fj3X3fjg8KzqxiS0lgAU8s7l2
vCRwXe0CPiU9EG5/rS+QkwkW3q/15WsGQLfqeYt9YQ5kKzwOPaHzBco57o5X
w65CwJBe6NWlI5Cepf+hq/Qm7Mie63ecPQ7cJRO8xXaFUGtoxzWsmoSx2/Te
RfnFAF0h3ZOeEnhy/W179dUlkJuQdQ/XSWFvfK50QUEZmNZIqc12ZeNgb1Gd
sf09CNsr7ezmNh2523RqfISV4OrrdGLQXBZPlTWsM6CqwGVSYKUO8tjueLaU
4/sAXg+UDGXrzMQzpd0zG69UQ9zuJvNyE0XUX1i9L3zkIYReqda7eF4JVy9u
9iCsa2Cs/uGiuNhZ2CS1Y80x/1qQL3438YjHwYXdYcbPHtWBbxMRl5LKwX6f
ut5iug5efLRW8zjHwRtjMy+mNNZBlk62hVQ2Bw2Uzs/c0FoH5mlbj628xUF9
yzt9rR/rwD3wxWBlIwc1eB9yOzh8KAH+2xJ5AjkrnFX63Pkwd8vI4ShFAlvq
zjbXe/IhLEBPcgNBYKJzZ3TePj7YFZ7UHFIlUGGP97C3Hx+E2iu3mhoSKJcc
9UwUzQf5aeUvCtYSKP2hPG4onw/uT/Loq5EEDqdQkhITfMihoow9TxM42N1h
SkvQ0BPkfkYrjsAP5umevGk07DfgeqanEPiqVYnWUqLBPyqUFZtDYJXaZII1
RUMcOi31eUBgbG6r+sl1NDSfWXBhQQ2BkUPJDr/a08ARsdnv+QSG/uIQTq6n
4Wxm+VP3ZgIPva95l7uFhtwx6qBzJ4FuPxXn1fjQ0Os0+VzhLYFOxw8K4vxo
MLzWavm4h0DbRgPFDYE0FLjFya4aIHC5b9bhnggaPud7+bI+E2j+YHNufjQN
S6ZZv6wYItCIM+eFfywNx7aqWQWOEjh/19PpwKOh/PZwrtkEgVq3436enkbD
hHyL/GcWicpGfXW7ztKAu/IO50uTqCEwSjufTENEeWTbPhkS9WOPeDyLp6Fm
ljvqzyBxoWWZiXwMDTJ7Lf58q0iiad93lk0kDbZVpEIWQaLluZVNQWHiPA7S
r5Tnkrh2pH5/nz8NRG2O9d/zSLS/omihfZiGDeqh13jaJLq6ushsOkDD68cm
x+QMSdxRLMild4nzmJ/B+b6MxBCfQcFVRxrIzJVh1X4k9m63rNaVpsHziLFC
cwCJRU89bw1Nit/POo0MQQiJoasTL9SM8mHj8PfSbydJ5C7oDvIU8SHToUxk
lEriyuF408vtfNCTXLT9/B0SM2Lf5OoU8mGZl5qV3zCJzndPR1Pb+LB18ci4
bgAXKzitv2qV1cHHYeejZvtmo+7IpwHbiFqYGdZYHO87ByuehMSEmNRAQpWy
QP2wMj4iXpxqev8QXE1kpX/fqYLusTcuON6phlteKoOC3apoMPzlZpvXA3Bo
bGpT2DQXo3hlzxONq+C3fpf8o2vV8MbyMxVPJytB2DC6Rs9OHXOXXaxO3nMP
SoWrOiOWz8OaM9kjtybLgCotsDSw1kBsi9TocC+BfduF9SvmamLXcQ9/L1Ex
fLJy/EciWRO92cIk05hCsGE5fu4jtTC9I2iVxpubsLRde9ggXgvzAwwfJMhc
g6HUyNdxs7Qx+GUmpVmXA7tuOpTFJmkj91uqtvfyTDgi6E/qkqPwZUPbXZmM
ZPhNpOK4OY5C7ibbn+vdImBYJJtgnUBhugReei4bAVmDow0GPAqHr5rJd94L
h6+f2uy+pVCYP6Ip+KIRDhlfz61JzaDQylAkYdn8H+gfVYGmPApZWet4XYNB
ECutamRTT2HkH5MFRiaHwJwtd8DwiXh9+4dwmzRfELLH8mY1UtjvdP3PW199
YMn0dgNhC4UNsW4iqcgD8Fo2Xfd4G4WJkkWh1y/vgSi5GA+PV//uf0r7+QEv
MJYPyrETUHhoxfbaCbPdcHLGJi3VLgqdA2YoONXuggWKquql78XzggYLUcNW
eK4ot+VCn/h+KsER1ts2Q6jSWHpkP4XBLvPrUwc2wtNZ7coug+L66iN+X67o
AiGcejfLzxRqsI2zEy46gR5Rnqb9VXx+WHlLzXZ7CCLTyU8j4vvt9xnkZK8C
HW7M+tZRcb3VyT8OnwBo5AYl3R8X55u/dl7VIzMImL2v5coEhaam44GqM+aD
9pxNSvE/xPnOTxE8tZCEJ3NsHY5K6OD//zN/ZYv4LVKMNVUMG2zYjOtVVGcs
mM74bWlniYws4++ul3f0yDFemGRcmq3AOFFuzU7l2Yxdx4+UsXUZC183eAit
GQ9fDK9MDWX8z/RAJ12W7pSjTtm8kwtk/PA8r0wvmDGroDPW+jjjwL+DzYLC
GXtr3476cJqxU4WOAT+dsdog+2BkBeONUi7W2X8xTp19aXZlFWOFFVb3vz5i
LBHjr+TRwLiH6i2y7mBMLTWL3iZk7G57YnPQG8ZtvhrSRT2Mn1S6uWqJGMu0
XDZY8Ynx6ndfJjZ+YfyXXOKVxBHG4+odQTdGGS9b/JMDf5yx36og6t0E40I3
/siPH4z/C9qRuxw=
      "]]}}, {{{}, {}, 
     {RGBColor[
       NCache[
        Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQrXjXd/P//+/3M0CB2pfOmMx3CL4O9zHWy3cQfAtL
u4hlOxF8v6l6f32KEfwaX373Wc/ewfnX9l64ZXL2LZzfNS+YKWvWazjf9nz+
TrVrz+D8jUduXjiQ9AjOV5f655DJfQfOr+ss3fB18iU4fwOL4MHKmsNwfg6z
sOJDfQRfnUm00ePxITh/3n8JR3EvBL/7l8LBLeIH4fyzDxKb7qfuhfOtdixs
On1pM8J9W5c6zbJE8DU2r2TKXLAJzhddt7GJLW8jnP/QvZm1WWgdIrzkD7Pm
1y+B822kTrfy+C6G8zVFL7OukloE53OKHeM+lT0fzi97y8qz7cZUOD/wsSjP
x+LJiPi6qcqjwz8Rzj/W2S3h0t0B59eWrpbYdbAZzk8/NM0w4UMtnH9l5jVD
n9gSOL/lkU5KwZRUOH+SiicQJcH5AKP4mlo=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCwBGIQPUnFE4iS7GfNBIGT9vfFjlW/zCiE86fO5Of2Ol8F
5zf4X5zCeq4NzpfO5BUylpoA5194HbZwcsNMON/ZPECiqnghnP9j58zlt26u
gvPD5xXOllXYBOfzKO7WqmvbDec/DGSKzS87BOeLeG/QFrU+DeerKOnX3v1/
Ec4/YrOh+l7jbTj/47NTMUKGj+D8iTFNh293PYPzXyQpHwpyfg3n1y4pS3iz
6j2cn7o78vRMi08I+6ujuiZM+ALnJ0WYzJQ48A3O5/7HVPJd7iecH3Jw1bz0
0N8I//u4T9Xb/RfOnyT+OPwJF4MDjF8hzs/7S5kRzu+pNtXYHcIE5+fnebx2
KWSG86f3+DhYdLDA+W/4vH9f28YK5wsqmMXZXWSD81OmSqsHMnPA+b9NPzWe
1eeE85NSt7YIeXDB+d9+FL1lquCG86OkZf/tnswD5zNl7lhwbyUvnH9Dym/l
mut8cH5d9IVI54/8cL5mg9oOp4kCCPslo8VPyAsi/OfZYd+0GsH/tWqTlJCz
EJz/NviyZ9sFBL/I8ZGVtqwwnP9d76P2hUwEX+n0tmv5/Qi+b3pNI/9WBD/J
9H7Y/eMIfgWzk876Wwh+c9ZnMfEnCH7fxSWM9W8RfOHWv9+MPiH4MyzC3jz7
huBHT2J67vATwZd7s+7hrN8I/u1tube3/UXwAdng0VA=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQreo5ScWTScSBAQpaLjEnNyDxU1gZ3m9kQfBVsn+w
iXIi+MvMXprdFkTwV5w9NS1dGcFf+7s3rMENwd8eLnJtYw+C/9BRruOViiic
X1ws18e+GcFfbiUeG2knBud/Mua933AVwV9a8nNLT5I4nH/A9H8jUyqCf+cb
i39FOoIvUinwMjkHwW+pVZe1LkPwU9pCW192IvgqMzaGum1E8B0ityvt2Yzg
x0jtfW+4DcGfMudEp+xuBJ9l4f29X44g+E9W8qotvoHgM2QLf5a4jeDL6Ege
6LuL4IesU4mqeoTgH9lk3Rf4BsF/UOwYffwdgv/HxF3D9iOCb7I96JDGNwQ/
oCKif94PBD/HMi5G5DeC3/ErWbPrL4K/ZHfmt///EXwAD81zXA==
       "]]}, {}}, {{}, {}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      RowBox[{
        SubscriptBox["pdf", 
         RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3", ",", "10"}], "}"}]], "(", "t", 
        ")"}], HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.626569096084632*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Normal Distribution"
}], "Subsection"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 ".",
 
 CounterBox["Subsubsection"],
 " Theory"
}], "Subsubsection"],

Cell[TextData[{
 "According to the Central Limit Theorem (CLT) a sum ",
 Cell[BoxData[
  FormBox["\[GothicS]", TraditionalForm]]],
 " of independent rvs ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[GothicX]", "i"], TraditionalForm]]],
 " approaches the normal distribution when the number ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " of variables increases."
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SubscriptBox["\[GothicX]", "i"]}], "=", 
    RowBox[{"\[GothicS]", 
     OverscriptBox["\[Distributed]", "CLT"], 
     RowBox[{"N", "(", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}]}]}], ",", " ", 
   RowBox[{"\[Mu]", "=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{"E", "[", 
      SubscriptBox["\[GothicX]", "i"], "]"}]}]}], ",", " ", 
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], 
    OverscriptBox["=", 
     RowBox[{"indep", "."}]], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{"V", "[", 
      SubscriptBox["\[GothicX]", "i"], "]"}]}]}]}], 
  TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 "The average ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[GothicX]", "_"], TraditionalForm]]],
 " satisfies"
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "n"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      SubscriptBox["\[GothicX]", "i"]}]}], "=", 
    RowBox[{
     OverscriptBox["\[GothicX]", "_"], 
     OverscriptBox["\[Distributed]", "CLT"], 
     RowBox[{"N", "(", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], ")"}]}]}], ",", " ", 
   RowBox[{"\[Mu]", "=", 
    RowBox[{
     FractionBox["1", "n"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{"E", "[", 
       SubscriptBox["\[GothicX]", "i"], "]"}]}]}]}], ",", " ", 
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], 
    OverscriptBox["=", 
     RowBox[{"indep", "."}]], 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["n", "2"]], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{"V", "[", 
       SubscriptBox["\[GothicX]", "i"], "]"}]}]}]}]}], 
  TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 "If all ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[GothicX]", "i"], TraditionalForm]]],
 " are iid (independent identical distributed) with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Mu]", "=", 
    RowBox[{"E", "[", 
     SubscriptBox["\[GothicX]", "i"], "]"}]}], TraditionalForm]],
  CellChangeTimes->{{3.5251827091027575`*^9, 3.525182760458048*^9}}],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], "=", 
    RowBox[{"V", "[", 
     SubscriptBox["\[GothicX]", "i"], "]"}]}], TraditionalForm]]],
 " we can write"
}], "Text",
 CellDingbat->"\[FivePointedStar]"],

Cell[BoxData[
 FormBox[
  FrameBox[
   RowBox[{
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      SubscriptBox["\[GothicX]", "i"]}], "\[LongEqual]", "\[GothicS]"}], 
    OverscriptBox["\[Distributed]", "CLT"], 
    RowBox[{"N", "(", 
     RowBox[{
      RowBox[{"n", " ", "\[Mu]"}], ",", 
      RowBox[{
       SqrtBox["n"], " ", "\[Sigma]"}]}], ")"}]}],
   FrameStyle->RGBColor[1, 0, 0]], TraditionalForm]], "DisplayFormula"],

Cell[BoxData[
 FormBox[
  FrameBox[
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "n"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       SubscriptBox["\[GothicX]", "i"]}]}], "\[LongEqual]", 
     OverscriptBox["\[GothicX]", "_"]}], 
    OverscriptBox["\[Distributed]", "CLT"], 
    RowBox[{"N", "(", 
     RowBox[{"\[Mu]", ",", 
      FractionBox["\[Sigma]", 
       SqrtBox["n"]]}], ")"}]}],
   FrameStyle->RGBColor[1, 0, 0]], TraditionalForm]], "DisplayFormula"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 ".",
 
 CounterBox["Subsubsection"],
 " Example"
}], "Subsubsection"],

Cell[TextData[{
 "Example: Assume that we consider waiting times at a bus station ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Tau]", "i"], "\[Distributed]", 
    RowBox[{"U", "(", 
     RowBox[{"0", ",", "10"}], ")"}]}], TraditionalForm]]],
 " minutes. If we compute the average waiting time ",
 Cell[BoxData[
  FormBox["\[Tau]", TraditionalForm]]],
 " for 20 persons. What is the error in computing ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", 
    RowBox[{"\[Tau]", ">", "6"}], ")"}], TraditionalForm]]],
 " if we use normal distribution as an approximation?"
}], "Text"],

Cell["We can compute the approximate probability with", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{"\[Mu]", "=", 
   RowBox[{
    RowBox[{"E", "[", 
     SubscriptBox["\[Tau]", "i"], "]"}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"10", "-", "0"}], "2"], "=", "5"}]}]}], 
  TraditionalForm]], "DisplayFormula"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["\[Sigma]", "2"], "=", " ", 
   RowBox[{
    RowBox[{"V", "[", 
     SubscriptBox["\[Tau]", "i"], "]"}], "=", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"10", "-", "0"}], ")"}], "2"], "12"], "=", 
     FractionBox["25", "3"]}]}]}], TraditionalForm]], "DisplayFormula"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Therefore]", "\[Tau]"}], "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "20"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "20"], 
      SubscriptBox["\[Tau]", "i"]}]}], "=", 
    RowBox[{
     RowBox[{"\[Tau]", 
      OverscriptBox["\[Distributed]", "CLT"], 
      RowBox[{"N", "(", 
       RowBox[{"5", ",", 
        FractionBox[
         SqrtBox[
          RowBox[{"25", "/", "3"}]], 
         SqrtBox["20"]]}], ")"}]}], "=", 
     RowBox[{"N", "(", 
      RowBox[{"5", ",", " ", 
       SqrtBox[
        FractionBox["5", "12"]]}], ")"}]}]}]}], 
  TraditionalForm]], "DisplayFormula"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"P", "(", 
    RowBox[{"\[Tau]", ">", "6"}], ")"}], "=", 
   RowBox[{
    RowBox[{"1", "-", 
     RowBox[{"cdf", "(", "6", ")"}]}], "=", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"\[CapitalPhi]", "(", 
       FractionBox[
        RowBox[{"6", "-", "5"}], 
        RowBox[{" ", 
         SqrtBox[
          RowBox[{"5", "/", "12"}]]}]], ")"}]}], "\[TildeTilde]", 
     RowBox[{"1", "-", 
      RowBox[{"\[CapitalPhi]", "(", "1.55", ")"}]}], "\[TildeTilde]", 
     "0.061"}]}]}], TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 "The probability is approximated with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"6.1", "%"}], TraditionalForm]]],
 "."
}], "Text"],

Cell["Here's the calculation with Mathematica:", "Text"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalU]", "=", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Mu]", "=", 
  RowBox[{"Mean", "[", "\[ScriptCapitalU]", "]"}]}]], "Input"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.626564995558214*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sigma]", "=", 
  RowBox[{"StandardDeviation", "[", "\[ScriptCapitalU]", "]"}]}]], "Input"],

Cell[BoxData[
 FractionBox["5", 
  SqrtBox["3"]]], "Output",
 CellChangeTimes->{3.6265649989228888`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalN]", "=", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"\[Mu]", ",", 
     FractionBox["\[Sigma]", 
      SqrtBox["20"]]}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Papprox", "=", 
   RowBox[{"1", "-", 
    RowBox[{"CDF", "[", 
     RowBox[{"\[ScriptCapitalN]", ",", "6"}], "]"}]}]}], "]"}]], "Input"],

Cell[BoxData["0.06066762517924107`"], "Output",
 CellChangeTimes->{3.626565012007513*^9}]
}, Open  ]],

Cell["\<\
In order to compute the error we need the exact distribution, which is\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalS]", "=", 
   RowBox[{"UniformSumDistribution", "[", 
    RowBox[{"20", ",", 
     FractionBox[
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], "20"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"kk", " ", "=", " ", 
  RowBox[{"StandardDeviation", "[", "\[ScriptCapitalS]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.626571978503745*^9, 3.6265719945689697`*^9}, {
  3.626575116600266*^9, 3.626575131023157*^9}}],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   FractionBox["5", "3"]], "2"]], "Output",
 CellChangeTimes->{3.6265751011031575`*^9, 3.6265751602440176`*^9}]
}, Open  ]],

Cell[TextData[{
 "We use the ",
 Cell[BoxData[
  ButtonBox["UniformSumDistribution",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/UniformSumDistribution"]]],
 " for ",
 Cell[BoxData[
  FormBox["20", TraditionalForm]]],
 " rvs and scale each variable to the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", 
     RowBox[{"1", "/", "2"}]}], "]"}], TraditionalForm]]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Pexact", "=", 
   RowBox[{"1", "-", 
    RowBox[{"CDF", "[", 
     RowBox[{"\[ScriptCapitalS]", ",", "6"}], "]"}]}]}], "]"}]], "Input"],

Cell[BoxData["0.060956226379768955`"], "Output",
 CellChangeTimes->{{3.626565043139757*^9, 3.6265650557102804`*^9}, 
   3.6265751100479813`*^9, 3.6265751634386578`*^9}]
}, Open  ]],

Cell["The absolute error is then", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"absoluteError", "=", 
  RowBox[{"N", "[", 
   RowBox[{"Papprox", "-", "Pexact"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"-", "0.0002886012005278715`"}]], "Output",
 CellChangeTimes->{{3.6265650477827854`*^9, 3.6265650580787535`*^9}}]
}, Open  ]],

Cell[TextData[{
 "So the absolute error is in this case ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.029", "pp"}], TraditionalForm]]],
 " (",
 ButtonBox["percentage points",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Percentage_point"], None},
  ButtonNote->"http://en.wikipedia.org/wiki/Percentage_point"],
 "). The relative error is "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"relativeError", "=", 
  FractionBox["absoluteError", "Pexact"]}]], "Input"],

Cell[BoxData[
 RowBox[{"-", "0.004734564747001083`"}]], "Output",
 CellChangeTimes->{3.626565061630463*^9}]
}, Open  ]],

Cell[TextData[{
 "I.e. the relative error is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4.7", "\:2030"}], TraditionalForm]]],
 "."
}], "Text"],

Cell["\<\
We finish with a graphical comparison between the exact distribution and the \
normal approximation:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{"\[ScriptCapitalN]", ",", "t"}], "]"}], ",", 
     RowBox[{"PDF", "[", 
      RowBox[{"\[ScriptCapitalS]", ",", "t"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "2", ",", "8"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "t", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"pdf", "[", "t", "]"}], "]"}]}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
mg==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVj3881Hccxz/f7xedVsmv/JZruUSyVJLT5/OeW9RSlqhsHMWVQihkD4YU
ldlOspPf5Nc00cRCGbtLq3ZmfoS1RUc2tPkVcojd/ng9Xo/nX6/ni3082FVA
I4SOK/J/53wSvFpRcIL6NZPybMMQ0v/7QwZB3zNR/FhpG34ldC+8ugzBFvFP
2lrTbdi8lWujqYYgTXvmvub1dly7n+XJMUZwOluofLa3A38WFGX6mo1AGJ/b
k7GtEy8mj45WmiIIj5YtGid34t3Szgs7LRHwy33/dCfPcPvHBaXO9ggiXjgM
q97rwhGntULVAcHBRM7rSt1urJd02a6LhyBJd8ixN6ob+zwJavHeh4DEJ78Z
cezB/zrZvTn7KYJ42qTZf/x3zNrdgTMiEWTren/NF73A5X6OLH40AnZtzwFf
zV7scqmubV0cgvPSLT7uqb1YJMnzK7+s+GvsUm0k6sPvOwQmNYoUrPStivIf
L/GjY32HLmUieNxR3FrAluHTF1yN9uYiwHmWda6nZPhOk+2d9mIE6hlGIrQg
w5godw1WIygZT3i9sHkA9/Mj827VIuiobeq8FTOAE2Je+wc/QOCnl5f4VesA
lja0zc9KEOzL4WXR4a+wh30ue0UHgqd9+qpmrYM4bOeOIOsJBDH8mqywh0OY
0/Oj155pBMNZfU/NrIdxT4TjAb4cwUfvuckKCoYxt9rdKomi4KnAp+Ndwgim
rcImZOoU9K+867dW8A+ubpmXvdWmIKxlw88PZP9gQeDF9pX6FIgN8/OO+PyL
H5el3t25jgKvIeW2Qt9RLFz/ffg1awpS48/x7304jkFie6LUhoKRiqiOk1fG
8eSxpsMNdhSo7LX43Oa3cXw4r3XHsAMFp/i7tIjvBDbUH5XDIQo867yfh6dP
4ltqFjHj5yiIFRwdCbSfxp4VVWdUIim4UXvKRDt9Gq/ab+dtGK3wXTJ0NH0z
jUOT9sKeSwr29Hh3rXIG2yr70/lpin+GjWZb7GbxSOHYZM0NCsKzbcPL82dx
lsP5gV+yKaip/PBOPUuOF2MTH74toiCt48mjkhdy3DxXlOhSQ0HBd8sFx7Lm
cUTGpvOCOgqif9QU6agtYDPb6pNRDRQUuk4cSLm0gJPDJXtKmym4ZqWT2R/2
DruOy5YvPaPA5WbgQGPAEn45aCysmKFAljIj5fxJkSNGOVaxcxRMRyi5N5rQ
5Fc3g99cFinY+LTN1fkETe5LdNQnlGnARd9s+2SKJqKC1de3atMwfVWT62Go
RJy96PTarTR4t/AMvPJUiCQtbsfVHTSsr3q++/GUCrGTLnZ7cGnYLuN58Pct
Ixu487rzDjR0xYZx9ReWEVpvKnOXKw2x7yW62QeqktrOwVxxCA2hIXr9ZUkr
iNUKP3I9jAY510aSPbWClPD6+3wjafhSzq+Y915Jrlf1mijH0eDx96Yv1bir
yJmU7ptOQhqKTL5pvEytJuudn5RIb9OQGrvN4MCYOsm66OSU871i/8KuoZ8+
0CAa95v/DqqhYYrUJ2ic0yBLG8Vmag002It7u9zmNMjzZfdvHZTS8FC1YqxM
U4ukSMorukZo0Poi84la2BryansXJ22UhpyC0pMsyRpi++1S7sFJGtzHOKGU
pg6RJbsKpXIaxMn+xegHHWJ9eDZYzGKgnsf3vcLSI51DvC0VHAbWP2q3i+k3
IGafBZUFmDNQ51O9f9LBkES3iNgbNzOQc8ZxJqPIkJhWDasXbWfgnMVfC9cC
jEhElHAy4yMGmgbkl6+w1hLdVX/cTTjOAC/fKHcQ2CQwTmkT7wQDXvXYKj2K
TZomLYvQaQbyYyJS0D02OdUdlxYVysBZW2aM/mAdqc/nhIfGMdA7sy4EWbxP
PLeetfHKZWDDhEq02NGU3CnOqtC/yUCA2E174itToqTbzOkpVvib2KfPPTMl
txd0dA7dZuBRQciLUn8OWWxueLvnAQO3i60iK29sIPlHVeu2PWegBRdKS0zN
Cf2x01FeLwPOKpavlC6aEwE34e3BfgYE8o2TaTJzYm5M2QSPMOBwN9XA46YF
qR6YrSqbYyCXFdDaZW1JrEpfDmotMPCG87mw/bAl+Q+7B7C/
      "]], LineBox[CompressedData["
1:eJwVi3081HccwNH39/vZzCsszy+ExczDLs/uWp+P87Qu6nC5i9vc6TjMqyKq
11CEEFkmD1FKy6lRr9qM5qm9zEONldJc9ZJdvRzSsrny0PSw9sf79f7n/baN
2xURr6OlpRX0jv99Y+dMi7UlwSp/Y9P9m1jgInEIdbUhWOYq1a88xIKycNlT
jj1BQWlrZlIXCwSeKqftzgRDqif1/d3Xw8RLpaKCQ3CEtzZsysEdNPmDZ3TF
BN94xxoteHmCYC+FphKClScn249mekK7PODPdTKCQ7PlOdq9npDFu2YVkELw
SXGQS364F9AG7bXZWQRbR5MMOZneYFmnOK45SXD3yNmQlhVfOFA66aHdQJBp
56Q68P1AlW03urqR4LdOtbzGRj9QSOoNXS8SPF+t3toVyQaWQ1WZvJsgbvju
xekuDgReKSgaf0hwMsbv+tivGyGF06FsfETQhOqLtrUHqOifc9ilJqgo+rBv
fx7A4/vCfu1nBM0nzUUt9gi5Op/oOL4iuPxIbbtmDqEn8mZmqgWFPFy0ZNdz
YeqhzhDbmsKzjXdUs2Nc0E/0sSB2FDoLE4/5GgSAOOvM1SonCr+OMu+4nB8A
K+fSFjp9KazO1nWHjEDwXTTZRQspLHl53MVnbzBIcjb33IqmkNlfdCjt52Ao
fD9H/8SXFB58K0+QvQ6GMesnzc4JFH6xpbwtrTAEMkI6Z/gZFAZd+z4y+dzn
8ENNbFxdBYW63rSZaNVmcOWc38YaodDMgN3JXc+HuMD5Id5dCrf4+PXRMj7U
hLG58fco/MZZUxRdzQciGXarVVH4uK9sou0tH8bz/2HIPIXx6tOlycpwKL3p
26E0pLGsfDKQPhcJvcpclsaYRmbulEm6KhKWVb8pPrCg0XV+SlpsJQDZc3GF
vx2NO29t/OXyCQFsMMtNaXancSCgdtimdhv8Jb1hfTCSxs8YpeB5lxDsvjKq
PCGkkc1Vr60nIhClx+i1xtC42TArTC9MBH2Hny3N7KCxN6ZmyUMlgpPNhrcj
0mn0D1Wfml8dDaEL2/McKmmc1rsU0Fslhuai2enfx979TFTDsKMUeoYnvP54
QKM4yKmuWySFOwajeeMTNNrszOQ5H5HCck2nzdMpGhsUHUa5c1IIvlAq1F2i
8cEqsx89u+Pg8Q23Qa4pgyNKVv9Pe2SwqG9vzLNkMGVTU+1iiwzeizDdEW7D
4Iom6+OBKRmwHrx9E+vIoN5QnbuJOB4OzI54Z/swyIq7P1YXlgAWensU7UIG
/ya9vRFhieC2Vf6iJ4ZBXr4s3ehYIvhXxHAHYhmM3fevKn00ERItAyfuyhms
/+iSp6M4CdqcjU00+xgsOXLVX56RDOGh7QUuNe/6QcPpwuspUHR0RdZwj8E0
yiij+fVukCRPxe0YZ5A/61FR4pgKfiG3JetUDJpF1LUMhKfCrFaT+MI0g5ri
i8n8plQITY8QXFlksCDnzb6+qDT4tEmlXvOKQSM5e8WqOg3+A+kRzbs=
      "]], LineBox[CompressedData["
1:eJwBsQNO/CFib1JlAgAAADoAAAACAAAAEFupQ8EUCEBF/q/rxMdzP+g3lEGD
GAhAsV5flaT3cz/BFH8/RRwIQAWTlQjqJ3Q/cs5UO8kjCEB3sgwfqYl0P9RB
ADPRMghA6OknCAxSdT+YKFci4VAIQM8gj7gH93Y/cAVCIKNUCEBlmtOumi13
P0niLB5lWAhA355+KJ9kdz/6mwIa6V8IQCxWaLX/03c/XA+uEfFuCEAjMGnW
NLh4PyD2BAEBjQhAQphsXh+Xej+pw7LfIMkIQP2klFuptH4/kB+yBDTNCEDc
fys77wB/P3Z7sSlH0QhAuLwlm9lNfz9EM7BzbdkIQJ9Dt2Gg6X8/4KKtB7rp
CEA1HbT9ipSAPxaCqC9TCglAtAw2s1LkgT/93adUZg4JQPrukN/eD4I/5Dmn
eXkSCUByo8SlxjuCP7LxpcOfGglAcYPnbauUgj9NYaNX7CoJQHTLdhbbSoM/
hECef4VLCUCSzhJNXsmEP2ucnaSYTwlAR6shaO76hD9S+JzJq1MJQD/sZiTk
LIU/ILCbE9JbCUBaGQ0aA5KFP7sfmacebAlAgNKjUSFhhj/y/pPPt4wJQFyg
5uFzE4g/X72JH+rNCUBvMde6O82LPwqyf/S30QlA/98RoJEIjD+2pnXJhdUJ
QKTT1UVTRIw/DpBhcyHdCUDvqyY0HL2MP75iOcdY7AlAzEi0XtWzjT8eCOlu
xwoKQOF7potsto8/3FJIvqRHCkCJADaoQQqSP4hHPpNySwpAwD/Fi0Avkj80
PDRoQE8KQB4mAER/VJI/jCUgEtxWCkAmI6N/vZ+SPzv492UTZgpApwgzS0Y5
kz+anacNgoQKQEil9BfTeJQ/WegGXV/BCkAk9h2xMiyXP+IXqAkaxQpANXRQ
w+pYlz9sR0m21MgKQNZo64bqhZc/fqaLD0rQCkAALS9ywuCXP6RkEMI03wpA
ZUapD92ZmD/w4BknCv0KQHwqXY4HGpo/htks8bQ4C0AHfIRiiVSdPxAJzp1v
PAtAzVc2wNyKnT+ZOG9KKkALQP9qvIqCwZ0/rJexo59HC0A3RKLExi+eP9FV
NlaKVgtAbK+5ZDsQnz8c0j+7X3QLQIHeIyyRcKA/sspShQqwC0DMYTADqWKi
P0p5CFkWtAtAGKJJkBeGoj/iJ74sIrgLQB0e/ye9qaI/EYUp1DnAC0BOOWVa
rvGiP3A/ACNp0AtAeaf6AC+Eoz8utK3Ax/ALQCghhvvas6Q/KtQwYRj8C0C5
kEijbCGlP02PjF8=
      "]], LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAqZ0I/IQxDEAtMIWSaT+nP0BMvs+Q
NQxAaClZJCdqpz/Y+nOjnDkMQEFgUM4ilac/CFjfSrRBDEBrXxJJ1eunP2YS
tpnjUQxAcixf6iycqD8kh2M3QnIMQO0otxbXCKo/oHC+cv+yDEAgDGx5kxOt
P/23avbFtgxAX2NwoBNDrT9a/xZ6jLoMQJcaoLXPcq0/E45vgRnCDEAqbOpS
/NKtP4arIJAz0QxABWHz7CuWrj9s5oKtZ+8MQPdnomYEFLA/OVxH6M8rDUA+
0JWBab2xP5aj82uWLw1A3O5w7g/ZsT/y6p/vXDMNQPIPZ9DW9LE/rHn49uk6
DUAkGbo9xiyyPyCXqQUESg1AMN4Uvy2esj8G0gsjOGgNQHu57g8vh7M/0kfQ
XaCkDUBGekfNcnK1Pz0OkQi4qA1Aqtrmt/eUtT+o1FGzz6wNQC54GkGlt7U/
fmHTCP+0DUAd8Lp6ev21Pyt71rNdxQ1ArCnMkA+Ltj+ErtwJG+YNQPvWfNXz
rbc/NhXptZUnDkDN0Xp2FhO6P5niAQ6Lqg5AN0NL8ZNdvz/i422Qj64OQCGo
w0ffib8/KuXZEpSyDkC+EECjVLa/P7znsRedug5AXpMbu94HwD/e7GEhr8oO
QAVOmetDYsA/IvfBNNPqDkAOQWp4ABvBP6wLglsbKw9AJ3r9SECcwj+/NAKp
q6sPQHEYHV5J3cU/zM5k22qvD0CRwH3ay/bFP9poxw0qsw9Anx3J7V8Qxj/2
nIxyqLoPQLhzRL28Q8Y/LAUXPKXJD0ClFTM1SKvGP5rVK8+e5w9Arb4wwZ99
xz8vp+DlFPwPQOHOiFirD8g/ouEgRQ==
      "]], 
     LineBox[{{4.017368237181296, 0.19674918183605333`}, {4.075912964784057, 
      0.22469089444975093`}, {4.2029087501286035`, 0.29111703576101833`}, {
      4.321443519423089, 0.35781387789606806`}, {4.4498846188566015`, 
      0.43069441748152326`}, {4.498086734693878, 0.45706404220528085`}}], 
     LineBox[CompressedData["
1:eJxt0nswlmkUAHA+5ZKyeZ/KMERbq29z2QrRUudsGdtKcg2FXDIWXRfZkFxy
p/VJcieRDJlQMlErWcqHQjer+L73IfctIUmx7/6/fzxz5jfnzJx5zjnrPE7Y
ePEkJCTsuPdfNLF1v/hkH4PHWjrz5J/1Q7S9/4nK/QyyXcWHRWw/dDhE771o
zeAm533OZZP94OZcKuVgz+D2s+FvBDIiOO816d/nzGD+Pd+P7RtE0BYUYTfh
x+DhQYsMC1cRHMq5slo+gcHnxrPlGu0iKMqrnhxPZLB9s9Km190iGC/4q70j
mUHrxgtpgr9FEFY8Ep0qYHDnp3vLR4dEUFix5aNyJoOmJXPxVjwxjDY8eMG/
zuDrg2rCMQMxBA+KL5s1M1h2JttNLUMM5hvDZKwfMahlJ6NzPk8MKj4qQYda
GVzivyWBLRLD3XGbAyc7GHwQcqwtulIM81MPV2W9YNBJpd3cq1UMobxrgom3
DN68Leaf+ywGC9Ndkp+GGbz3j+6GgxIsqMb0neSNMVgj7bNcW5qFejklK6V3
DDao+oXeUmTh68o4hZ9mGVxZLis8wGchTN03MU2GoJ1qe9crWxYs3aXn8+QI
anomaKx1YmHt1ULfUnmCt1tSm5xcWbiv2fvL/W8ISqd3jVX/ysKijoXssBLB
DWZBDR9CWQg30Y025hOMbBteTL3KQqTThzB2D8Fxe6H0dyMs3BqKN2s1Jygw
tfYQj7MwFLhOocqCYJK2qX/aexYsUq1yI6wI+kctye+bZUFJWFGn4Uhw2fqJ
KJ40hXITv0+u3gR1Yn4QRWlQ6G/lNZj5EByJW6FQup4C45QVq+tHcGLvm9wm
TQpBgY/XLBwnGJDo/LRPm8Kuio0GuacJGh0zXcwzovBSfeBUbzTBQl5Qibkl
hWUVIdsfxhKM64/s6baiYGJCJMviCSr5bufb2lIodNyVEpxM0PFHh+X6jhSO
CgoqlC8RvNtzMjbMnUK+utFpycsE9+pFb6v1pNB148mOkQyC9n1ag0NeFAxb
F9pqcwjibKPe974UeFIuYw5FBOv/OGWs9xsFfcF0FVwjaNAkk6QaQMFbPSl4
43WCLdto43wghTbjOrnZMoL8bUMvs89QuBygzE+vJpjjOW3tEU6hlVf57uxt
gjYhyrGfIyh8Sdlzx+sOwTdzislxURQ8bgSZGdQRvOo2LhkTQ0H77fMjzxoJ
Fj/4c790EoUOxd0ZVU0Ena5EhJglUzix46YwpZlg7kxpW+gFClVpCVv3tXL9
XKReCVMo2DbMemm1EVSpeXhhQEBheuxIplwHwVWr5Y5MpXL/3Q0SzZ1c/i7r
OZVG4dXxcr2iboKPi0MSBy5RCM5S9o58zt3LaKFQmE6hfnKqfWcPV1/7c0po
BgVXNXdJtV7u/uqAMcuksLinQ3/+NcFpUleyNIvbZ8H17DsigtWbu2W9sykM
CFc/ucQSdChx65LNoRA9G8kLGCA41GtTVsBZc/17A5u3BIN1WlJ1cyk8snTx
2TxM0K1jJLaKs29wa47CKEGt5pl47TwK8tcMn46PEUyc0s/I4VzeWSQlnCC4
QkGiipdPwfKromHpO4I1JfdfuHJ+zz/nGztJ8Lju0NJKzgK78VyvKW6eEws7
5zhvDXfq3D1DcGFFVoRhAYVnZc1Lvp0laJF5qN2Pc+BLPSOJOYIRv8+sS+e8
RuqKX99ngoOB/HM1nGt1FfLrvxA8uqNpoI2z08GQrqwFgmouJTY9/+N/Aa7n
gWA=
      "]], LineBox[CompressedData["
1:eJwV0ns01ncYAPB3cnfehOfXDENn6rWD1cKqFz2PrEnDSt5sI+GUcsvrXpTR
rJn3VUNzWW7L7ZSmkyxqQmpWjNohzGW8v+9CZakmq1zOfvvjOc/5nPP88dxW
hUT77FcTiURuQvyfiy/JNvmpAR3z0HbvK2foMtoe6agONFua3d0u+E/tdeVG
mkAmgWEBNYLTHEp6n2kBxaff+idd8KogXa17OkBRD/rzfAS3K5KkdXpA99wn
nd8SvK/xryilGAjcP565X8ZQk+38IVwfKDf4QG2m4JrlrX3bDICyZuti3he8
TWqrLTECEjtVbrlXyvDR/iInDQ7opueg+X7ByhzNaLYSKMXssebTEoZ21+PO
3jAGupaomJcLloO3TqoZ0Iv1yWJZMUND+tk5wBwoP1Bu23SG4eUIa7nUEuhl
hZu/geC5drWBuXeAKsXx01VFDAueROveXw20Jnlmh6qQ4UaTUZfLEqBaRcYd
Q8EpMY2V0TZAYy1D8375DM1KrAa97ICafdc1RXzHsOV2jp7tWqCqmNvZCacZ
iiwjY6fWA31ir8iKyGV4oseSgqVA7+01nxvPZli3yVjroDPQsoT62Cwlw4FK
/Z5Dm4F6Rhv8rBUMrVOW/I9uAfq1oWufaybDTslIUsF2oD2PTPum0hk+z+3d
XOoJZOQRPeKYxtB0qVOjyhvodVhnSFIqw8i+q3n1PkAaX6teDCQz1E8vuNj9
OdBuvWen9OOE+aZPJvYFCPd39uVFMQyD/E64DAcCGfbv7p44xLDeLqFrKgTI
qmAx5dtwhr5DPpPLIoB09GJr/IMZFtovt5CmCP1G9Pb2eTJsK9WYoGNA9rNh
eQbbGT7UWbzg/gVQ/4HktW7uDKXjj6WyL4X/KChd8ZUrwxHlnd1yBZB6grV6
hqPwTxMZJ6vPAPnWaPvFmTLcvvOo7McSoKDfonaIjBnGNseZNZQBPb2jf+w4
MLyVG3L+RgWQ7LA0M1TMMBSpY6QWSOkVYlS3xOP5wvlFw2agjZL0chrj0XHH
E7N/rwv7/yNeHj7MY5uWymm4FSh09oi9YoDH/sSOIxU3gSKvjJ+7dJfHZbKc
F/ZdQIlXlhZyW3kMMJD87TsE5HTWV3mhhEdxls9I/kugDpNdHgd38VjounU+
+TXQ9YZfvj/qzaPVqw0mexeAhqvLLmZ68Cg9+PanEhFHKps8ykQeQz+a6m3U
4mgmckX3ahseW9RSuwZXcpQw72+hEvEoTzl3zcSRo5yFYrtT1So8HrsmSrKB
o6VxnXmbchWeDquwcNjEkYuq3q2tSIVX/UoyvFw4Mv6wN+auUoVqDjneaVs5
etWcEfNNrFA/fZh/IOPIuf+nygRnFTbt2aZ7KZEj8UbPd1M7x/ENmvzMvYmj
5w8/cO2pGMPf50YD31ziqLjc+nVz8Cj+B8Fu6dI=
      "]], 
     LineBox[{{5.555721022909041, 0.4275750208944632}, {5.673021346598293, 
      0.3609779413255261}, {5.800228000426571, 0.28939822764560863`}, {
      5.918973638204789, 0.22722044144807302`}, {5.920792498680692, 
      0.2263190993270876}, {5.922611359156596, 0.22541948854562793`}, {
      5.926249080108404, 0.2236254903774323}, {5.93352452201202, 
      0.2200585894687619}, {5.948075405819251, 0.21301072747753255`}, {
      5.977177173433715, 0.19927032469152314`}, {5.998086734693878, 
      0.18970119261115465`}}], LineBox[CompressedData["
1:eJwB0QIu/SFib1JlAgAAACwAAAACAAAAHnYq1zokGED5YgHKVS7GP+G/XThA
JhhAjX9wf6gSxj+kCZGZRSgYQDNbZKQP98U/Kp33W1AsGEAnzIFfG8DFPzfE
xOBlNBhA6XDxgilTxT9QEl/qkEQYQLu0ziknfcQ/gq6T/eZkGEC7RGUD1ODC
P+fm/COTpRhAjzkdqIvPvz8MfSvddacYQMEjYp+4pb8/MhNallipGED++dae
Cny/P34/twgerRhATHfaqh0pvz8UmHHtqLQYQEsWNJv/hL4/Qknmtr7DGECs
8bVNr0O9P5yrz0nq4RhAC+GC7pbcuj/CQf4CzeMYQKtkxYFbt7o/6NcsvK/l
GECGzEFfRJK6PzMEii516RhAC5l81IJIuj/KXEQTAPEYQJhnOp+xtrk/9w25
3BUAGUCZWPDfzZm4P1Jwom9BHhlAF3jFwrF6tj//RVu8TCAZQLw67BMrV7Y/
rBsUCVgiGUBbIMBUzTO2PwbHhaJuJhlA/E44XYzttT+5HWnVmy4ZQAaYUIXy
YrU/IMsvO/Y+GUD6FSF3TlW0P+0lvQarXxlABpwu+LVXsj+a+3VTtmEZQBJI
9ecmObI/RtEuoMFjGUDU0zExvhqyP6B8oDnYZxlAXqjpcl/esT9U04NsBXAZ
QGM04h9qZ7E/uoBK0l+AGUCHPogYi4CwP4jb150UoRlAMpx6KpqcrT+Y/YtC
/aIZQHV7s0YhbK0/px9A5+WkGUBmFRDO5TutP8ZjqDC3qBlAto3FbybcrD8D
7HjDWbAZQNCOFDOBH6w/fvwZ6Z6/GUBhrmb1dbGqP3QdXDQp3hlAea1lwyAB
qD+EPxDZEeAZQP4ltar+16c/k2HEffrhGUAqWgRWFK+nP7KlLMfL5RlAyVoe
PuZdpz/vLf1Zbu0ZQPHyTjcfvqY/aj6ef7P8GUBGZfi4vIilPxkTHUsP/hlA
fj1u3NttpT9aikKw
      "]], LineBox[CompressedData["
1:eJwBoQNe/CFib1JlAgAAADkAAAACAAAAYF/gyj0bGkC/osMbW0WjP94eatsc
HRpAgAFZA4Mjoz9c3vPr+x4aQM99UNfaAaM/WF0HDboiGkB/DKmQGb+iP1Fb
Lk82KhpAixGoXs47oj9CV3zTLjkaQOlrMRbuPaE/JE8Y3B9XGkCKBOLVl8ee
P6IOouz+WBpAEqIM1jSPnj8gziv93VoaQJ7xXXwmV54/HE0/HpxeGkDJ60ZY
BuidPxVLZmAYZhpAFKVEm64NnT8GR7TkEHUaQPuXfQVUaJs/5z5Q7QGTGkAR
RMxNjViYP+w9ZJEJlRpAKXIQhygmmD/yPHg1EZcaQGXzBXka9Jc//DqgfSCb
GkAkVJzTAJGXPxI38A0/oxpAZMiuhsvOlj88L5AufLMaQE/jR6v6WZU/kB/Q
b/bTGkCuyZPA2auSP5Ue5BP+1RpAMv/nMn2Dkj+aHfi3BdgaQLYhCi5qW5I/
pRsgABXcGkABURApHwySP7oXcJAz5BpAR0KNKepwkT/kDxCxcPQaQMYqIvWs
R5A/OQBQ8uoUG0Db8hYyc06MP6BLX+7PFhtAmycm2NsSjD8Il27qtBgbQCpI
ZH6v14s/2C2N4n4cG0CdqfdzlWKLP3hbytISJBtAZke0uUt9ij+2tkSzOjMb
QNnqfvHgxYg/HgJUrx81G0BG3qNWtJCIP4ZNY6sENxtAXCB5lelbiD9V5IGj
zjobQNUGgWd384c/9BG/k2JCG0Bz6ZjrECeHPzNtOXSKURtAqCUTh8GfhT+a
uEhwb1MbQBZ0aOdwcIU/AgRYbFRVG0AW5+x3eUGFP9KadmQeWRtAGSiREJTk
hD9yyLNUsmAbQPEXyo3gLoQ/sCMuNdpvG0B7w03LY9OCPy3aIvYpjhtA0Tnn
fJZYgD8cZbyFN5AbQF8sahZZMIA/CvBVFUWSG0AJvBXOcQiAP+gFiTRglhtA
oarvfkZzfz+kMe9ylp4bQKj+Es3rP34/HIm77wKvG0AgsNDitPd7PwsUVX8Q
sRtAgltBBXSxez/6nu4OHrMbQLVgcELNa3s/2LQhLjm3G0Dkzk21SeJ6P5Tg
h2xvvxtAuVJDZEzWeT8MOFTp288bQPRlJ6WM2Xc/+8LteOnRG0DTc5oFbpx3
P+pNhwj30xtAx4Ffwdhfdz/IY7onEtgbQD59y0pG6HY/hI8gZkjgG0AbIEHw
Zf91P/zm7OK08BtAVoFiRt5FdD+XU/ByCv4bQPFryB0V9nI/quKKGQ==
      "]], LineBox[CompressedData["
1:eJwVjX08FHYcx2VTGEll8/D7WWd0qTwk4rh8v3cXp2KI5OHOUynVdciZxHUk
WxPVnaey0U6tB9J68IoaU21Jt4tU1N0ypTZNNg9rclaa/fF5vf94v17vDyMx
ZV2Svp6e3urp/c+XZQWPi80JshsNVc5OaRDww6uH8nkEm/UvbGfppcHJ3zfe
L7MgeKmv3PTs/VRI9OSqqqwIDgcVM9uyU+HRo6nGegbBXql3RYoyBdpsdpXc
WUZw9Wlmo8pqB9ivGjjYtZzguGB390K1CPaKIgq7PQi+J6mr85aJYGWLe14v
i2CN7+yW/IHt0BA7Kv6TQ3BBrE91+rVtUKPctsZ0HcErbTigUCSDnkrjZx5O
cE9mJv9GcDLEjgVwLCIIuiaZhJeYJoMVj+lFowmqbXXeFge2wOHnzxycEgkq
0sVukuLNsIcpnBG0k+CMmjeuBec2QVR9cFORgqCpVpMmj0oAa7urH4hLCTLy
ihseL0kAbbl9XHA5wQtRWW0lU/EQnaszmFtJcL+9+SDn23iICTseVqEkSJq7
J02G40CoG/9LeZ6g7PXWw8NCIdiKE7j5Fwlu8SjReZoJ4df+n8s2NRBcx595
b+V1AcSqv2Ezmwhy4jcfz2YKIO7YmsKzrQSXJjwnZW+iIcGv2qGxg+AvPOH+
sVuRYHfVMOvIXYKiY8kjwn2R0O+crs66R3DA9TA7hRMJiZYB6ewegrurfMel
LRtg48vRa9d7CU4xJbUOLRGQJPcTqIcIumg7VOmacNjaO6R4akwxOjosyU0a
CuflT7NemlB0aHW2a+CHwoRfT/w/symKZrztuz03FD4/1+psNI9inra9ta42
BE7IFCpXG4q1iokLq24EwxOGl37uEoqM2ePtgs5AWNSz9I8vnSgWfbSvqzIj
EFIKGXdLXCh6vbgs6iGBMDVmXH1qOcWq+Klstngt2PzUy+r0obi+LHRmLlkD
EZvz02wDp3vPrtR3n+BDtfWuyEWfUjywoCqgM4oPv3WIwC2EoiTyNE9pxgeJ
Z4SpfzjFm0Pbmm5K/UFu6Hhmh4Di+Qcyj+6NfqCu7XjSLJr2FX2ruOt5MD/u
x1ttYoqOR2pS2j/kQcy8pnN3UynKT+bmz9RwYTBbmfNcQvGtRXF/TRwXDIMk
liZSirrcM+pFGRzgDVuFxBRTZDYUZV6UAQwNGx3iHqJYMqbN7bcFKB/R3XGU
UyxdUWtv1+oLg6OatROlFC3nyKpv6vuC4tVRftnXFLfKZgWFl7OhX2cFnXUU
Jx7E7IweYkHRpNGey/UULQ4Zh4R+xYIV/+qaq76jmF/g/9BlLQsK32i8RZco
3hYrlJX1XuD27ugKo+8pBuwtlQ7keMLe962deSqKGTlOGWk8D1hqYLxjsZri
F58ZND585w49BpN15h0Uc7h1ffot7rB4ltbxSRfFCo7j42Msd7hnVOkg1VBs
+DsZW3yWA8PMmja+oGh3ELjahGWgMjMWVA9S9LXa/fEpx2UgmTNZWTBEsSt+
wzXrMVdoN9daho9Q7Ldxihre5wqp8yvnj76mGFO+0Je9yQWOhI3sNJ6a/jf/
ZHHmAmf4Dxru9eQ=
      "]], LineBox[CompressedData["
1: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
oqw=
      "]]}, {}}, {{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      RowBox[{"pdf", "(", "t", ")"}], HoldForm], TraditionalForm]},
  AxesOrigin->{2., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{2, 8}, {0., 0.6180382567180598}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6265650720515537`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ". Mathematical Task"
}], "Section"],

Cell["\<\
Required for grade E (approved). Keep in mind that it is the mathematical \
method on the task that is interesting to consider, not the answer. \
Furthermore, solve the given task, not a variant or extension. A very good \
report and presentation is graded D.\
\>", "Text"],

Cell[CellGroupData[{

Cell["The Relative Error of Normal Approximation", "Subsection",
 ShowGroupOpener->False],

Cell["\<\
If you consider the average of 20 iid rvs, normal distribution is often \
considered as a good approximation. However in this task you will go beyond \
this recommendation and study under what circumstances it is valid. The \
exponential distribution is very skew compared to the uniform distribution. \
How is this effecting the approximation with normal distribution?\
\>", "Text"],

Cell[TextData[{
 "In a certain cellular phone system new calls arrives with exponential \
distributed interarrivaltimes with expectation value ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Mu]", "=", 
    RowBox[{
     SuperscriptBox["\[Lambda]", 
      RowBox[{"-", "1"}]], "=", "3"}]}], TraditionalForm]]],
 " minutes. The interarrivaltime is the time between two incoming calls."
}], "Text"],

Cell[BoxData[
 GraphicsBox[{{InsetBox[
     StyleBox["\[Tau]",
      FontFamily->"Mathematica1",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Plain"], {92.59070094167677, 94.98272326852974}], InsetBox[
     StyleBox["k",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Italic"], {95.8125, 90.4375}], InsetBox[
     StyleBox["-",
      FontFamily->"Mathematica1",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Plain"], {100.125, 90.4375}], InsetBox[
     StyleBox["1",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Roman",
      FontSlant->"Plain"], {105.625, 90.4375}], InsetBox[
     StyleBox["\[Tau]",
      FontFamily->"Mathematica1",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Plain"], {152.29013396111773`, 94.44867861482369}], InsetBox[
     StyleBox["k",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Italic"], {156.313, 90.4375}], InsetBox[
     StyleBox["\[Tau]",
      FontFamily->"Mathematica1",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Plain"], {231.1191562879708, 94.18165628797081}], InsetBox[
     StyleBox["k",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Italic"], {234.875, 90.4375}], InsetBox[
     StyleBox["+",
      FontFamily->"Mathematica1",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Plain"], {239.188, 90.4375}], InsetBox[
     StyleBox["1",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Roman",
      FontSlant->"Plain"], {244.688, 90.4375}], InsetBox[
     StyleBox["\[Tau]",
      FontFamily->"Mathematica1",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Plain"], {398.26117861482373`, 93.64761163426485}], InsetBox[
     StyleBox["k",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Italic"], {401.75, 90.4375}], InsetBox[
     StyleBox["+",
      FontFamily->"Mathematica1",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Plain"], {406.063, 90.4375}], InsetBox[
     StyleBox["2",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Roman",
      FontSlant->"Plain"], {411.563, 90.4375}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{72.5, 85.1875}, {489.6875, 85.1875}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{484.25, 87.875}, {489.6875, 85.1875}, {484.25, 82.5}}}]}, 
   InsetBox[
    StyleBox["time",
     FontFamily->"Times",
     FontSize->10,
     FontWeight->"Plain",
     FontSlant->"Italic"], {499.302701584478, 85.18063438965203}], 
   {AbsoluteThickness[0.5], 
    LineBox[{{{100.3125, 29.5625}, {100.3125, 85.1875}}}]}, 
   PolygonBox[{{96.25, 77.0625}, {100.313, 85.1875}, {104.375, 77.0625}, {
    96.25, 77.0625}}], 
   {AbsoluteThickness[0.0625], 
    LineBox[{{{96.25, 77.0625}, {100.3125, 85.1875}, {104.375, 77.0625}, {
     96.25, 77.0625}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{155.9375, 29.5625}, {155.9375, 85.1875}}}]}, 
   PolygonBox[{{151.875, 77.0625}, {155.938, 85.1875}, {160, 77.0625}, {
     151.875, 77.0625}}], 
   {AbsoluteThickness[0.0625], 
    LineBox[{{{151.875, 77.0625}, {155.9375, 85.1875}, {160., 77.0625}, {
     151.875, 77.0625}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{239.375, 29.5625}, {239.375, 85.1875}}}]}, 
   PolygonBox[{{235.313, 77.0625}, {239.375, 85.1875}, {243.438, 77.0625}, {
    235.313, 77.0625}}], 
   {AbsoluteThickness[0.0625], 
    LineBox[{{{235.3125, 77.0625}, {239.375, 85.1875}, {243.4375, 77.0625}, {
     235.3125, 77.0625}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{406.25, 29.5625}, {406.25, 85.1875}}}]}, 
   PolygonBox[{{402.188, 77.0625}, {406.25, 85.1875}, {410.313, 77.0625}, {
    402.188, 77.0625}}], 
   {AbsoluteThickness[0.0625], 
    LineBox[{{{402.1875, 77.0625}, {406.25, 85.1875}, {410.3125, 77.0625}, {
     402.1875, 77.0625}}}]}, {InsetBox[
     StyleBox["t",
      FontFamily->"Times",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Italic"], {124.063, 52.76117861482379}], InsetBox[
     StyleBox["k",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Italic"], {127.375, 48.75}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{100.3125, 43.4375}, {155.9375, 43.4375}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{150.5, 46.125}, {155.9375, 43.4375}, {150.5, 40.75}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{155.9375, 43.4375}, {100.3125, 43.4375}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{105.75, 40.75}, {100.3125, 43.4375}, {105.75, 46.125}}}]}, {
    InsetBox[
     StyleBox["t",
      FontFamily->"Times",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Italic"], {188.95502232685297`, 52.22713396111786}], 
    InsetBox[
     StyleBox["k",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Italic"], {192, 48.75}], InsetBox[
     StyleBox["+",
      FontFamily->"Mathematica1",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Plain"], {196.313, 48.75}], InsetBox[
     StyleBox["1",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Roman",
      FontSlant->"Plain"], {201.813, 48.75}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{155.9375, 43.4375}, {239.375, 43.4375}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{233.9375, 46.125}, {239.375, 43.4375}, {233.9375, 40.75}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{239.375, 43.4375}, {155.9375, 43.4375}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{161.375, 40.75}, {155.9375, 43.4375}, {161.375, 46.125}}}]}, {
    InsetBox[
     StyleBox["t",
      FontFamily->"Times",
      FontSize->12,
      FontWeight->"Plain",
      FontSlant->"Italic"], {313.813, 52.49415628797084}], InsetBox[
     StyleBox["k",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Italic"], {317.125, 48.75}], InsetBox[
     StyleBox["+",
      FontFamily->"Mathematica1",
      FontSize->8.5,
      FontWeight->"Plain",
      FontSlant->"Plain"], {321.438, 48.75}], InsetBox[
     StyleBox["2",
      FontFamily->"Times",
      FontSize->8.5,
      FontWeight->"Roman",
      FontSlant->"Plain"], {326.938, 48.75}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{239.375, 43.4375}, {406.25, 43.4375}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{400.8125, 46.125}, {406.25, 43.4375}, {400.8125, 40.75}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{406.25, 43.4375}, {239.375, 43.4375}}}]}, 
   {AbsoluteThickness[0.5], 
    LineBox[{{{244.8125, 40.75}, {239.375, 43.4375}, {244.8125, 46.125}}}]}},
  ImageSize->{549, 113}]], "Text"],

Cell[CellGroupData[{

Cell["Task", "Subsubsection",
 ShowGroupOpener->False],

Cell[CellGroupData[{

Cell[TextData[{
 "Study the average ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["t", "_"], "=", 
    RowBox[{
     FractionBox["1", "n"], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "n"], 
      SubscriptBox["t", "k"]}]}]}], TraditionalForm]]],
 " of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "20"}], TraditionalForm]]],
 " interarrival times. Plot the absolute error of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["pdf", 
     OverscriptBox["t", "_"]], "(", "t", ")"}], TraditionalForm]]],
 " and the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["cdf", 
     OverscriptBox["t", "_"]], "(", "t", ")"}], TraditionalForm]]],
 " using the normal approximation. Make also a plot of the relative error of"
}], "Item",
 CellChangeTimes->{3.626622050654497*^9, 3.6266232779763947`*^9}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"P", "(", 
    RowBox[{
     OverscriptBox["t", "_"], ">", "x"}], ")"}], ",", " ", 
   RowBox[{
    RowBox[{"\[Mu]", "-", 
     RowBox[{"2", 
      RowBox[{"\[Sigma]", "/", 
       SqrtBox["n"]}]}]}], "<", "x", "<", 
    RowBox[{"\[Mu]", "+", 
     RowBox[{"2", 
      RowBox[{"\[Sigma]", "/", 
       SqrtBox["n"]}]}]}]}]}], TraditionalForm]]]], "ItemParagraph"],

Cell["Conclusion? Is the approximation always useful?", "ItemParagraph"],

Cell[TextData[{
 StyleBox["Hint:",
  FontSlant->"Italic"],
 " The sum of iid exponential rvs has a well-known distribution, which is \
built-in in Mathematica, ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["ErlangDistribution",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/ErlangDistribution"], "[", 
   RowBox[{
    StyleBox["n", "TI"], ",", 
    StyleBox["\[Lambda]", "TR"]}], "]"}]]],
 " or ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["GammaDistribution",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/GammaDistribution"], "[", 
   RowBox[{
    StyleBox["n", "TI"], ",", 
    StyleBox[
     RowBox[{"1", "/", "\[Lambda]"}], "TR"]}], "]"}]]],
 "."
}], "Subitem"],

Cell["\<\
Study the number of incoming calls during one hour. Plot the absolute and \
relative error of the probability function using normal approximation. \
Conclusion?\
\>", "Item"],

Cell[TextData[{
 StyleBox["Hint:",
  FontSlant->"Italic"],
 " What is the distribution of the number of events in a certain time \
interval, e.g ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", 
    StyleBox["h",
     FontSlant->"Plain"]}], TraditionalForm]]],
 ", if the time between the events is exponential?"
}], "Subitem"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Optional Task", "Subsubsection",
 ShowGroupOpener->False],

Cell[CellGroupData[{

Cell[TextData[{
 "Repeat the first part above for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "100"}], TraditionalForm]]],
 " interarrival times. Conclusion?"
}], "Item"],

Cell["Repeat the second part above for 5 hours. Conclusion?", "Item"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.626568177617423*^9, 3.6265681786366277`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sigma", " ", "=", " ", "3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lambda1", " ", "=", " ", 
    RowBox[{"n", "/", "sigma"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"testar", " ", "detta", " ", "nu"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lambda2", " ", "=", " ", 
   RowBox[{"1", "/", "sigma"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D1", " ", "=", " ", 
   RowBox[{"ErlangDistribution", "[", 
    RowBox[{"20", ",", "lambda1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"my", " ", "=", " ", 
    RowBox[{"StandardDeviation", "[", 
     RowBox[{"ErlangDistribution", "[", 
      RowBox[{"1", ",", "lambda2"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Task", " ", "1"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "exakt", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"p1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{"D1", ",", "t"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "5"}], ",", "8"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HoldForm", "[", "t", "]"}], ",", 
       RowBox[{"HoldForm", "[", 
        RowBox[{
         SubscriptBox["pdf", "1"], "[", "t", "]"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Darker", "[", "Red", "]"}], ",", "Thick"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.70"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"CDF", "[", 
      RowBox[{"D1", ",", "t"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "5"}], ",", "8"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"HoldForm", "[", "t", "]"}], ",", 
        RowBox[{"HoldForm", "[", 
         RowBox[{
          SubscriptBox["cdf", "1"], "[", "t", "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Darker", "[", "Red", "]"}], ",", "Thick"}], "]"}]}], ",", 
     " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"approx", " ", "med", " ", "exakt"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ne", " ", "=", " ", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"my", ",", " ", 
     RowBox[{"sigma", "/", 
      RowBox[{"Sqrt", "[", "n", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{"D1", ",", "t"}], "]"}], ",", 
     RowBox[{"PDF", "[", 
      RowBox[{"Ne", ",", "t"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "5"}], ",", "8"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "t", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"pdf", "[", "t", "]"}], "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.8"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"CDF", "[", 
       RowBox[{"D1", ",", "t"}], "]"}], ",", 
      RowBox[{"CDF", "[", 
       RowBox[{"Ne", ",", "t"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "5"}], ",", "8"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HoldForm", "[", "t", "]"}], ",", 
       RowBox[{"HoldForm", "[", 
        RowBox[{"pdf", "[", "t", "]"}], "]"}]}], "}"}]}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"absoluta", " ", "felet", " ", "hela", " ", "intervall"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{"D1", ",", "t"}], "]"}], "-", 
      RowBox[{"PDF", "[", 
       RowBox[{"Ne", ",", "t"}], "]"}]}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "8"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "t", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"pdf", "[", "t", "]"}], "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.08"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"CDF", "[", 
        RowBox[{"D1", ",", "t"}], "]"}], "-", 
       RowBox[{"CDF", "[", 
        RowBox[{"Ne", ",", "t"}], "]"}]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "8"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HoldForm", "[", "t", "]"}], ",", 
       RowBox[{"HoldForm", "[", 
        RowBox[{"pdf", "[", "t", "]"}], "]"}]}], "}"}]}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.04"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"relativa", " ", "felet"}], ",", " ", 
    RowBox[{"svn\[ADoubleDot]rt", " ", "intervall"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"PDF", "[", 
         RowBox[{"D1", ",", "t"}], "]"}], "-", 
        RowBox[{"PDF", "[", 
         RowBox[{"Ne", ",", "t"}], "]"}]}], "]"}], ")"}], "/", 
     RowBox[{"PDF", "[", 
      RowBox[{"D1", ",", "t"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"my", " ", "-", " ", 
      RowBox[{"sigma", "/", 
       RowBox[{"Sqrt", "[", "20", "]"}]}]}], ",", 
     RowBox[{"my", " ", "+", " ", 
      RowBox[{"sigma", "/", 
       RowBox[{"Sqrt", "[", "20", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "t", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"pdf", "[", "t", "]"}], "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.20"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"CDF", "[", 
          RowBox[{"D1", ",", "t"}], "]"}], "-", 
         RowBox[{"CDF", "[", 
          RowBox[{"Ne", ",", "t"}], "]"}]}], "]"}], ")"}], "/", 
      RowBox[{"CDF", "[", 
       RowBox[{"D1", ",", "t"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"my", " ", "-", " ", 
       RowBox[{"sigma", "/", 
        RowBox[{"Sqrt", "[", "20", "]"}]}]}], ",", 
      RowBox[{"my", " ", "+", " ", 
       RowBox[{"sigma", "/", 
        RowBox[{"Sqrt", "[", "20", "]"}]}]}]}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HoldForm", "[", "t", "]"}], ",", 
       RowBox[{"HoldForm", "[", 
        RowBox[{"pdf", "[", "t", "]"}], "]"}]}], "}"}]}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.10"}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6265681866352315`*^9, 3.6265682539807405`*^9}, {
   3.6265692111127043`*^9, 3.626569218290147*^9}, {3.6265692745114202`*^9, 
   3.626569274989518*^9}, {3.626569332698089*^9, 3.626569377169012*^9}, {
   3.6265694432452617`*^9, 3.6265694475121193`*^9}, {3.6265694796855702`*^9, 
   3.626569500516748*^9}, {3.6265698194427166`*^9, 3.6265699981445556`*^9}, {
   3.626570312989702*^9, 3.6265703362763715`*^9}, {3.6265705936429925`*^9, 
   3.626570593979061*^9}, {3.6265713951027355`*^9, 3.6265714263109975`*^9}, {
   3.626571470751909*^9, 3.6265714726732926`*^9}, {3.626571564069626*^9, 
   3.6265716991597185`*^9}, 3.6265718190617676`*^9, {3.6265720865684175`*^9, 
   3.62657210398291*^9}, {3.626573356908331*^9, 3.626573454147835*^9}, {
   3.6265734847879825`*^9, 3.6265735076425657`*^9}, {3.6265735455551696`*^9, 
   3.6265735466983976`*^9}, {3.6265736150421066`*^9, 
   3.6265736151621304`*^9}, {3.626573809411088*^9, 3.6265738779188285`*^9}, {
   3.6265739759734926`*^9, 3.626574001368588*^9}, {3.626574154964394*^9, 
   3.6265741968758*^9}, {3.6265742419778433`*^9, 3.626574259490364*^9}, {
   3.6265742996354103`*^9, 3.6265743540993333`*^9}, {3.626574397824101*^9, 
   3.6265744419679565`*^9}, {3.6265756390390463`*^9, 
   3.6265756845731783`*^9}, {3.6265757169736767`*^9, 
   3.6265758666987057`*^9}, {3.626575907416874*^9, 3.626575918536104*^9}, {
   3.6265759819228163`*^9, 3.6265760270008574`*^9}, {3.6266201791670146`*^9, 
   3.6266201828657603`*^9}, {3.6266242445028257`*^9, 3.62662424491391*^9}, {
   3.62662428702538*^9, 3.626624384471985*^9}, {3.6266244631198063`*^9, 
   3.6266245772047553`*^9}, {3.6266246622978725`*^9, 
   3.6266249496546793`*^9}, {3.626625050205907*^9, 3.626625085544017*^9}, {
   3.626625173021615*^9, 3.6266253064064474`*^9}, {3.627034140504306*^9, 
   3.6270341489883432`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQHSps9O7/f+EDDFCQwrZg36vfCH7JT97+q98R/En3
X+qvfo/gn1u9sDDsPoLv5iL4dc0+BN+s9MPvyFoEX/z6Os4tv4Tg/O9t8/pz
7wvC+WevHTn05poAnL84SyzfYjk/nP/qf4fuohJeOF/2aobb9HRuOL+3Sc9k
uh4nnB/la7L0+382OF84YnnB428scD6nNYPgrYNMcP7r2GPcMZsY4Pxgm5nC
tVF/98P43rmFO8N//IDzZeRURDwffoHzM+oXSQQUfYDzb5o5uRsYvIDzJ+V9
OfZW8AGczyr7IyOK/yycb29yrf3YrwI4HwCWrG3l
      "]], LineBox[CompressedData["
1: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
f/8EkMHRxLYwz3jsf6wJwpk=
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      RowBox[{
        SubscriptBox["pdf", "1"], "(", "t", ")"}], HoldForm], 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-4.999999734693877, 7.999999734693877}, {0, 0.7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6265692056276984`*^9, 3.6265692315528026`*^9}, 
   3.6265692759487076`*^9, {3.6265693379401426`*^9, 3.626569379799537*^9}, {
   3.6265698250958467`*^9, 3.626569998394605*^9}, 3.626570306990497*^9, 
   3.62657033737059*^9, 3.6265705974207473`*^9, {3.626571426934119*^9, 
   3.626571473130391*^9}, 3.626571573081431*^9, {3.626571617471337*^9, 
   3.6265717005119886`*^9}, 3.626571819424838*^9, {3.6265720905952253`*^9, 
   3.626572104731062*^9}, 3.626573385038973*^9, {3.626573455169038*^9, 
   3.62657350828169*^9}, 3.626573547071473*^9, {3.626573603525793*^9, 
   3.6265736156702356`*^9}, 3.6265738341460505`*^9, {3.6265738642370834`*^9, 
   3.626573878555955*^9}, {3.6265739768946776`*^9, 3.6265740016766477`*^9}, {
   3.626574158128026*^9, 3.626574197336891*^9}, {3.626574246975847*^9, 
   3.626574259741406*^9}, {3.626574300231527*^9, 3.6265743545184183`*^9}, 
   3.6265744432602153`*^9, 3.626575639619162*^9, 3.6265756706223803`*^9, {
   3.626575701422558*^9, 3.626575866988765*^9}, {3.626575910292448*^9, 
   3.6265759190292015`*^9}, 3.626576040897645*^9, {3.6266201561183777`*^9, 
   3.6266201833688593`*^9}, {3.626624288691716*^9, 3.6266242998229537`*^9}, {
   3.6266243778186436`*^9, 3.6266243857172327`*^9}, {3.6266244663104453`*^9, 
   3.6266244741090145`*^9}, 3.6266245449872723`*^9, {3.626624715215517*^9, 
   3.6266248046755133`*^9}, {3.6266248616039653`*^9, 3.62662486808327*^9}, {
   3.6266249071691313`*^9, 3.6266249225852327`*^9}, {3.626625236250332*^9, 
   3.6266252630307198`*^9}, {3.6266252975586653`*^9, 3.6266253074956636`*^9}, 
   3.627034154775372*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQHSps9O7/f+EDDFCQwrZg36vfCH7JT97+q98R/En3
X+qvfo/gn1u9sDDsPoLv5iL4dc0+BN+s9MPvyFoEX/z6Os4tv4Tg/O9t8/pz
7wvC+WevHTn05poAnL84SyzfYjk/nP/qf4fuohJeOF/2aobb9HRuOL+3Sc9k
uh4nnB/la7L0+382OF84YnnB428scD6nNYPgrYNMcP7r2GPcMZsY4Pxgm5nC
tVF/98P43rmFO8N//IDzZeRURDwffoHzM+oXSQQUfYDzb5o5uRsYvIDzJ+V9
OfZW8AGczyr7IyOK/yycb29yrf3YrwI4HwCWrG3l
      "]], LineBox[CompressedData["
1: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
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      RowBox[{
        SubscriptBox["cdf", "1"], "(", "t", ")"}], HoldForm], 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-4.999999734693877, 7.999999734693877}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6265692056276984`*^9, 3.6265692315528026`*^9}, 
   3.6265692759487076`*^9, {3.6265693379401426`*^9, 3.626569379799537*^9}, {
   3.6265698250958467`*^9, 3.626569998394605*^9}, 3.626570306990497*^9, 
   3.62657033737059*^9, 3.6265705974207473`*^9, {3.626571426934119*^9, 
   3.626571473130391*^9}, 3.626571573081431*^9, {3.626571617471337*^9, 
   3.6265717005119886`*^9}, 3.626571819424838*^9, {3.6265720905952253`*^9, 
   3.626572104731062*^9}, 3.626573385038973*^9, {3.626573455169038*^9, 
   3.62657350828169*^9}, 3.626573547071473*^9, {3.626573603525793*^9, 
   3.6265736156702356`*^9}, 3.6265738341460505`*^9, {3.6265738642370834`*^9, 
   3.626573878555955*^9}, {3.6265739768946776`*^9, 3.6265740016766477`*^9}, {
   3.626574158128026*^9, 3.626574197336891*^9}, {3.626574246975847*^9, 
   3.626574259741406*^9}, {3.626574300231527*^9, 3.6265743545184183`*^9}, 
   3.6265744432602153`*^9, 3.626575639619162*^9, 3.6265756706223803`*^9, {
   3.626575701422558*^9, 3.626575866988765*^9}, {3.626575910292448*^9, 
   3.6265759190292015`*^9}, 3.626576040897645*^9, {3.6266201561183777`*^9, 
   3.6266201833688593`*^9}, {3.626624288691716*^9, 3.6266242998229537`*^9}, {
   3.6266243778186436`*^9, 3.6266243857172327`*^9}, {3.6266244663104453`*^9, 
   3.6266244741090145`*^9}, 3.6266245449872723`*^9, {3.626624715215517*^9, 
   3.6266248046755133`*^9}, {3.6266248616039653`*^9, 3.62662486808327*^9}, {
   3.6266249071691313`*^9, 3.6266249225852327`*^9}, {3.626625236250332*^9, 
   3.6266252630307198`*^9}, {3.6266252975586653`*^9, 3.6266253074956636`*^9}, 
   3.6270341549326677`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQHSps9O7/f+EDDFCQwrZg36vfCH7JT97+q98R/En3
X+qvfo/gn1u9sDDsPoLv5iL4dc0+BN+s9MPvyFoEX/z6Os4tv4Tg/O9t8/pz
7wvC+WevHTn05poAnL84SyzfYjk/nP/qf4fuohJeOF/2aobb9HRuOL+3Sc9k
uh4nnB/la7L0+382OF84YnnB428scD6nNYPgrYNMcP7r2GPcMZsY4Pxgm5nC
tVF/98P43rmFO8N//IDzZeRURDwffoHzM+oXSQQUfYDzb5o5uRsYvIDzJ+V9
OfZW8AGczyr7IyOK/yycb29yrf3YrwI4HwCWrG3l
      "]], LineBox[CompressedData["
1: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
f/8EkMHRxLYwz3jsf6wJwpk=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwUV3c8l98Xt/feO1mJUPZ6nnuNUFFkRiSbCpnJSCIjKyvJKkKEokTG8yHr
K0lWsn3svff6+f11X+/XOe8z7rnn3HvP2rjdtCciICD4REJA8P/VmFl6+eSE
GefleCeiXc1PyY4su27+gBnHMe63k87jr+S1RxvXu8OMa7SklabgClRKGJ2T
Klo51e/n7nT7EazUUfT2ockoM854qlXmFvJcSUuTcetjHTOufnNpYTAyUUne
e/XgViAzjphPj4Flq1iJ/W8J5Zd9JlzgJJNhnMC40s7zzLgHo4w4H/6SVzm1
usq/+hobFvsYcN8qzUuVjUqUc1zY3BTz6XHnp9a55EIpVeZPIiTeedHiNnd/
aq9kOKvw9jppvXKkxiVKCXRX1eFUYkIkZV9JUuJISUlN+Kw5Vc31ZN/vnJDh
mFiva8wbuKqGcdoYde+Q4a63FaZeXnFT/TQVR1y6QoarYmlzFf/jrkoWtHDX
YZQMx37JyZ0l30P1c8k7vt46Mhw9fYvu1IqPKgUDY2pZIBnuODpjik//qWpF
11LUgwNS3PbR9CBMTVQdz+RWvrJBinNqz5/3ykhSpbl3ZU5ogRTHZlC2w/Ap
WdWG+L320AAprm5bEgMEqaq0srdJrn0nxbWYOtQX3s1QtUtuCxT1I8URNhkR
xe6/V427u3uB5CEpbsZWSVGeJ1/1u4TI0KgTKS7Won48TrdAlaH5qfIrM1Ic
a/2XW/pDhao124o7pIqkuL6QMRY/x0+qzGb57hPbJLhUBTfzTNdK1cxq0Wv0
yyS4gR/Mc/6tVapiZwqFVaZIcCKXbuxIyVWrqk9/HEjoJsHt+H62kLlWp+rh
Vaap/okE984sabKysUH1LVFlyVo0Cc6DgtMuGWlR7Yyv5XjrTIJL6ylpv9PQ
rkpw5keIvhYJ7tMrt0D91j+qUsWtiycCJDiD9U9xI3u9qlpeP9+aMpLgZqbe
zr2+369qpdJhUnpCjAMWIhyEQoOqPkR/qMmXiXHK//Eo+Z0bUY39rxtnNUSM
U+mI+vUKG1PNi+/zrmgjxhW+JlJjT8Or1pn+E6OrIsZV8qqRKBdMqvbxDY3a
5xPjfLaKP4StTKsuTY0k1SYT40QLtM+z+MypkhSPX2ENJcbpDUuK5qgvqvJ4
TR7f9yDG2fE2t+XeXlGVVZkpb7Qmxn1wvcBz3mFNVZdo3onnBjFuTuTJ0R29
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
l3ka9t0ZVvJeOIP+/3dFQ4Bic6iv8Bn0Pw70W38=
      "]]}, {}}, {{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      RowBox[{"pdf", "(", "t", ")"}], HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-4.999999734693877, 7.999999734693877}, {0, 0.8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6265692056276984`*^9, 3.6265692315528026`*^9}, 
   3.6265692759487076`*^9, {3.6265693379401426`*^9, 3.626569379799537*^9}, {
   3.6265698250958467`*^9, 3.626569998394605*^9}, 3.626570306990497*^9, 
   3.62657033737059*^9, 3.6265705974207473`*^9, {3.626571426934119*^9, 
   3.626571473130391*^9}, 3.626571573081431*^9, {3.626571617471337*^9, 
   3.6265717005119886`*^9}, 3.626571819424838*^9, {3.6265720905952253`*^9, 
   3.626572104731062*^9}, 3.626573385038973*^9, {3.626573455169038*^9, 
   3.62657350828169*^9}, 3.626573547071473*^9, {3.626573603525793*^9, 
   3.6265736156702356`*^9}, 3.6265738341460505`*^9, {3.6265738642370834`*^9, 
   3.626573878555955*^9}, {3.6265739768946776`*^9, 3.6265740016766477`*^9}, {
   3.626574158128026*^9, 3.626574197336891*^9}, {3.626574246975847*^9, 
   3.626574259741406*^9}, {3.626574300231527*^9, 3.6265743545184183`*^9}, 
   3.6265744432602153`*^9, 3.626575639619162*^9, 3.6265756706223803`*^9, {
   3.626575701422558*^9, 3.626575866988765*^9}, {3.626575910292448*^9, 
   3.6265759190292015`*^9}, 3.626576040897645*^9, {3.6266201561183777`*^9, 
   3.6266201833688593`*^9}, {3.626624288691716*^9, 3.6266242998229537`*^9}, {
   3.6266243778186436`*^9, 3.6266243857172327`*^9}, {3.6266244663104453`*^9, 
   3.6266244741090145`*^9}, 3.6266245449872723`*^9, {3.626624715215517*^9, 
   3.6266248046755133`*^9}, {3.6266248616039653`*^9, 3.62662486808327*^9}, {
   3.6266249071691313`*^9, 3.6266249225852327`*^9}, {3.626625236250332*^9, 
   3.6266252630307198`*^9}, {3.6266252975586653`*^9, 3.6266253074956636`*^9}, 
   3.6270341555858917`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQHSps9O7/f+EDDFCQwrZg36vfCH7JT97+q98R/En3
X+qvfo/gn1u9sDDsPoLv5iL4dc0+BN+s9MPvyFoEX/z6Os4tv4Tg/O9t8/pz
7wvC+WevHTn05poAnL84SyzfYjk/nP/qf4fuohJeOF/2aobb9HRuOL+3Sc9k
uh4nnB/la7L0+382OF84YnnB428scD6nNYPgrYNMcP7r2GPcMZsY4Pxgm5nC
tVF/98P43rmFO8N//IDzZeRURDwffoHzM+oXSQQUfYDzb5o5uRsYvIDzJ+V9
OfZW8AGczyr7IyOK/yycb29yrf3YrwI4HwCWrG3l
      "]], LineBox[CompressedData["
1:eJwd13c8Vt8fAHAjZWRvHpQokbKy8tzPSYUkexUZFaFCIopkJ0nK3iN8pVJR
QpSQIiPZM3t7Hntl/O7z++fe1/t1zj3n8znjdc/Zf9nF0I6GiorqG/6gvKeZ
bvDZBaSCnFdSvoiYjEr6QzYJUe8MeNBEW69NuqlyjmG6iv3jCxDXPPrEnSZL
JX1v+r85iVwwMzlh6m9HrZrNEPzRLPQdZLENPxc/Eqmqz0YW43EtgXP5F8yK
Aw1OtEQM+temfQfjj8dmvWjU1LBjnQ5njtaA4cvoDIUcDbXcpka9b2U1sBzV
HTXAbajmy1YmVNL1A6au0K5Uq9urSTyPLcnlrIN/DCWr9B+eqEXJPUkXy6wD
d0OdL4OMsWrbfwIfpsv8gl5l1iGCUrpaC+ctk/jz9ZC0b2m9Uvi9GvbhmhpX
bz0cMuaW148tVss1tjoQ6dQAawJzhudDvqlxLhsz7l1vAAaGnn3ZDT/VfGPO
zT982AjXcgo8o5yb1SaOq3fS8jTB3nGJYkGzTjWjduWvD7KaoE1O5pXH0ICa
9Wfelvv8v0G00pw0oTmuFs0UVfPZ5jd0N5i8L5ogq9VZsJSu//cbNs4r/m0r
X1bbefXojRL5N5j/bD7ocWdLTWFzV4aHYjM82f8knKqHluik4xddeL8ZiOOx
5uZpjMS05H8P56ubgamjUmrjGzuxdeaO97G9f+DT3acT3c95iYzEBeebRn9g
MynEykpchAhPbl5+lfgHojLFbFm8xYjufRMmk4N/wMVAYy7mtyQxT/rq2UOH
W2Cv27Fl43uyxL/3/6rZubZAyAuzmGPvFIlcjRdlXnzCy6c3LnQZE4mpAs6c
MVstUCfbyexYr06UuOa/EnKqFeZvn7APo9YiFhRGd3k9agVPknaH32Nd4gmq
3DKnplbY1+IpLH7JiFit8znNkrsNCljv/vT3NCfqJjQG6Fq0wYRESk1ykxWx
c3TQDmW0waO96bzypleIl+WWteTG22BtUkIlTdaBOONLf0RMuh0KHjcQ9aSd
iXd+CbLy3G4HH2dd0rkqNyIV37GFPSXt8FlLh/XCKU/io6vqbevb7XAZ/p53
qPQhcrw3KZ4+3QE1zsb0oqX+xOQth6S+sA5YZPVsFP8VTDyo7ePb9LsDvqD4
iyHFYcR3sU9tv/F0gnlcdkSIaSRRdTjzdKFlJxgYhyw8mo0iVh8rOpSd2Qm7
Igvre7F4oq5PLWPcRCfM++7Y77+ZQuz42TsberQLHPmPTzj9ziDacM/9vufe
BQMOX1WTg7KJU7a0H26UdsFjtfXubNJLons+T5wVVTfccLVh9z36lri9cfie
vkY3NH9ItUj6UEAM1SReUg/vhs++k2m9V4uIHNH6SOFPN7hHdto0VJQSkweu
HDjI1wOPJWxM6Ea/EsWlPXfzWeHucaxUWq8k5t8Nm2TI6oEDt2muuT6sISrX
pNT/m+wBY/NKjYGCOmIlx/u3s8d6gVf07YvL0U1EHevq5389euFOQnWnbNYf
YvurDo/mz72wquXL/Gq1jWizNmVeRd0HV19KLAh0dBGnTm+f+KjZB76f+rfC
zfqJt5+xi/z3pA+6Xb56efwcJG72idEktPTBssBPTKpphBgiqTwaxt8PuQ3p
Ghp6E0Q2z3M/faz7YTLe/8nhizPExCqrV87Z/XAwTDqjzH+OKMbmFmEz3Q/7
Dmx25cssEvMtg28Zyv6F/2bjQ+01VojKL+ONT3v+hfYrP86Sfq8Tvy2/UlIs
/wu9hLqevQNbRPEMa+Zo6gFIC7HZ+1mdGnPSnNwOFxuAx++NTP2maLG3s25z
wZoDcEzioofrwm5sKWpz0NdpAL5/0YhdsmfEVFRDWjyfDMDwdUueCRMWzHeA
9bvruwEY3DnlYX2NHasKSShybBkApwWHCrN5Toxe+kDu5ZUBsN7YJ+P6hwc7
3/I6wYJ/ECYXmsZ1uAWw53cVHxurDULH5Mx4+XchrF2kwue89SCoSXUfdV7b
hwnWnHXWCBgEDik55RjDA5jNjRZryB4Ene+VvRfXxbEsjksGyj8HIa/ksE7q
sgQ2WTymLjs9CJqifmelDI5gR61dFSRZhuBXTuv2NSYZ7DbdhvgB2SHYVV9+
SvWwHFb8KpCXYDwEb30+yieGKmBbBswM3J5DcEplYaFMRglTX4vdYE4cgrKZ
iLonh1Wx0Lq7ivmlQ0DvT4guAiLWmGzpptszBJx3L2vkmyCMywXySf+G4AVp
R+u2qjp28aToVARhGBa3zjwtMzyNpXPSHTxGHAaB8O2AgBca2NjouG3TpWHQ
Sx+LkZI7ix0prktx8R0GHpnujOhdOtjtsDddrGnD4Pq6vpV/vx5WahnJ/e7r
MNz9SsWnr2mAUR27baA/MAwiTvub9SSNMA1q0ydzVCOwPh45FEs0wcJblGsj
949Awdf6zKBgM+xPtiCdrPoINDZYUbXsvojxeW2j5ssjIJjziZRcY4lZaQ/6
3AocAarzcop2ddZYFqG6mD1rBLq/07ezhNtiU6ScpffVI+DSUXyd1+IKJvPt
kYzh6AiQ9CR3VZjYYXeibtxYoBuFEzTMi18fXMPK7PRynx8cBav/XMt5+hwx
GmW5ETnNUTglWzHA5nYD02Lk3tdybRTemy726Zxywdryu+M4X45CqqfqResO
N4zgX95SWDsKUW07vtsv3bHLRumsxlOjcJcqkbMh+w6WKx54bolxDGj0FrU5
Gr0w0qrdw2ipMSDaUqXpH/TGFOq0qhR0xsCSo+bW2YL72L1kqZ3WG2NASBl1
pjrhh+0+OX+HO38MxOlmB9ksAjEdztaCj41jMH/2KSutcDD2fLSIZEIeg960
b3NGux9inZ8SJFdYx2FP+G6fep5HmHCYj32szDh8vXk55arhY+yqpXWmosE4
nIqjHzhT9gTLO6re335rHAQJZMFxqUhMqWWPKW/hOJQFBzTL8kdhvtlTzz61
jEOT3fvanLJorNqzocFsaRwqRx5db/KLxRi13zGscU1A8ueBhaVr8Zg+IepM
/PEJ+JL6KTHIPRGLJXn4K5tOQGlLjj/7y2Sst8K8vPPOBBxuWso0pU/DHOyE
j/MXT0BfSFPq1cOZWL4S9a2SzgkYnXx+50DmC2yJYeT1hfUJ8N1lPhGpmI2p
9tZMrPNPgj2Vgr3vRA7ml/9SLFF1Et4rqhzqLMnFavzCbVQtJiG7Pd4j53Ue
ttfIJbnbexIYLtcysFa9xhJWFbgEyychf7CtZu79O2ygllf/c98knK7JDUxa
f48dTN54bLE9CQeFRr2ozAuxG859P/4JT8Ez4nm5h40fsAJUQZsMU8Co9jc2
z6oIW+N4AWo2U4DdXP+5zlCMYaPB3r1+U2D7wY2F/08JVvfo3CKhcgpozcln
fn4tx8K3//r7jE7B7qbGiOy9FZjubXe2XvppEOS+pNuq+w1jm6BPO3FkGswM
OIV+/VeJtVimSCfpTQP0f3y7yleNxTbLlm24TcNQttaznhffMXONGu2LsdPg
z5W/h1n7B9Z7jHyNv28aFPo+04qQ67DUrMAVL6oZ+HVbQCF5vh6z4ecL7jww
Ayx5N/QzeZow0YjXnMqaMxCncm9Q+N1vbJTmZGac0wwwCCb0aE80Y7mebTKr
T2bAo8U5eUWhBXOacfxq+n4GXIMnpQ3jWjFS2/Ne7rUZ4B2N5xHP7MDeaR+6
7iE4Cw3rXY+0z3dhbl8/r7diszAvelb3PmcPpqCgH6pweRaGdt/Vg5VebDV3
hCc6eBaCLWbbxVb7sVKhu9mLubjjPqRPPR7AfJ4zKxjVz4KRTWYv3ZtBjMpH
0YCDkwRTPMx+x8RHsMq5ur+3FEngYiSxLe07igXbWTs3XyCB2ma8z+/pMYxR
L/RxZDoJSCVptrYMU1h9FUFgrooEneenJ1M/T2MRyu9z9cZJ0LKvMU7k4SzG
Kdr9neUoGcRVbn998mkOa491NnY2IIObSIz/4R/zWDwT7XCDOxnSmEJTDowt
YIRlKaonn8nQELHBf8pkGet3rIiY6SfDYUWHpV3/rWD6LnksB6nnIHDz6wsr
pjWMcwRLCRabg7/Ovzpvsf7D3IUfXT2uOAdvRmrSWd5vYu3mLVKjmnPwltxt
zOi4jcU3XCs9fX0O/ni/vynBRg3rewr8l3zmYHPp2K1xNhq4qL6plRUxBwl6
J50ZRGiB8Cmyg7ZgDmavGUiO2dHB/fnu1MKqOfhG63FjPG039EuJ219pm4PF
eSbarsk9kJ5eslS5NgfjJeN0Vu8YgbqHtsyNcR6GRZ0OOR3dC5e5dQNFCfNw
d3rQ1vwrM4iHDbEHwDzoc47ThkewQUj1kS5Zg3m4ZnRpq96DHSa276QPXp4H
m91XSo85cEDebaZjJ0PmAeP+9UfBlQuY8k1W5uLmgaErxbgxhBtuTKSVp7+c
Bx2mWT6vPB44eklBh6oBL/fMqeET5IdI6VfFgX3zQGUYeTvUUAAWtvaL7yHN
A/J6z0eME4SPqazbzKwLIKqVr2OvLQw8LiFOz0QWQGjsuEdviQh4wVY7l8wC
nBfq8zyfvA/UBqbeChosAHeKZw+LvCikvrMlpNkuAHNFyEFqpgNA5d8ZKuq2
ABUXa1c/TR+Aqv01toejFoApZ/nfy5/ioH0lg1OpbQGkT1rnxq0fhtfyfH6l
owuwqe7HEL9PClh2PZ0hrizAHld4Q2t0BJqzfL6f5l2EoUXb4aSeoyDnsSj7
89Ai+MSPcmryy0D0GafUc8qL0CPbHnXilwyYj5l5Gl5YBKqg5TNOp+SgtKhx
uM1xESZtuUPZGeWB8PCM/oV7i/Dfs9OGLJ3y8PeQ/GGbpEXo+qB3fT7sONg7
svTc7FuEjGxnP0YjFfipEqw5P7sIhhUaHtQWqiDJuFnovr0Io6TumtM3TsBs
3mS4t8gSfF+hXf/xigi63jbr28eW4MvFOPe4bgzeneuwC0BL8LHsvsYkAwL3
mWrske0SPC8oEbYyOgntZSde7XVbghElq5RAKnVQflLAGxmwBG0PHhp7F6rD
P+n0udgXS3BVOnU1ROo0BLh4Z2aNLoHx1NKf7w6aMAILLBIrS6CB9BmPntUC
DTZH71e7l6Ei/TF/ncxZYHhvalxwaBlayFe9rXnOgZN/Q8Vx5WUQd3mw/plL
B+oNTkuXaC1Do0xOHofgeYhckN1d4bgMGqEndR4gPViozHU7dQ+v7zu9tnNM
H4yjRP7WhC0DfY0OQaJaH/gUmIsbXi1DYkRRr8iGAaR5TDj2zC7DaEKuQFea
MfCcOfOHaXsZjpcyZ1sbmkA4V6aqGssK/GjR0aNjNIV7hRZMKUdXgKs8Nevg
IzMwnW98beWyAmM2Xfck6i5CQ4UU99MHK5AxrDHA9NICTkeG3v/6dAU+p3Ye
2BthCXLH1HX3vVsBMTclq2knK2C++ZE8OIebz//WpootBKlxmHNQr0Itzw36
uipb2GByqVBnX4XYY9JRCgaXYSJP4tkL2VXoe/nD94jnFaieSJKzc1uF/yoq
gmvn7eBE8VpiTMAqGLBntaQm2kPBQxPamuer8Ea/69FbzWuQfpC19WDhKjTt
eyPRke8A3lcDPCYWV+GTkNVCfOF1WJD/28e3aw0Enz4LyvC7AQ60ahpnudbA
cfPDWJThTTDNXObJU1gDaiK2/YzOBeQGHIqve6xBhZSQhLrJLXj59vu+5OA1
mMxghI+/b8G+B6KP6mPWQHH8sMamrhuwCPdekC5aA3nVfzNKxrdh0kLvH2ll
DTj/JMT8DPAAG6nXV0T2rMMF8QkDIs8daN+gr9fjXYcF40vhM6/vQHVCZfI7
pXX8fDs2emzEE9I7jmNuXutwg4ogUuN9D8yMCP7L6+vAvPnsV6G0H+xdan4e
zLQB1Dq5+/VT/KAi+mEWt9AGRDXxGpiz+oNk+8KP42gDPgc9s/uz4Q/b5rUs
d0I2wDt5u9J7LhAK13337Y7fgLTbw3+C3IPAIVFBLvblBnCWqwdp/guCPz1p
JkX1G1CF1bzezx4COVZ3klc4/gFHZOAvdetQsNiRyg8R+wd+ptgpuY1QYEsf
/Mqj+A/iAsNOHol/BPcGdYYVL/yD9i8SNI59YaB79YCkZ9o/8FHlyDsU8QRW
HH9/WpXahNgbLH/IP5/BK8aQ2ofETRCudPl4RPY52Lw60cOrtwllhxMy1ZOe
Q91MzraS2yYsL7v/YPGIglSX+2e8ijdB8zO3SxnEgBGbvBl93SYEy8Y0mXyK
Afr3Ew7xPZsQKvnx4YJMLLgtGIUXb29Cvdco8znJODjjIdmydnoLjpWR9ZkU
E2CDe2Ak1HQL2J44mht+SYD8opgVPoct+NtiHV6jlQh8a1QCKo+34LuYsci5
q0kwc6/D5m7zFjQLTtkbF6VAtF8Qaf3SNiDe5pVrdhmg/ck++5LzNnyYcLin
V5QBO7Nalt98t6GRLUVVhz4TnCyY60LTtsH14Kv9T95mwknF2GzewW2Qlet5
ZsuUBaTp/yyPX92B0l91tHPrOZAlGsaZ4L4DH3vUBhku/QcXLtyo2wzagZyi
gBGTb/9BdY2McnX2DkjrWC2FPcmFpIwSTqPxHTjp4X88ViEPsl7Z2Skfp0Ln
bkUmh3x5Azs17ciJSIU+bBwl3D+eDxeHNAnJZ6hQqtz+8PI3+cDKL9myY4LX
L2cw25/5Fu6FkNCPO1Ro7uJLx3MN70Df1pNgWkyFLCvH2BJHC2CL51HL7RPU
SHUr0asy/hOsJOYEmpymRqUpn/bkzn2COeFqeaXz1Kie8zWd9dliGDm4E7Vh
RY2wFhdW9a1iqFf0MPYPoEY5TZZGA86lkGhq2xZRS420qXvdHt0tB+VYlY6X
ZjTI4CkYtHJXgpyA2cPHNjSItuUyc4tuJRxJdVe66UiDjHSD8pRCK0Ek522c
jDcNUtiWuCS7WQm7i8TNP6XSoPQt18a+iSpoa2Pvqh6lQfx5Cxp1rd/BjXuq
++9tWrSP4/PNP4u1sBK/QR/vQ4uovoTe9FeqA28Ck5J+MC0ybd6EIO86CDpw
JKoilhZ92Vc6HbDrF8TIOp/LKKFFwveLagwF6qH4/MLnyzu0qDpuOjLXuBG2
gzeSR8N2oQfXMxYiHzRD2Aqj9XQGHTILsbxQ5dsORXFfQq/n7UH5dBWu6YcG
oLuR3YpYuAeReLmOVqkNwDadnTxr2R7UP9FBN2AwAGfcmfoLGvagn7Vr0nt8
BqBV31x+Y24PCprUi6H7PQALDAt9oUr0yDJhLj7mziAc9RGXz6mmR5ssd0re
lA1Btk1430A/A/pA3rnrd2AU6oY8ggnjDEgi19/xicIokK5aS5uTGZBO1COL
8DOjoOgod79phwGFqT9atMbvkTW3Oglf9jEir47Bcou8URgLELNMusyIokOZ
1GKkx+Bgdlm3yRgjEhWpMkyVGAftQzkBz0iMKCbne3mt0jg4v3wq2bDCiNJo
glRGNcah6M3le6f3MKGLh76dmLk6DhpF9ALyEkzICZQcVdLH4doP4wtsTkzo
Br32lVrOCcidnOmom2VC8gFJTXGkCTC9XrvVu8yEwvw+8t35NwF0s9kHyFtM
yM3ovttp+km4PGflwsmyFy0l5Ji+3z8JQqu/d1sexV3VMfLLaBKe7/p4fNZ5
L6q4tLq+6+MkeIvcj2Kd24v0L+p+Sbg+BZIZF0r2r+1Ft5refb5/Zwo6RRX/
ylMxI5kHG5KG/lOgeJAsac7GjA63dnnVx07B3BHbynQZZqTFmB+x59sUXFU9
My97ixlNwCZPKsc06Jow6xkvMCPNc8nWoXnTkAyxZ3n+MSNubonY8x+mYfKw
yOlOWhaUGf3gB/WXaQjallGx5GZBfrkjhkrN0/D5P+MDV5VZUJeBUlrnyjRI
bCSt3vZlQRc/bfFTwwzcGRFbOP4Q/357bqgMvxdVNb6ZWX3KgnRaxOId9GfA
6sXXQe8MFnR9jJY+0nYGYnSGfwVWsyBVQ9+f+wJngCZNMj2KkRWJX61wN6+a
Af1HhYkmnKyo8qD3L4FfM5ByWy2Gl8CKWIYtCY1/ZkBZSzcsSZoVadBOL+wZ
mgGX+VvuL/RZ0ZF3R67U7cxA76kSrcJYVqS1fpUqUXkWLJZeeDmys6Gd1fKN
4bRZoHkqb/2Amw3pKhk1+WfPQu7hqjMx/Gxo17eSx1yvZmHFaojj2342NFod
vsZXNAvPa/e94ZNjQ+1u57TTfs1CXWrK4A9DNvSfoDzT26VZuKUi/bPPlA31
Rz13z1yfBb7WsvzFi2xoc/rJp8fbs2DP0OstcoUNMXO77kb0JKBxF+DxvM2G
rDWfX5cVJIHq2Tjtg9Fs6Kh8rfVpIMHg8EFZtXg2dH/5wpXkUyQI9S3iNUxm
Q5zJPkenNUnQXtg2cj+LDZF12Exv6pPATZjrQdsHNvTW8G8AnS0J8hYjC4Pa
2BCLt9XGMz8S8KeGEYZ52NGm86s03xISsN10ndUXZEexKZOL7OUk2K1m+uWL
CDvSe74TlFxBgsWu/TaJEuzofeHrjLgfJGjgLnlhoMqODHR3pxxqI4H/k3HJ
ikvsiOQiu6+cRAIvy4Z/0pfZUbEbFVf9PAmcpQrrk+zZ0c+bxjotSySwqPV1
9nRhR80qw7V1GyQ4TsdTcNSfHUkOlb613k2GSZ/TKilZ7KihUCT1KIEMA+ck
GZlesqMxLFqoVpgM7QJsPV5v2NFs4WSb5X4yVBX3+BgXsaPk+VAp14NkSFly
q2D6yY4Efutta8qQweBGhua9aXa092JK0k91MpRYbJuYyXGgsZnvKjeukEFG
/xjbPUUOVMo0KnHYjgw5p23qklU50EPf6MxBezJES1diQ+oc6JthnuUZJzI4
7wQfumnEgUYnndY7Xckg9oJ5PcCdA72+Ucyqcp8MiXFYYbYXB9rzQkyg0JcM
7OEuN3/6cKCvhuKnD/uRYdu9eZA5mAP91qYXYAwkQ5dGTF18DAcKZd7+mhpK
hogpQnJ+EQcqiPI2F4wiw66/502bS/H6F8QtLKLJ4N3iy7b0hQMJd4rSxseQ
waFsIEjlBweSSw24vCeeDKcism5Wd3CgeSxC6WsyGdZkj0D3GgcK/pLfnJBN
hit3TwzRneBEsa9F0o98JEPqrF0PJ3Ci64cdmJmKyNBtG9m6/xQnoquR4x/H
bag9WkM8x4niH94/EF9MBnXBp688LDhRik1uZj9+bxctH3If9eZEspd+HKCp
JIOVLLPz4gNOxCe2xFeOOzFb6Rp1ECeifnJ8150qMnBEhF8QCudETnxmzYPV
ZKC2VsRMkjmRmIHdn4wf+HxThe35XsaJuM41vf1RTwaCxweqlgpO1B3eZnS1
gQzmk/3rA9WcSKGhWHUH9+9m+ZnNek58vY8NHWsiQ0Vm32+FPk7UZujMe7+Z
DGmnZROztjjRwxdBNXVteH7FFlEF1FwoYmkh8Xw7GXikQ8Ir6LhQaaT8ciPu
CO4e315mLiSTlavd0EEG37GgK1zCXOidwvBwcReeX2jnkSCMC5lPPN6j10eG
KZkLbFPqXIit0vDAd9weXV2LeppcKFyhtUalnwzhkj2lgvpcSLFOoEj4LxlK
6/u0Cm250HTOSF7HABm42YevDgVxoYHKU+4MI2RIL7mipfWIC2UMcK444j5y
eUQq/wkXOqwrDbW41QtHF+7GcqEu+orjQaNkcDWZ8GPP5ULl+TO8M2NkqE+Y
TUa/uFAq7dn8kEl8vNSd/XKauNCPK39Pt+EeniJd2dvKhUQLXnSKTpFh48Sc
ZGcvF9JP+Uf7GbdE/0KxC4kLReftlP+dJkOQ6FprKjs3MhPLPbM1Swa2X17F
u3i48fOINwuRRIak2+tJTgLcSG16gdoHd0H1xmXFA9zoUpnQ7VXcA/Zbcw0K
3CiRnvv7CJkMJ17RMG+ZcSMrGzmNpHkyaNxt7OK15EZPFdrdf+E21EzMkbPh
Ro2xnxn/4XYalkUODnj/1ka3zRfIEC9oe7vFC+/fZvra3kUyLD3+2vUygRv1
NLgbXFwiA9XFxznVKdxoVOx9uT9uJgmz238zuJHv0KlXubhFq0l7ufO40RaL
BdsyboNNIeRXyo0u2C1Khi6TIf+GT45pDzcSeUffHb+Cz5eq1u1bf7lRHfst
uhLc3+nxuR3G408W/9mJuzfrVde3aW4kN+nMx7uK99fXvVd6kxshw8zdT3E7
nFe5TSvEg4wvBorcXCODuyAdEt7PgwjvJHUf4n4w+XuvijhebvroYAbu2GCH
HGdpHkRtFN/Zgvt7eVxXF5EH/TZ/ZHV8HY8fvyu/s+JBCmfe1k/ivi/Dtyp6
hQdJ3VhsptogQ6ecan7MNR7ELsAcxIs7QsmX4O3Kg9JPHVk8hfsf2r1+JoAH
NehpCCbgbjXiKejJ5kFv7I3vHv9HhmOmyo66eTzoallwrSbuMPOL+77l86CH
B4rbL+BGl1Ijcj7h34eXS93H/cb+4PVbtTxI/O1KZwXukLuKYntmedDLTotN
tU0yDHqb99yd50H0EcTAc7jVfO89n1nmQYdrjFsv4F4I+EL1Z5sHsVZxd3rg
tg7X6Etm40XT6et3X+FWTjONlVPgRSvurhXMW2SIyvA6n63Mi3wJchg/btKL
xF18RF7URzseKYY7K7ffbesML9qJifikipu9wF7vpxkv+u/PfgE73FPVd+it
vHkRL5XvuwLcjJrPtz8/4EXOB+XiPuOWqn2zxB/Eixxkay2rcd9oGBloC+dF
tn7uIW24Z9sMS86n8iL7UVWbFdxzY0ediN94kZRndLjcNr4/HLVtkr7zIo14
wxgV3LLTdqbrtbworColEOF2Iyerf/zDi16om3Lo4l5aZRSUHuFFTTbXaBxw
r9KP/yLs4UPsDR1343DzPaapvMfEh4zS9elScCszCxd3svKhX++LvTNxe7Gb
ZEXz8aE2yVDJN7g3+Kt89kryoX9xGvHfcAsk97s5HeVDv8cvB9bgPiG84fBT
jg9lPvpk8Qu3j6isSdAJPvS3XbCtFfe2ZJr0pg4fCg0VXBjDLfym9MBFAz70
jlFHdxo3HGvnLzbhQy5O3xLIuP3kmXe7W/EhmkuuO6u4qdW8+6dd+JB40bW9
9Dv4/+u82dOe53xokuuKlTjurKVyZ1IsH4LAhKcSuM8ki+lSJ/Eh1Hf6oxTu
kOn5vYde8KEA3cR+Wdz0YeFhboV8yEkz8A0RN/OPb8EMrXyo3O6npRHufGcJ
O0InH4rc2TVugluX5+npY7186Hbm1jVz3JF2lrQmI3zI7EuW7iXcHLtW/dKX
+NBKJ1Zgj5vn5BEfJW5+dIR7ccYTd9HEcwttfn5EnXZu/i5us8h11UtCuEOU
Sd644//WrAeI86OUC8p/HuAW8LX1bDzOj67pJZ15iFvkc6ybnSk/aiXKkaNx
V1zeMvC6yI+0L10PjcVtw3hV9rEVPxL2LBKMx515QXbunT0/klbvkEnCLbb2
6+bmHX50kiOINwO3xHFqx6g4fpRZlz/+Cjcf+xe57SR+dF7QQ+MNZXxm7206
pPMjs9U3afm4J7KWnmIv+dEYVePJ97hzuSaKJkv5UcsDLs0iSvxzWX7GX/lR
XMoX70+4Q+tttb9W8SOHGL9Xxbgdgnr6ouv5kRBLwmYp7sNLjbtQPz/SIR66
9pWS7+/HjXlD/MjLMOVOBW7G11rx3OP8SHnXF/9vuKeuVEpNk/nR2pNTj6tw
57V8NIylFkA8l47d/IFbsjA5fUZMAJlYnrzXSGnv6QUns8MCqGZn8FwTpb3r
PAqV0gKoflhU4DelPdHIH3GKAkhX+PPrZtyvngeS1LUE0O9dBa9acSc7o+I3
OgIosrbyShvucO0tfz4DAZTC3c3XjvsGjSc36YIAuvP73L0O3EfcnNQSrgug
6598BbtxE3QP7d7lKoAYJ/eUU7xXcqTJ2V0AGcssWPTgnhm8dOX0fQEUxc31
vBf3awODMHIEHt9q3kA/bmlZ5c4zBQKI6mQ06zDuVDn02K5IAO37lxxIMYuC
FhZcKoBm9g4sU0xSNM+qrhRAPxhk2kYo61fNy/VUCx5/65sHY7iFMb8DVzoE
kI8jGqM4AkLbA3oEkN5jdG4ct4t6vFrlsAC6fCGDbQK3jFYx/cklAbQY/fDR
JO70sxWfbdYEUEL24RGK2c79dPbbFECTvfbEKdzz5ztbv+4SRH9of05TXGC0
lo5xCyLdho/KM7gVrJVV1BQF0cZaSByJsl9t0IyFqiDicJHrp5jrslaaNyaI
5j5/P0DGvXzVnO6zhiAKePPhFcVFTl7NKmaCyNXg4Ns53Adv+AVdsBBESfqB
sxTH3gxVumstiKJgQnIet6drfErxNUHkNNiZSbHynWJHJS9BdLe79OECZf16
VhDMfASR6JXyLxTz3f3ZdMdPEJnYjixRvO7debwoVBDp7XljtYi71H+N+niC
IPpPPVBiCbfaE+VEuVJBlDxGilvG7caiGk78IojIbF3fKP7v6QlfrUpBpCMu
PE0xx3PsslWdIFKYqjyxQtlPsaclw7oF0Yv1kjaKhfk0CDH9gijk15cNio0S
NFnShwTRj4uyIqu4vyRpL3ycEkRnPR3sKY5O1y8d3BBEadoXSRTX7Td8PbMt
iJhH6VnXcO9kGqWu0hBQ29rxYxQ7ZZsGMDMRkKY5pzPFKM9SW0WQgD4uso5R
PFPo0B15goDKf2VUrOMWPe5UnwQE9MOKs5tis6LrX3JOEVDFfZFFiiuLnTPL
zhHQjWBmsQ3K/i93d5qwIKD8ACd/ihuxO5aL1gSkZN8dRzFthafu9hUCUo+Y
e0Oxc+U9Oa4bBBSzj7uL4tM//DbAh4D4ba5K/cN9TytgRtuPgLZTpYDit7WB
/SZBBPQm9IUhxQL1IZXXwwnITD7Pi+K53+FhcckEFFsj/43ilO54AXIZAX1K
kjmzSckncm7F4BsB9TxpM6E494xWy4fv+Hi8l7WnuODd6uN7jQRkd5UrhOKa
ENMtugECctPLqqT4nFp+l8MIAXFWH2im+Pc8XdGvCQLySrryl+Juy4/Oz+YJ
iLdA4h/FJDmuAQKtEPI5M3psC/ftietlD/YIoZOfgtQoXkupih9iEkLliTNa
FNMw3DbI5RJCPS78thTz/G2ulD8ohFQeUT2lGHv8NFv7rBD6vr9ykOIqNO7/
5rwQOpinP02x1gpmxWYohLChD0sUG9qSeNovCiFFNeo927jtlc6H2t4QQk1T
ZYcpnp7JulrtKoTOXNwrR7Fr5iY65CGEEoYUVSm+x/x6fea+EDpULqJNccQw
43Wvp0JIIcDAgWLOhMuaPVFCSPpDmAvF8bqlB7B4PJ/SF3cozixx7KXNEELF
7p5BFBc9/Xn+aYEQmrn6IZXivydCZHLahNCm4WIDxSM8h1fKu/D+5BhbKJ6a
//W5rU8IUdUydVK89B+7Jt2YEDK5+3uQYnqulEtXV4SQg4DjEsXMZDjgsyGE
Pq30r1HMUTc0EbUthEJF1LcoFvKTcK/aLYxoHzXT7eCWmykME+UVRuudBB6K
lX6Y6qsKCqO3QCdAsVrmOrehiDA6rNInRLGmOWT4HxJGqguW4hRbVtd9GlAS
RnWZmfIUBycPjqSaC6OpEZ/zFId5BuUVWQqjuS1vfYojDQ+5NtoIIxpnZyOK
E+lv/ttyEEYOYkcvUJzvvsZ+6a4wkncXvkpxoV5Sh/t9YRTeVm5PcbEklhLu
L4yQoKEjxVUDgRJlj4TRR6aLzhR36rCCYKIwAhv8uIG771DBLvlUYSReq3SP
4iEakzrtTGE0dvuuD8WzxYkm9/KEUYPMgB/FNOIHb3SVCiORZ/CIYqkttYS4
HmFUfNw+nuLe7JGe0hFh1NShkUxxhG64cP+sMGodp0mneC6t54UYlQiyf8bx
H8WZWoFjmgwi6PAbhzyKjeYlD1/nEEE8amlvKC5Sv5f/XkwE0WMFhRRfm94/
3yotgpJ6I4so5ouulV9TFEGSGsYlFHuP8pVgZ0VQ1rUnXyhGoZ+qft0UQa2e
Qz8onpex3k2+I4LyzlDX/b//rt1nOfxEUGE/Uz3FdFKmjebPRZCi7XgTxQ4+
2UZpWSLILvFeC8V1DUudo0Ui6PfXunaKpUVOWx2pFUFRub1d/58/16hhtx4R
NNnyoZfihW9DDiWzIuisi9lfik045Ug7O3h+lj8HKf4f8CrNjQ==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
VP++LQwlNv7v//8fVBja7/3f/wPFehFZ
      "]]}, {}}, {{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      RowBox[{"pdf", "(", "t", ")"}], HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-4.999999734693877, 7.999999734693877}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6265692056276984`*^9, 3.6265692315528026`*^9}, 
   3.6265692759487076`*^9, {3.6265693379401426`*^9, 3.626569379799537*^9}, {
   3.6265698250958467`*^9, 3.626569998394605*^9}, 3.626570306990497*^9, 
   3.62657033737059*^9, 3.6265705974207473`*^9, {3.626571426934119*^9, 
   3.626571473130391*^9}, 3.626571573081431*^9, {3.626571617471337*^9, 
   3.6265717005119886`*^9}, 3.626571819424838*^9, {3.6265720905952253`*^9, 
   3.626572104731062*^9}, 3.626573385038973*^9, {3.626573455169038*^9, 
   3.62657350828169*^9}, 3.626573547071473*^9, {3.626573603525793*^9, 
   3.6265736156702356`*^9}, 3.6265738341460505`*^9, {3.6265738642370834`*^9, 
   3.626573878555955*^9}, {3.6265739768946776`*^9, 3.6265740016766477`*^9}, {
   3.626574158128026*^9, 3.626574197336891*^9}, {3.626574246975847*^9, 
   3.626574259741406*^9}, {3.626574300231527*^9, 3.6265743545184183`*^9}, 
   3.6265744432602153`*^9, 3.626575639619162*^9, 3.6265756706223803`*^9, {
   3.626575701422558*^9, 3.626575866988765*^9}, {3.626575910292448*^9, 
   3.6265759190292015`*^9}, 3.626576040897645*^9, {3.6266201561183777`*^9, 
   3.6266201833688593`*^9}, {3.626624288691716*^9, 3.6266242998229537`*^9}, {
   3.6266243778186436`*^9, 3.6266243857172327`*^9}, {3.6266244663104453`*^9, 
   3.6266244741090145`*^9}, 3.6266245449872723`*^9, {3.626624715215517*^9, 
   3.6266248046755133`*^9}, {3.6266248616039653`*^9, 3.62662486808327*^9}, {
   3.6266249071691313`*^9, 3.6266249225852327`*^9}, {3.626625236250332*^9, 
   3.6266252630307198`*^9}, {3.6266252975586653`*^9, 3.6266253074956636`*^9}, 
   3.627034155855401*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
ijGv/vsnhsAliN3PLRr7H57fznY=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      RowBox[{"pdf", "(", "t", ")"}], HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 7.999999836734694}, {0, 0.08}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6265692056276984`*^9, 3.6265692315528026`*^9}, 
   3.6265692759487076`*^9, {3.6265693379401426`*^9, 3.626569379799537*^9}, {
   3.6265698250958467`*^9, 3.626569998394605*^9}, 3.626570306990497*^9, 
   3.62657033737059*^9, 3.6265705974207473`*^9, {3.626571426934119*^9, 
   3.626571473130391*^9}, 3.626571573081431*^9, {3.626571617471337*^9, 
   3.6265717005119886`*^9}, 3.626571819424838*^9, {3.6265720905952253`*^9, 
   3.626572104731062*^9}, 3.626573385038973*^9, {3.626573455169038*^9, 
   3.62657350828169*^9}, 3.626573547071473*^9, {3.626573603525793*^9, 
   3.6265736156702356`*^9}, 3.6265738341460505`*^9, {3.6265738642370834`*^9, 
   3.626573878555955*^9}, {3.6265739768946776`*^9, 3.6265740016766477`*^9}, {
   3.626574158128026*^9, 3.626574197336891*^9}, {3.626574246975847*^9, 
   3.626574259741406*^9}, {3.626574300231527*^9, 3.6265743545184183`*^9}, 
   3.6265744432602153`*^9, 3.626575639619162*^9, 3.6265756706223803`*^9, {
   3.626575701422558*^9, 3.626575866988765*^9}, {3.626575910292448*^9, 
   3.6265759190292015`*^9}, 3.626576040897645*^9, {3.6266201561183777`*^9, 
   3.6266201833688593`*^9}, {3.626624288691716*^9, 3.6266242998229537`*^9}, {
   3.6266243778186436`*^9, 3.6266243857172327`*^9}, {3.6266244663104453`*^9, 
   3.6266244741090145`*^9}, 3.6266245449872723`*^9, {3.626624715215517*^9, 
   3.6266248046755133`*^9}, {3.6266248616039653`*^9, 3.62662486808327*^9}, {
   3.6266249071691313`*^9, 3.6266249225852327`*^9}, {3.626625236250332*^9, 
   3.6266252630307198`*^9}, {3.6266252975586653`*^9, 3.6266253074956636`*^9}, 
   3.627034156433107*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwd13c81XsYB/Bji5JRVshKlJWQK/2eX5TsiIxEsikzO3ucbMdMdimlVEZK
ZVO0hGyyQ1JkZ97v8dd9vV+f53m+z/d7jnvPFbB0uWBDSSAQcqgIBPI/NWym
2mp/RmAanfnyBadasclnhpZDXNYQolrqZxbRirEzdsaXcXlAy4bBWZWWVkzy
v30PsrnC4ULB5vWnVm2YYuvx4iSuFJBPYpoLz27HhE7lPGzISoOS3WW9CrPt
2O7H9LmLB++AiYqNsIryN+x72Pc4Q5EcOOHXfdx15htWm9kgF8d1HwzXT1K+
1+vEZNt9Sg6ZPoC8r56y7591YoX0khLVWQXwypwxSn1PF5bkmS48e7AQskLu
x/5t6cKszjux6Yk8A/lhvZgbNj1YWEiMTzTXCwiXvhg1N96PVfPYvjR88wIE
Wdf1BMwGsNVX+KKgaTk4i6e9ge4B7PqfJZe3WS+Ba1IoxKrtO2ZgamE3c/A1
ZD4PJx4cHMLilxUfVNS+huSZqUyN48NYc+L+sfCrb6B5grIp02cYO9X80Zw3
/y3IX9kznUg7gonIyRnqiFSD9/B0iqr0KGbRujeFu6kaovxcPhUFjGKZ16bb
JuxqYE8cnqL1eRSjb/taUGNQC/FctM81ncYwf7oIQeO0OrjH1Bn8tXocs/aY
5YriagRqNW13q/uT2HGqJL9S10aobrtBJcY8hVEmyfb3NzWCJw9zaV3AFJb7
3DdL0usdbITIm0ab/8T6pqkOdrS/B2cDxU7dE7+wR74FQZtiTUDt5xdJLP2F
edOrD4uENMFZVT7FFqkZbJ9I/F1fqWbIJzlolEv/xs5f5RQ+GPsBIu0EqTq1
ZjG+uTfhamMfoHO0szy2dxabCTT74ab4EXJYouN0ZOew6Kx7BY1TH0HtD9Xv
5fdzWGO3uJjj2c9QMpNHKb3+F1PUOS1ZvtUC5RvihxvzFzH672Pxgxe/QmxC
WK3K9iLWfY04S/f0K0g9tFtQubyEvWm0MX4q0Qqvt+xXv3MvY8ajj7kIA63A
EYGxCT9ZwWrENj6k0LVB8KMqH322VUzETdtP7HgbRHESLeUCVrGl7dm+C9Ft
0DRg4nrU8B+WxCuX9UChHT6kekXn8a5ja9ZELUXrdgjVNAwTSlnHrhZ1b7Qk
tMN+oYYh0u4NTPqkn9nqRDv8jTiXoUa1iX0xruHTTP0G7W0tw5S7tjH6FPW7
c387gOmfZ9mlagpYVxhZv8vdCbIqUVdKaCjhz3cfQ32VTqgbkTvGoUMJ3w4/
YnyZ0glHaGitD45SQs5bWq+bJ7ogUSI+I56DGmTHGjRoA7rhoJiKt/dbWjgc
afrg1YNuMBePf5W3nw64JRa27Vu6Qbe6PfyAGx1sewmWfzrYA1UmLqqc4vTw
kSHkYGJ9D7z9L1yyrHQXWMhgiwfo+yBZLKq9iXYP6Hd36nyR7gMLqrYvBj57
QNXfqTDQpA+IjP7O4b/2wNH3WeYjj/vg01Ojo6NdTLBsst5coN0PMkqbD3iu
MkNsSEX2seQBYJjON9L1YYUgEd3V0bcD8IP/ikRiDSu4f5q8kDI+AL1Wuwo6
6NjAaD8H/Yrcd5inaJNwy2QDwUJP98qe7/C69Pkjy6/74FWrzLlzfEPAlc/X
ZerEAfE/Z9TEVYfAvfizXHkjB9hSPtRgcR6CgD63QJyXE9hlD+j0Vw2B5Kin
6UYbJ7z9FPL4leQwOJzqrvXR4IYDUo4lmi3DoPpp9MThm7xAPHlOBhsdBosO
ypzoSV6YPydcJr08DIcVu3OtLvLBR4vBF/v5RiAmPIg3Su4g+CVdqBhyGoHP
p3vq2ML5oW9JsebGnlEwcGdpjwgQBFVKTtxWYBRetFi5RtcKQinTUq2x3CgU
/X5m4E4tBNGHn9efMhsFSU0appV4IVA0EXpP93QUaBYkW4WeC8OdSsYvmVpj
0FwrrnqX7zBQf5jSjrcYA2m3g1cU3A6Da+e7lmCPMWhkqRsebTyM/o6CWm2y
xsAvh18nyEUUVg8ufpOaGYMi46z9su1iYBw20NcQMw5hpVsR2a3iwDwsIm53
dxxuVY2FlWAS8EHJLYDh1Tjk57b81XomAYrLNPx6o+Mwv/p0XSJJEg44SNkM
KvwA/nJ1j2R5aRjUCZ1d/fEDpo1fcmkoykDak8941voPOF5dYtIcKAPn6TmS
gGUCMqmCdOUaZaC27oksUWkCzn7bPDypdxzuynb6siVPQFD+SMaWjyxYc4tS
S+KT4FlvmP9qVR54vN0vtl2chJZD6T+StE9A57fKAo9rk8B7zDk1If8EqMbp
qb9NmwSj/y7vXr+gAIcJN+PVfk+CdCZH/0bNfzD94wunVcYUsJw5FDrQqQT3
lDkdaYunwLsy8Wkgdgou5Vq+LXw3BdoPWp0DHp2CT8YrZnNzU8AerlGaF4xB
0Sf+/IBzP2G+8BLXKj8OLiU3JNIXf8L6NVxFmlYZ/iiNfPtAPw17dK9bMCsr
w/VmHb91nml4zE5sfxCoDPZDYk3mZ6dhKHqIf/WfMljsGbY4lDYNs5FqHC7/
VEDXQSul9MQvCPHVAyNeVWhZfK04rvkLHl35edXdRhW0gg+P7Lf4BZuy1vst
n6mC2m1KSd/IX1C+/6VHk/I5wN9VNEHvL5DMon457qkG0gKH1j/7zYD9+eJV
NTpNeFaUdHcrfgYiNu+xF5lpgrgCQU06fwYoVO7q05Zrguj5/pTkTyi3unSy
0FYL+AMSJS/x/IbAMcq+qU5tYOndvDpZ9RuulMk9Eb+hC/OkrmYKilnQv3dh
969Zfai8XgLj7LPQn9gkuX7MAG6pxb58Lz4LIfp0FB89DICHoHw/xngWDkoU
HH+8YQBnXZ4G7S+ehbI+Od97+w3hs4hyZorUHKglN1CNOhlDScrzrgjFOdD1
+hZ4t9IY0ih5Wb3PzsHvJzqz/+02gauDK5EmpnNw7/g7rY2nJrCc+tSL79Yc
vB4sl19avwT8NFwXHg3OQU5XqIVogxnQ3CDG3fk5B/FJZZ+V+M1henihOXpx
DjL7ZxzPBJpDeWULODH8hTbu/KfHT10BDY9wCRn5v6AXeDriipUFeIzN0lfG
/YXDKfK5i9SW0Fz3vuar0jz4xLQp3npqAwWfN8bjzs1D674Ao9u/bCCiW4ZB
68I8eAV/OHP8iC0o/84xaLabh4wBwSnmQluo5PT+WZs0D9RJ8cduPLWDYpfD
bKVT83AscF+xRpsDpPNG2qakLEDJvcIGu0hn8BKtjrmQuwDD3S31Iz3OcPH4
YjHz4wUwaiL8XBRzAVZ1i/XYmgXYrcvjPPnFBWI9FEgR0wvQfWxtPDjeFYI/
Tb32whdhVt7HjXnGDRx81feYzCyCH2ee+MCwBzw+wGJmvrwI+9NOHzPY6wkz
VT1FVoQlMGySuL0H8wRnSnst531LQP+Ls00lyxM8YogxYUpLwFdmHVFh6gVB
2Q27nsUuwb+HXHEJE96QWneKlkpiGR6n39DvFbsJdbtktoucVsCybKPirUgI
iBpIv4r2WYEB3lsOUudCgJQj6WIftgJ9QmJMr+xCwOL40SGhOyvwND6TgVAY
AluXhWsyGleAQ2TvaQfxUFAsZg+KPLAKilfCH+2XD4MXhutbVh9WIfvN6Soj
3Qjgufvv5emOVUhqlf3O6R4BYb9WnA8OrULqh7LZnuQIuBC8ONi3uAotJOWW
C90RMFf4u1qP/x+kn+1T4jAngsTmUCB4/wOR1JHso463oCC/cYv70Brs7z79
+4ZXFLhGGIyA1BrUVHqdu5ASBSftxhus/1sD44APZhylUdB6hDrqmfYaJH18
fOfC7yj4V6LCpuy1BoL8TNzeltGgVVt/2KEJ2dJqsUE1BtjvXWCIb1sDT7c8
qmeWMTASNjpT2r8Gl3tVBt0CY8DrHGXpxiyqn9C5G1YeA3ktp5VInOvAE687
90ogFhYGanVfOaxDy+GYhwV/Y6G6Wvf4wI11eKFsFdDMEAeRecP7KQLXof3I
rrSXQnHAY03o10haB5FEKYFFgzhQ/QU2g2/WQSz8Z9zAizjI+FftS7N7A9QW
pb7ddYgH636dy0fYN8By69ht/qB4kKoaxM7zb4C1e2i3WUo8NAZvUd2R3QDi
3PnLzNXx8JsOixc32wBxz6vXTzElAM5edU//GZp36Ti2mpcA1Kn7Xc5WIPsw
4vklCdDM5nzyRP0G2MbVy1PWJ8B5loMd3F0bMP1Rs79nJAHMd4fQjG5uwDjH
bMRPJhIIxvS2faPbhO/ahwep2EnwY5dMzjuWTcCGCSxLPCS4TjcmX3hoEy7T
z/pfOkKCm5Rn7V21NyFYQ7NGRIUEWEi2rKXRJuy/V3nytxoJKAnLBIOrm8CU
UhJ1S4cE0ZsFd054bsKxmUJeeRMS6Phv24gFbcKie0aBujkJWNaNZA5EbcLA
2h+ilBUJ0lfpP21lbQJlOk2v63USXPa+enuuYBP6nUsTP7mSgH/5tdVo8Sas
TeRIrXiQ4OGC48a7xk2QFF17VuNPAkf3huZXLZsgJVTWbxpMAsm/B1ILe1C/
rGp4UxgJXv75LBE3swk/UygnGKNJ4Od0aC1weRNO3pGfHYtF95kJeO9K2IL/
BC32RSeg+1zrSrJk2ILAd5zbm4kkePdT8orBvi3gP3LXBFJIEGl/66gq3xZM
UYy3aKeRQGtyaOWE6BbEbvswiKWTgNlWoVFMZgssPz6saL1Dgo5xEumA0hbk
zToSz2Si+1r9vLxHdQsYWt0FwrPQfUdPi22f3wLRGFGFhGx036sZS3MmW6Ax
Wexrk0OCsaH5ulGrLWCVn02lzSVBgblmfIfTFjTLRZ5yR3b8nn/pvfcWFM+O
CzxClry8IVIRsgUziXJLD5Hn+wwWCmO2IEnVw9EN+aXJ05rM1C24TmsvR43s
10MTG5e7Bbb2Dxks0HmYkblxUOEWBF/PzA1H+1B0vRR2K9uCUeXQx25o30aD
vX8tq7agnsl9VATdJ/KbXZVB0xZYPzDdzkf31bpQG6XatgXvz+15M3UbvUcb
p6FC/xa8MJb7vJiK3uO8m+CRH1tAzWQz15RMgtstH/4cmN0CTl620avovS9p
C77d8w/d3zLHrD6eBHyf/W5tU24Dc7gu/88YEoxqfNP/u3sbskgWU52R6D0+
HOUfY9+GtLQlj8gIEkg0DVS8P7INKUoM308FkoD9z7XfJLltUHtjWDjhSwLC
/nUBU3wb+JKH3qp7on0suWJmL26D813WsFPXSFAd9ajmtcU2KHDP3PtiQ4JH
xScWw65tA3uD3RC7BQn8ty6acYZsw/t6xZRv+iSwPfQjcTRmGyrfiYWpapNA
V8vjfVHaNgyf/3vTTZUEwhlJUqeLtkHjt2PknxMk+Cz3lcKxexuEh9nOB3Kg
z+Oyubzs6DY0Ho1pfIz+PvPCfjtuzaD7zUnYxtGQ4M0UjaM6BQH332X6emo8
AeLlhb99ZyfguAijy63EBKD6eO23Mg8Bz/qTpKZwMwF8zMroHgkQ8Ms9AVEX
rBPAMlxZyV2cgD+KLqSrl00AuXaLB7TKBLzYWYgvoiUeHts8qrl2joCLip87
41sWD3z/ZntbtQi4MF7/suN2PNDzBzFlGhFwAv/8i1rzeBhwyvaWciLgxkeI
6vY/4kCP4kdiijsBd2XW+Z34Lg7ep4gX/fMm4D24zD2BB3FQ/PbtcEMoAa99
tfXD3TIOwnf1qRunE/Dg/IPH+jtj4V+WgHVVNgGfs/2be7wkFpylHQIF8wm4
z76Hn//GxIKx0WrpzFPU/9vXPxdiQfwBO09IAzrf+W1rXW4MdOD6fwr/oPvl
DBJPqkTDWu5YdukCAa9wPrWXkzMaBLZvaL9dJeAK7KGHXWeiwLkqpegzJQUe
bLF3LDk5CugUuxxn2SnwqfMJosX9kaB43GRSFijw1TEZkp/+LbBI+pl26gyq
D/3eLsV/C2799VVVVafAI53KrG1miNDxPOOBkT4FrjAWy6gfRgQn8QErPzsK
nHT7/cEzTyIg79CV4ZoECpyZ6/v98bEweB8+m9CcQoHj812XOx6Fwe+xIGi7
Q4FLm5vSazmFgeK9vJzRfAqc372U2LkYCt/4Ri/TVKB5DD86r26FAC2nTa/G
MAVefPPE8sBKEFxnuNbeKU2J5/3iy3mp6Q0FVewvNeQp8eDykMqFp14w5Fp/
p+Ykygf/ndDZ6wUXurmuFqqiPEXlpvVXD1C43zzrf5kSJzCzshmfdQdqTGSP
cCTyj9WorX2OgP1tm0uPQ/WEDDm7Gnvwvh/QsScZmatlycTeDqYZOjNXspFN
ho4ulFtDa3fYkU9lqP+WhTJ3iDkwxEgx4a+RWbweVtWYggrW//dFNarfoNf6
sm4ML+/LvM75QJ7f+Mf8uj7MGQ1msX1FvnB7ZiVPF8QYo4MjO1D/hL6eYYEm
ZLmNnHMfQm4Ut+S7ikOXcNzRyXFk0i0zcxc52NujsPfyNPJAma/mYWFQixmf
b51FrhUR/ca4hIVipK6zS8iuof6yN8Wg8u/JN2/WkK1l/tTKKMDS/clsKQIV
TuioUSb0nAZ7RrDhYkS+FMtGdVUb7lVPq8UzU+HB03OXMlL1oN8tTZyKHXmm
kSrS3wB0en4vzPAjH9j49Pz8JZB9kBVaK4/6KxprJqmtwNlYzVZOCeUagmPs
gdbwkHFR/fFpZO2K+5srNsDtrsmSooVc/oer57c9ENA32s6SCq8tjeVkGHGG
Tz1GVUzxVDhu/efEFxdPCO2b3O+YjOZPmRgxS3iBwoC387t01N/8fNBn2gvu
D90+6J+P+vce1H5q4wP+E90hPytQfdmgg7rZTZBYNFJtHKPCW9fyjys9DIaE
vcZfff+jxmttzu7/RSKCKsvU4U6MGrcQomSv+kOEDVafYOkz1PhwXN0DJ61b
YM+efmxSBzmcas6KLhJw3p5kA2tqnD86ocr7ZhT8PWJsLJVAjRO06HrbL8WC
vqrxyPg4Nc5sKPYtewn9+43t2Nexn9R4awmVyxpvIgiO7Koa/YPO27x6X0Y1
EeZvvk0fXqXG84K03I6nJQKphE93YDcNbqHq0GojmwSfeX5Uf5OlwV07DLt2
OSTDmQW3rPpw5GesF02ep0JRrUZ0XRQNjr9VTWdsTwW2eCGf2ngavJXwOuPW
YiqMinbqV6fT4ASvz9/7FNIg2FyB8U0RDU4aGEgfrk6Dqg9bviUdNLiuCoXs
Vs1tkM+LMcoTpsVdNdIv2SbfgeK6IF/GI7T4XIvxubLiO3B07EamlxQtXnzH
hVD85Q7wi1we0lJE9TaKtK9oM4CxSNzu33lanN/Fh37WIwOGX33xunCTFsfP
ZmwUns4E09669KpgWlzXzKml1iQTutbK34gSadF7X18KdsuET6dytrZItLh0
V934em4mvGxwJj4poMWZAwt5v61mQszXvWnU7Wj+m5V3DXeygPYvVYVLN5pX
lFmrUZQFwayrvX0DtDhh+7KbV3UWeF0c5i2ZRP3y3/a+HckCi/7iB2abqF5p
t+2CUDb0b9xvaqakw6XV3ohlHM8GQ747P4/T0+G675MYxpWzQfNqiAQDG8pX
Gm9aWGSD/KRe+UtROpwUNjW7kpYNxfSq3QKSdDizh6RVWX42HD2i+C/2OB3O
n57byVycDfxOgqesMDo8j5KoXdKUDZnx7FdaVOhwgmqk4GJ7NrAXM4T8p06H
zy21pPZ8zwbGhfnGvQZ0+HCzASNxPhuI+yYn/Ezo8No3rjM6G9lAkO+nnzBH
9VFRYq9pcmDZp0Gr0oEOdz1vHe3GkQOuGa+cD7sg/4dn1RzMgV9vn5CSPND+
hpoTzw7nwPBWcod9EB2Oz6yxucnnwO6Z1hjvcDRPhjKiXSkHFHr3qBCj6ND3
9an5iHIOWL/XWEuJR/vzRednq+UAqexWSX4ymneKZESnkwOVeY32penovmzC
wXz6OTAVR8Ffl43eb+8+4TGjHMDtb8YPPkQ5jR7B0yIHrl+sOPu7CHlWVVvZ
OgfSlZc21kvo8OKNKazKLgcapWReMLxC520yjv1wzIE5HpdrXJVon8CfapVO
OcDDUCQoWofep4IvBHfNAbWVqV7592h/nyfZ7u454DF+KPHsJzSP7m/JBY8c
uNtmqWbQit6DoqR92DMHWqpzty070bwju9l5vXNg7cnAS7c+9HmcCkmm88kB
kTtczsFD6PzHv6zykC8QDQ8ljKP3Mgu9O4kceCN5IPsn8vUuu+/Ijy1ak4v+
oPoPbd9CkLu092i+XaDDLX6XU3Wi+ZQnNSg/riK7c3N0e+Wg3/W3Xvdson1K
f0lGon0u7W90naSkx4eNHJymbuQAkZJCdJmOHsenhZdX3HKgdPbUEPUeZD3C
n5cuOTA44JfGxorq9cVvHkLvwfDxlbYgBz1usffwOxX0XvKvFqmP8aDc7s0i
C3pPy/vHKkGAHie4rR0nWeVAfKLzDR0Rejy4XeVZ9ZUceBP45IjZUXqcX1iR
lG2aAxPXpkauSdPjtSrv6STQ58dqcuiOnxw9nvdg3xmnCzmAqVrqRimi/qxk
T3PtHHA8nkuXDqg+5+8XAvp+NOzh8ipXR/uWKNaaoO/T3NpFiUYdtJ9FWQMz
+r7xTCWNt+ujfcoE63yl0OdVv1t/zgzNs7kWbSmQA8LeBOmj7qjfMbIqlSIH
dK1PTf7njernds2OrmaDv55fjpo/ul9Z1NrYbDZ0HF3cbUtE5/99/4AS/f2E
D0/+zMtA9VnvKl6Xob/PL8J3n+ei/cXzeZ8+yoaBN1eNq++j+UqmRMPsbJBN
7X/f/wztt0sr7nNENvxQ/5rP3oDy1Ip2bf1sEI45nJDYjOZfZFTrPZMN1p+D
/Ha3IK+fQvfJhlEdaT3KXvR+YgVuERzZMKifuPX7DzqvlzsysSsLeFN//rRf
RPUKfBuR77LgctfpzrF/aH4B04TUiyzoN55/0ku9C69d+zQTR8qCHjN9k3fc
u/Bgs68Nt89mAUfukzM4/y4c/yszwCGTBYbDVNJvDyEH/xPX5MtCv+9f0JZI
o37nepcvS5nQZrf/RZYq8nxWqM7dTPjo1s3k4b4L/fck8cXL6QzYVSa19sd7
F85vUfz0YXsG+v/4Wz8cAlBOP6pk8CYDmrwUKq9EovkVHUajkRnQePOOg2bO
LpyQK6MxKpgBVRGmjYIfUd5JdXxeA/334c6Qb5sAA/o95O8Q4nIbrovx9Mkc
ZsAtJqltMnVvg+hrY8UUceRPX5cjjt2G3J62NcMTyK7N577Op0E8R+PNAS0G
HDefzlK5kQZOqY8CJr0Z8LxDHRsnr6fCkUS3kM0vaD6VzHiVcjI8iKSKEvNj
xGtdfvu7qscB63hkoGQQI/p90pT1ijIOgoHJ43g4I46vZ5jPvY2FS8ucV07F
M+IEvsVURclY2GstKad3D/XjBzW1WGPAF0xGfD6ivJKbQr43ErSXn/3XzL0b
D5armg60D4c3erJSXw7uxgnHn/vVC4SD6NPXwu3Cu/HaXnrfff1hQGnduHdA
EtV/m+aY1A6DV229P2aVUX1+yraZbCgIPKVO4riGnBP2+BxNMCxZXZq2fYvs
pXhp0scbvNjW2Xpqkb1pkusnvGC5PvOU+ntkitsy/wyQBb6Tjrah+XbxUUEy
nrA6dOXE3ATKPQVWDs67w5qpTbgv6x6coCeydpLBCfwYaZ9NcyDHW7nNzF+D
9TcF3aa8yPpvz9wacIQNrqkjmCjy4qtPt0rtYbPbsY0SQ24xF6FxtAaCgStf
rAOyRthqBasxBFOxqG06I398oE1HbQgUZSVuzh7IL03VQ1b0gZJ1oVE3CPkR
Zszx8TyE1iX/qQtH3gjV0KzWBEo3Wc7j0ci75do3Xp4DqlbPa/tTkZuFl9au
AYQHsacSM5CZZ+yqfE4AtdSr6pVcZIuvrUReKQgfNJqyf4AcTJnnW8EH1PGr
LH2PkQmidnKkRiz81J2TmsVk9yfm9R8Emt//2VSWI/M/VND1kgJarZsVObXI
pDD3ryIAxPUDo3vfI9vP2zLaqQDtk0rGkE/IZ+qlP8mdAzqGLXOrLvI+bBHB
jTpA3xxMIzqDvHW+4l+7ITCeIV4o4WDCCa1RepVZlqBU48Lyngf5zhPMzhn9
/lU0ae0TQFZuYZzGrKFdWlyHWhz57akK9wEbyOBtVzfCkXHTdrddDiC6wnt6
0x65DZtSPeICl9zpCKzOyJ4KPxemXCD291y1yA1k+PtEVt8VZscalHQDmPDg
y1qKnUxu8LLVQSE/EeX5PL0Vge5w5nG5lPob5LkznxtwT/A6lPvHrAbZ5eQJ
+TRPeJQX+dS9EfV7yXLQ//IExtumR7NakPu8HD4keUF7GMXh2VFU/1zepKrP
GyzMtPlSGffihL7ddppafuDP/GP3yOW9ePChM0NJ5YFwpK8UH7iKzNGnELAU
CL35wR7dtqjepW3pk2wQyJ/gGfjiimx0ds/tkiCYM9N/8iZ8L177+vSjBb1g
sHpSp55ShHIlzfkPciHA6pkQkFCC5lUqCf/SDYFazKwk+iXKpdgmaq6FAE/7
KmdI7V4cP5ecHJ4XAl2rUlNOHcjmxwUCaUNBQzWHeG4D9X/tvazXGAobdPJm
dwnMeC3Nyfq3faHQMcOzwkfFjBMMR+kH5kIh9OX0EW56Zjy4yHMG4wmDQXVi
EjMrysc7uZNdwqBc0kk8fh/qt6xLKgkLg1g2g/eMHKg+IMjm1u0wOPldYI2W
B9V7/pgwqQ6DdNeqq5uHmHF8tYE1jz4cXC7eX/cTRf1WJvuDuMNBVTEmdfUI
8uskHg7xcFiiMvmwIIXcdfrADZ1wuHB7UXr6PzS/xkRqJCEcdlcfJXRro/lN
iwEfaSLgtxb/i2hdVC8u1+CzLwJa+vfZY/rIt5ppegQjIOHf5tcHxuj8jYiu
x1gEsMq15npYIW9qcD1xj4CFhkZ9UVtU75D1cjowAjouvKYbsEfndboyDkZH
QKrrPRcVZ1Sft3h25G4EcBZ5AKsvOr/gM4P15wj4p+iw8O4m6qfuvKbZFQF9
H8we+gYi17k6/ByKgMxJ1b0jYahfXKdCYz4C/L1ONqQQUa46/YFpPQIu00h7
q0WheQnNq9FUROAT4hp6Ho/qKYZln7IRYbtkT7JVInJzIa3BASIM45TnOFJQ
P6Et8IUgEe6a/3oWeAeZu3wuX5oIob+HLGWykN17S4+fIIKlfwf7RA6ypnBR
4CkiCGdUBWrfR/cT6O49p04EGrFSGYqHyAkH+97rEGHiVcHEi0K0T456IaUB
ER52JujwPEf+Y65bakaESOtwytYSZL1zKyKWRLBf8HkZ9gL5Nw3jJVsiHGGx
5Pv1Gp0XOci96UQExjzD9pxKNL/y1ZSTGxFmJDWJF2qQKYff53gQ4XMVKNLW
o3qDTT6SNxGeasn+ed2I5u0nmCr7ESG+X/SeUxO6vy7/j3J/Ijg78hoKfETe
03/4VyARzv9jYej8jOalzcaNBhNBOpK2OvIrmtdyOTQrlAgsHOtuSu2onmju
yhVOhPkHs4fmOlD9N8cGkwgitMuO9+Z3o/PcpSbNiEQoa+iJM+pD/cIJ50Ru
ESHlwpfTjN9R/YFc3TJkj5G6peohVH/5vjNNJBEuur4sdB9F82VYmHiR5bcf
m4n8QPm90Mw1VM8Rn8vSN4n6v1eF5SCv8qS8i5tG9XVPj+9C7n0S6Xv6N8ov
WHCeROe/UQyQWJpFuQp1rizaL/OD28ijeTTv5oTschgR/I1tUy8vkee7nAtG
97s8eUmdeRX5hcCZb+j+p7zObzasoXnJqemz6H2WHaduqm+inJFOdx29X/GV
kLWWbXS/j4siPeh9HQy4fQ0oWfBgzkwvog8RBNXLVnqpWXD8Lp5O60WEgVNa
XlfoUN4l+8P4BhFSZX4sju9iwWvVW14GuBKBnodjfpYJ5XtttHFHItQzF7t6
siAnCr8bRN+HmzTqs2tsaF4Qw2E9KyL8+eM3Q8PFghNMvzKVmRKho25w4oAQ
qo+ikfXUQJ/3S2+bu4dQnlNZX3mWCOeeMI+LiKLz+vbS9uPofVKUR45JoPoN
hr3Z8kTIsyvoP3cCud9wAucnwqXLcOnLf+i8XpWuc9xEYNPr6bmghOado1IW
3UcEoiJDl9lpNK90848XHRGu73FuvaGJ6juZzl2ciQARSrrz/7RRbnil+tiP
CBhazv0SqItyi7vu098j4MJw28eoi8jLh+b+tkSAQpncu9wrqF7n2EfL5xFA
bbL5+tMNlNeSPnI4RkC1dpqCnhfKTZ3eD1tEgLey1KsuH7QPc791jFEETB+9
+mIkAFnpvwHimQho3Wp8tnIL1UcHzBzkjYCs+7H5QlnIWqVxQh/C4YrKcaWh
HFQfM373dFU4CI72dmTcRfc/deqockk4PDp4mJb1ITq/pUxhJj0cXmTU2RNK
Uf8AyX7WNhw+k5Ylvjeh/oZ7vAxbYbDpb1GRtoAc4F6meCAMzC/KftmlyYoT
rhx8d/5QCJR32iRXLyMvi/uz8foBiULoGPxDpmlZZN32BUeJ4ZaadWRzlj6e
EV/gi7jEUEdgQ/VnenUf+AJR9nxIAwMyXzojLukLhskKLs18yBZ1bNeVfWBF
l1GzXZUND+YO6TT39IL/PhdTTqShfGUJmphuAM+9m2+y7iAbnQrIQ7/vCD6q
7vpZyBqnWxK73KFZaGCk9i6y6ifuqhx3MLxJV5dZhObVl6n8J+0O7kfMg/Tq
kaUfjQwYuUFRJONG5W9U//hTXKmHC5DMu8puzCE/YhyuUnaBG7J3rx1ZQJZ0
m99kdgHFYfn+26vIhw7k8jxzhg8nLN+4U+3DCfSkb53TTjAxUeEjyoV8kkNf
2fk68J+1XUo+g/yWe0k02wEGgju9ec4hb3k9qPRwgPTKM2v31ZHtIl8HajkA
i6zQdrkOcirf77gNe6AUGqbvMUZuuUDsNreHH4RLPDxOyBcN5vaI28HjSm2V
+6nI7mVzd6eswXa18p14OvJXO5Of76xBSFZcrTwD+f2NU2b51pD1hEH7fS5y
oxPfR3NriMtoMpwqROaRqy3vtgJXn9OO4tXIucOaNW2WICcrl/hiAjl+smPk
hwVI32bXkf6JTHrNcOCDBRxZW2Eo+oW8Wdhws8gC+GvfhOfPId/TUS+7YQEM
WrhP0hpyqajlCpUFDFtpXnFl2o8T5BdN3I3MITr5qoS4PPL1/UWxkqYQvqw8
/VABmQT9dluXIMhE+KHQSeT2CcHolkvgcXCS/wCO/Mj5zz2XS3DlyfV9DBrI
+DozX7kJyDZ4r0+aIQ+o/9jSMoah+bgP+RHIGmcvRz67COPb/nkXI5Etlc9a
hl2Eqd3XvelikFt3VUQYX4Q5EY1D10jIZ/i7HlJdBIIpbYhMJvJyvcx5MwMQ
bAhUqCtGpj3sMcCrD7bJLg8H+5GLgvXD23TBMc88kDSIXDtpOfZMF5yfal9U
HkFmN50LjtUF76ajVAUTyLL4US81XYhcnzR3+ossrmAbRDwPhVYW7Bu07Ojz
mTGjj9SGmeN6EVwyyB1Xbu0eVocPBeMi2bLIWWZan4vUoYDLp5n/BHJty6sJ
X3Ww2M5hFFUi13vdFNuvDt8+ziTKqyLHpmT3nFeDN1cjc/QvIQ+39jh1qkJU
Qs2ruFBkfnpFJr4zYEupb8ISQfafs1JLKqDsObGWcguZxz8287MKbFzag2XF
Irce+qfvrwKuIqaNj9OQ8SOvTgwpg3HVcmvTY+TxG752padB5JfENMU35Llz
Pz+xA+ym//rgbSf5/EbehlYMFoRdr3r2IKdHU2nGYFBrXtoz9R25ubGfnhKD
S+3yTV+nkAmenfzLShD/Gu5nbyFHHhubWFEEj67hK0YUHDhhikR9440imC6E
HGChRub/oRscoAiiEo1J4buQ03e/5KZRhPo8tZBr+5DxVEY57v9g6Zae+X9H
kGutB+VNT8DA/XmuBXHkiohjDodOQH1dcmeRFLLCAXemOXmIX+/U4pdDFg03
fkaUB1GXSyfpcHK9tob4azm4bGjF2XkRuXhOz0FGFhqFPdtdQ8h5lvN112MQ
9vCN8UYY8qNfr4U0joHyEcLQLSIyae8TMeFjUCcV8ysnBnn1yn8He6WhWvEu
9ZdUcg66d1Wl4ZXuF3mxx+T9+3ftuSIJXt9Yq14UIbc+z/l0QBLkDY1V8OfI
zOxc7L0S8MJ07LzRC/L9YnI1LkpAse0/+4hqZN1Fj/0G4vDY/1DmSDvyXEea
vuMRcNh2FHDqJOdLJ4yljoBoaPHD1W7kYK+NnkUxKLh18sXe78jSy3KaIWKQ
n6T35dQk+b6vinpyRSHrUcD2nXXkvOwHLfMikNDRaXVBmBPtO2Z4dFoIYgPj
hNtEkAn+/ONVQhAtevbHeTHkOUW1tUQhiPB/YastiVx7pP/kSSG4KZzsoKaA
bBHqRkgSBDsPXRdMizyv4/LyeQGw5qOXrtIh1xeflxETAMvmmrmTesh5WEst
pQCY8Ui5/2dIni892v6SH/Qb93jKWpDn7W15LcgPsO+T3xEPcn+mIBsrHyhV
h54s9CLvJySu1sILivaKG4d9kYe3JplieEGusjDgUCC5PnpSi5YXjlpHBvNH
ks+bjrtGxQMcL84S2bOQ+RPUMA5umNWvTaRsJOepV5ey2WH5YcT1V+/J8+ZH
l2zYYWtd49z1D+T7sIrclGSH3fc7NzpbyNbS31u3H0QXp+0Ke8n9kj7YzD6w
SNmP6c4iB88O1Jqwgd1UHyfNPNmRT2+JsYGzUt7C60Xyflda6v6xgv/4kUKh
NXIu+DcmkxXSZfF9K9RcaL+b9abjLNDa4TidzU32FSJzNDN0i0q/u8BL9sr7
NAtmGPRfyqXjR661oQk5wQwzwsEX3Q4hB+d3r3/eC/SeqbVnpMl56HOKJCY4
vb827ddZZHxoqBfbDaUX96v854ZMOFaVwEkPSXuDpmpukO3Z4zdEB+4fpuJU
vcj1I1ZTBXRw7FRlj/5Ncv7nsuoJOigWtnJ2jiDnRnqzZrTwbKH4Tv4d8vnK
GH09NcQ/5YYjWeTzY7fukKjB2S58vDiHXF/rnn2FGiT6jaSq88nzTiUubVFB
Uf1WY89TsgdbvipTweNErbk99eR6bMl0kAKiNV+mpjSS5xtzp5dRgCMN/8kD
TWTTYCeiKEDMdyFC9DO5/sD+TDkKeGSRcUCli3z+E7eRJAIUSE2p+kyT5/sc
tK7awvK/hGWPsnKjfm0F2utrWOyx9cu5+5EJFS0DImuYV6o7z2VOshMnLUf/
YWpmVzM7ecn1dQtepv+wPzPYnWZRcq6TTLq4iinsXkt5hpHzXZyH7ZcxAVc3
g2unyTmdmZzEMsbQMcUmeoZsIf6++SXse2Z30l11smdMR4KWsNCj5aQUA7I7
qGryFrEvGq6xfo479enhG/PYy2eTmiecyG7yM/g4j+WxXmFcdCH7Pv4gfR5z
79OOdvIkn//+ZqP8PMbpeDTSIpicX7nZ7fMXs4yaCFNNI+eD58+xzWErTZdv
stbvnGcjc/wXxqev6lnfSDbxx99f05jqoJSLexPZ/kx2D6axtEVKq/bPO/ex
uMY9jckKFGokdZP9m6Jo90/M3W+Ji/U32WYmGcyTWAbNEFv9LNlfpX59m8Dq
SM173OfJXo3uvj2BMT/MpGhf2bnPR3+BCez5t9M/EykPkPflaD35A5sRj69g
4SR7l9+lmDFsX4V3aR032YzqL43GsJMqV4vceMke4LotPIZFm8jmtQmSLZ88
WjOKiRH7biVKkP1VL2BjBLMdEjFiUSE76fTz2GFsOLFmidmZbBF3esoBbDhU
+02SK9nhXnaV/djIjf7AfTfIbnF28e7HRi+u0HH6kK1D4zHbh41xSXEfDCX7
8f5Dk73YxN0cTCKNbGajgYVubCJJnOp5+k7uwFGBHPamSTqTbG6hcf9ubNKm
S1c2j+xFUQn6bmxKjMnq5GOy3wQbH+rCfpUE3FKvJvuj6LJPBzZzj1HrUy3Z
zs7FZ5GT7zBrN+zsIz7FiuxZfke3mWxh+0/PvmF//vv9xKidbPNefKYdm6u7
3GozQbbun1n/Nmy57SRXKBMP8ufqMwNfMIJT98p/LGTvDrgX/QVjoL/R9Zdt
Jw/r++8Lxoc9Tr7KRTZ1XGvGZ+zsY06m08I7Lr9t+wlLCV2iJCiSve9sldAH
LIc3ceSVEtk9X2oHm7FHFeK1LkC2eFpARjNW+ccqYOgM2bUXD+xrxsYvta9U
nydb6WnZ3ibs+PHnMwE2O/Pam0TeYUotGp/k7Mm2FiDONGKqDhOFvx3JHiaO
lDZil3J57cxcyV4UdDjdiIUyxo4o3SSb/1qCTQPWPmbftU4iuzl9rLkOc00R
rPWtJJt+JGmsCruQaulAVUM2M4tQWhUml3aPNa6O7Eed3upV2NptQZu892Rz
htmVVmIRmYIMTa1kT/13NO4tlnFP0GDfj53zloqtX2P++Zab2ZM7+z14Lvga
u3L/XsHhabLnQg1HKjDhAsF/irNkWyimWVRgzwsFc67+I3v1fbHtK6yxWHDq
2R5ecv/B1YRyrKDEMlGBmWz7oiqjciyq9J5iPSvZBAIbfzmm80IwrpOD7Lyr
dqUvsN5XgjIbAmQzJ5K+l2F/qgX91eV38tC3WqUYxxdB5nHznfl7sxifYwpL
HQsWV8kmdb99+wwz5r3V/d2K7GLVB9efYRlOv3K67XfmGX1pfYrxMb2Q+ORO
du2Y0r0iTOT8Wc1SItmteZt2j7Fz3iuSUlE7/ad7hB5j9rmFrEUxO/XBV4YL
sceze/oekHbqxZ1MCzFJUpf9nYyd/ayNTB5hcm12xOBnOzanuVGAGf7jctws
Jhtv+qlQgHkJfNb2KyOb//vV7QdYhZv0fo+Knf0u0sU/wJRY/+Xb1e/k3ITS
+9gZ/eg6nS6ydXl82fIx/c6iDZ4tsi0qio/nYYEPr699JfAhu7r8pcnDHvmK
r4ZSkY0fsCzJxTZ4ixam6MkeVjq/nYMV2D6ZfsFGtoVNRkE2trZS2KMlRnbe
UCV/Jib80aFr+yjZtd8mvmVg57PEOkolyQ5+OHErA7uPF37llCWb0GE+fwfT
iXr0fhzbyUfnW9Oxe9wPX/gb7PRvfyhNwz7P2JZKGe3UC2m7p2Er1SLFoyY7
9VfDZdIwLauCJ2pXdvYNoitPxZafPLi3z3FnH+LR+hRM49R9UlHQzjyNi+tJ
mMde6/groTv11afeJWG5I0KxrBE79Y1VCUnYYkT+LZ/onfsyBIokYTkt9wLP
pJLNv9p+KRGbv3L3+sDjnX16Zt8kYEu3aeSuPt2Z73XONgFb/eqw+eP5Tg4B
rAnYNsjEz77YyS38nOKx3fwNzylrdvJnARJx2KHh8XnRbzv3sW39Fo2Jcqq/
fdq5k6szxEZj4rpPw2R6dvrZKc5GYzK1nvuUvu/Ud/O+jsKwPFr585M79aVD
hZGYsYWor+f6jkXmnxAx0/TY02ubO/dl5XchYuatc7uCCAfJ8+L/yBAxG/x1
RiQN2YS3tpURmDu/RmXm3p3c6HZXOBY7fG27TojsYMt7ImFYjcXzCCYtsnEq
x6PB2Juv1zUHdXb6pYlLQdhL7AjLM72d+kzj1CCsiOdBlrbRTi6k1xOIZfRk
lMVa7uROJ64FYJ66xBEG3x0fPFLvh7nWqDzsu7njckc3P+y6JIXT48Adq2QK
+GGWu/1X1cN35l2uC/fFdJvd9kYl7OQvui76YEdxs1N0BTu57RS/FybynJuq
+9FObjP33RMT5OtpLniykzPUZnpinBsXDFRLdnLhp1yeGG2F2rWIyp1cIpjP
AxuRkr1D9W0nbz+i4Y4N5Pw1/9a54/xHrO5Yz57nwvk9O/Xun/vdsJZfYsXK
gzv59S0XN6zy4cGmkJ87+bvuXFesgv17rN7MjjX0nFyxsoiMCwKzO/UClidd
scdW+wdrF3fygohSF+xBe3s+aWXHoXwXXLC80yQHi7Ud6/TMO2NZxdpS0ps7
fvk8xRm7fZBxaXt7x653Tzhj/wNGAjTM
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      RowBox[{"pdf", "(", "t", ")"}], HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 7.999999836734694}, {0, 0.04}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6265692056276984`*^9, 3.6265692315528026`*^9}, 
   3.6265692759487076`*^9, {3.6265693379401426`*^9, 3.626569379799537*^9}, {
   3.6265698250958467`*^9, 3.626569998394605*^9}, 3.626570306990497*^9, 
   3.62657033737059*^9, 3.6265705974207473`*^9, {3.626571426934119*^9, 
   3.626571473130391*^9}, 3.626571573081431*^9, {3.626571617471337*^9, 
   3.6265717005119886`*^9}, 3.626571819424838*^9, {3.6265720905952253`*^9, 
   3.626572104731062*^9}, 3.626573385038973*^9, {3.626573455169038*^9, 
   3.62657350828169*^9}, 3.626573547071473*^9, {3.626573603525793*^9, 
   3.6265736156702356`*^9}, 3.6265738341460505`*^9, {3.6265738642370834`*^9, 
   3.626573878555955*^9}, {3.6265739768946776`*^9, 3.6265740016766477`*^9}, {
   3.626574158128026*^9, 3.626574197336891*^9}, {3.626574246975847*^9, 
   3.626574259741406*^9}, {3.626574300231527*^9, 3.6265743545184183`*^9}, 
   3.6265744432602153`*^9, 3.626575639619162*^9, 3.6265756706223803`*^9, {
   3.626575701422558*^9, 3.626575866988765*^9}, {3.626575910292448*^9, 
   3.6265759190292015`*^9}, 3.626576040897645*^9, {3.6266201561183777`*^9, 
   3.6266201833688593`*^9}, {3.626624288691716*^9, 3.6266242998229537`*^9}, {
   3.6266243778186436`*^9, 3.6266243857172327`*^9}, {3.6266244663104453`*^9, 
   3.6266244741090145`*^9}, 3.6266245449872723`*^9, {3.626624715215517*^9, 
   3.6266248046755133`*^9}, {3.6266248616039653`*^9, 3.62662486808327*^9}, {
   3.6266249071691313`*^9, 3.6266249225852327`*^9}, {3.626625236250332*^9, 
   3.6266252630307198`*^9}, {3.6266252975586653`*^9, 3.6266253074956636`*^9}, 
   3.627034156748095*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
d1KzM4OpiZnv/+//AQgoVo4=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      RowBox[{"pdf", "(", "t", ")"}], HoldForm], TraditionalForm]},
  AxesOrigin->{2.4000000000000004`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{2.329179634130487, 3.670820365869513}, {0, 0.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6265692056276984`*^9, 3.6265692315528026`*^9}, 
   3.6265692759487076`*^9, {3.6265693379401426`*^9, 3.626569379799537*^9}, {
   3.6265698250958467`*^9, 3.626569998394605*^9}, 3.626570306990497*^9, 
   3.62657033737059*^9, 3.6265705974207473`*^9, {3.626571426934119*^9, 
   3.626571473130391*^9}, 3.626571573081431*^9, {3.626571617471337*^9, 
   3.6265717005119886`*^9}, 3.626571819424838*^9, {3.6265720905952253`*^9, 
   3.626572104731062*^9}, 3.626573385038973*^9, {3.626573455169038*^9, 
   3.62657350828169*^9}, 3.626573547071473*^9, {3.626573603525793*^9, 
   3.6265736156702356`*^9}, 3.6265738341460505`*^9, {3.6265738642370834`*^9, 
   3.626573878555955*^9}, {3.6265739768946776`*^9, 3.6265740016766477`*^9}, {
   3.626574158128026*^9, 3.626574197336891*^9}, {3.626574246975847*^9, 
   3.626574259741406*^9}, {3.626574300231527*^9, 3.6265743545184183`*^9}, 
   3.6265744432602153`*^9, 3.626575639619162*^9, 3.6265756706223803`*^9, {
   3.626575701422558*^9, 3.626575866988765*^9}, {3.626575910292448*^9, 
   3.6265759190292015`*^9}, 3.626576040897645*^9, {3.6266201561183777`*^9, 
   3.6266201833688593`*^9}, {3.626624288691716*^9, 3.6266242998229537`*^9}, {
   3.6266243778186436`*^9, 3.6266243857172327`*^9}, {3.6266244663104453`*^9, 
   3.6266244741090145`*^9}, 3.6266245449872723`*^9, {3.626624715215517*^9, 
   3.6266248046755133`*^9}, {3.6266248616039653`*^9, 3.62662486808327*^9}, {
   3.6266249071691313`*^9, 3.6266249225852327`*^9}, {3.626625236250332*^9, 
   3.6266252630307198`*^9}, {3.6266252975586653`*^9, 3.6266253074956636`*^9}, 
   3.6270341569475946`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
5Ch5Qrf+ToluVw5+sVfbqPzZA/4PYHWjgg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      RowBox[{"pdf", "(", "t", ")"}], HoldForm], TraditionalForm]},
  AxesOrigin->{2.4000000000000004`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{2.329179634130487, 3.670820365869513}, {0, 0.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6265692056276984`*^9, 3.6265692315528026`*^9}, 
   3.6265692759487076`*^9, {3.6265693379401426`*^9, 3.626569379799537*^9}, {
   3.6265698250958467`*^9, 3.626569998394605*^9}, 3.626570306990497*^9, 
   3.62657033737059*^9, 3.6265705974207473`*^9, {3.626571426934119*^9, 
   3.626571473130391*^9}, 3.626571573081431*^9, {3.626571617471337*^9, 
   3.6265717005119886`*^9}, 3.626571819424838*^9, {3.6265720905952253`*^9, 
   3.626572104731062*^9}, 3.626573385038973*^9, {3.626573455169038*^9, 
   3.62657350828169*^9}, 3.626573547071473*^9, {3.626573603525793*^9, 
   3.6265736156702356`*^9}, 3.6265738341460505`*^9, {3.6265738642370834`*^9, 
   3.626573878555955*^9}, {3.6265739768946776`*^9, 3.6265740016766477`*^9}, {
   3.626574158128026*^9, 3.626574197336891*^9}, {3.626574246975847*^9, 
   3.626574259741406*^9}, {3.626574300231527*^9, 3.6265743545184183`*^9}, 
   3.6265744432602153`*^9, 3.626575639619162*^9, 3.6265756706223803`*^9, {
   3.626575701422558*^9, 3.626575866988765*^9}, {3.626575910292448*^9, 
   3.6265759190292015`*^9}, 3.626576040897645*^9, {3.6266201561183777`*^9, 
   3.6266201833688593`*^9}, {3.626624288691716*^9, 3.6266242998229537`*^9}, {
   3.6266243778186436`*^9, 3.6266243857172327`*^9}, {3.6266244663104453`*^9, 
   3.6266244741090145`*^9}, 3.6266245449872723`*^9, {3.626624715215517*^9, 
   3.6266248046755133`*^9}, {3.6266248616039653`*^9, 3.62662486808327*^9}, {
   3.6266249071691313`*^9, 3.6266249225852327`*^9}, {3.626625236250332*^9, 
   3.6266252630307198`*^9}, {3.6266252975586653`*^9, 3.6266253074956636`*^9}, 
   3.627034157087223*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1151, 743},
WindowMargins->{{-1471, Automatic}, {45, Automatic}},
DockedCells->Cell[
  BoxData[
   GridBox[{{
      GraphicsBox[
       TagBox[
        RasterBox[CompressedData["
1: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
LM25+gC4Gk0zbbIZnXq94rjZVYVtbpjOg1jJ9Y4OY9fUvopkc6SfIg+kvYNU
V6kn4pRWUnuyuGIRbRC5689LMuScMI8H24HoIPmBM0qHq4vw5CA8JCP6j5dN
aZmbNeeCepgO8R64Ck8pxoy2ogVrAGmeWxo0IKTl04yrytqmk+bxGMRDJnH3
bn+JYtFYWZyHwdVBAdnPOmlxlfPtRc4kA5I9VV34uq64sKw2M78Ko4NfedSx
AXa07p8+/XuQUuzfwRX1RiDLQbMOeF8vJv2w7lzIzxscqGZMArmCBp+62XnF
6UD74GymCj+DPat+3/Frt+HKK7qAuUZIdzou2CSBMMhoSRJ+PoW4eoBPe3vb
A+NqiKpgwkYnts8o9MyAmpi4yfl1HTFniqEdHYtPFlseoylek3MrFP5wJfvm
Mx8kw+ojx5XkUnQ57t355iY0I7Rr+PV1VHzNOuCjudczPf9mSZqC0rqZ+7yI
O+j9O1ffhqvgxBswDa7dWjR8Lze6N4vkfSpxVVzZsPps8MKjfktP+N+7LT7m
D2qanl/5MPKKvIUyf835oK555uOzyn7e6Pg7TQa44Igfq8RxwTaJJKt8FCFg
j9ZP5ucNjtKk/ft50X/bkQweyjvcWYoY8IQzVgkrTgV+vNCCbqw8CAu6k7f3
ocnYmTUtdXRZSwvvPrzH6ePAVXZRtQzN6wJ6ee/WV8G4j7xxWHLxQ+JKTluM
Dv9imRVm+jmbxHi6bXo1sxwqj03Dyw4SL5HMgirokeFqT9G+c+/pRn9Qr3Xv
mPwZ291A1MOSb5RWNXy13JYVPIIEG6Eu7DXNaDh173mwtZHbcZVG1hlem240
fYtLZ2kGAq3mljbdA969FYwfUmQ92XUGQGjUg65f3f4M1LZ6earhO3PNmCEQ
m1n2zSrb9o52m4DsQSoC6JSYDOLBu/S4P/jME8cVYVbUi2yAoiSWLf5aGakz
pSqoqm3yjyvgjNX7fpVdOg2f36oX3vuWXBP33UV3Wb+iizy4rPY+T+bmxKRW
VV3ztK2ufeQfqoseE67ev6/1q0eEK1AmTLTT1MkhKq0Ez/DKVKOswqqknIpX
pxlP3OTEiPEvvzkNkbhMiB5sjB4KV7Ra1mBS6cy4D02VA5tihIbIjGY2xsc5
NBfj6x6ZC/V93iaRZfHV3u8lcXNlYuSh+ZUUV7LaJpBaIKUsty2DVmFZ3ber
bKFQxmg/4Bbq84ErSsLFzH2U+ZsVltcdN4+bf9gXAKupb2beTZRiJRJ/e3Uh
K9rSR8F4iOqDrDA/MK5ktUUyM0UwH05bJOiTglNBb8wy7TWd7CwfEMaUV99U
SexT19i62zgSQzxYVQBRJjNTUgbiUeFqNHUbALR+/1uSVYxBKy2v8uNFlgMf
tKb2c4ArlstIlmQ1Fw5WEQxVE0Bktbbe7lANYfXb32F9aS08qOlNl8KMXNMO
i+ImbnTsyaM+ElzhUYepC6Hs6mgmpTZqw0Kcqu7yeHuOGWeywdtzTJm8tQ/K
OWeduOiYP/merjaM3+jw0zoHlgCEOd/eJ66EFFdVN3HVxU8GP/eW5/5JV/6l
wAbvfeNBy7VjIizqiiuDyD4PhKtBynzHkM5956Lq9+f3yI3qdlyRfWfR/eJq
DK0lN0pL+P1qux/X2KMHOJMMMNdWng48b5vkGU3c+fZwo6A7OFMM359nPvsv
b7Zwzfyr0dWv65r25GkfHlek7J0Sf+Z+4tEKKfS6tgmka219C1U99WvOBXMm
6eMVzH2vDVMTciZcUdrhvv5CyHGzqyWVDayL/OOK5Le6PIDdwXAlXbWIorxd
Ruvmg43SEvVV4J2T+Cq3M7XoF1fwuo7pkHv6zHSHq67VskgRnweVV85hEl0D
6/iTxVbDey6vUiS4SsmteHOWeJTG/eEKQ6C03c3/alEnqmt2GUXCKp+4yZEz
7jLmu01g9ocLLF6earSfF1NSScz5GxUNi47649xL1KIfu85+8H16vD8wrgap
8BT/cGNdTaqL/mIA8DD3mLLqxv9bbAVlB5HbdwZ3s97NStzhKcU7jSJZVSDP
qDxSZeM+XRNhH8GikS5BX71WPpr4btHhkzwb6XlcWeCR0SmyyFO5wBrVEOKR
7kv59lfkrqSZhNlF9vGiXpt+37giEXDqQv+rBeyZK2oaiV3Tg5gXwhs1RdIy
r1mF1W/NMe/qn98TSENUMh9pzLUj4rjknHLpcCw5HtBP0XgYLUY2br0D8zYB
3fp+jR0pUT1Jn0Wp/G+57TDV+6uz88B6ECICKjszvwoi6JMlVpwJ+gAYnoFt
vitudx2kTIpkQa4WV9azkKUT5ld7K3CJ278Kv7ah2SUsd8D9F9QYri74fKl1
TZ3EST6/tPbdueYjupb0Ir6OxLEKELIPzpEAggLeISRnhDqJD+05tEDYDtBd
M3YFfZeU3vefO5EtF8RlSuAB8kByp/cgV94omjIls1M4l9c0Qn/1RNB1xRVE
ZWhSUUFZ3Ss02wxmnKEz2bKBEICRjr4CUPsocpfT6cP8ZBYd9eOM05v0G1ml
940rIHUSte6PQjwgrmZKYtO09nlCCydml+vROukWflnGbulNzS0fLbTEsAI2
6Ac8PxRiY3MrhCp0IkzaE7T2xLrzIf17njeVBHwR3w+YBpr7vKSks7WtfeoW
Z8CVZnPt8l7aJP+h7EyRd2x+V4UIaI3WptSOluq+1x11xIAr5C1z7+lol3DI
4fcr9LRNBijzvvzVmmX1ZB/NvZ69phuRCNw7GSah2ZDhJIMopOW3q8huvuQV
2tuVdrgRDxad+zB5pPFu266Eg0GB5Qo90mvrm+0Cs5tbWt+YbQaLr78Sb+Im
Z3TQMbOrAbRsynmbBMzZ8urG8RseJFXUQ65fvTLN6IpTCusrqOmdhpJ8Vpfs
ktH/Xy235rmR/M8izwxWlnHrlXAj11SmlSB5mDvfP6pCOSqmBirxXp1m9NZs
s4CEW1Ie+V8txJeAKzoHI94ZNE387YeoEc92qQMwg1ZoUvGXy22AT2KW3uHT
LktLB+Je4P/4/y9hrHRMmeT72z4JjKWXvPGAGbx7yxzIzEFKvNfIjYRCT6lS
pnwgueSjBZa9SEAZj0Xfd30AMiWpXQa9YBuY3VWbQ3oQu3uaEcQOCW3rweLS
SA2SgDSULtqfMI9nWbjP2yTZBGZ10MpNmPu4JmRCB41U3Xgx1CdWorJhp4B3
/ZvrDKzh9aXhdcwJOTaz1C+uMCK1GJ2jsccTYoql94eNFtXpnyb2zpSjQUz/
uM8i1+ks8dM6+/mHfc/aJJZVN3Tc8QFj0XNMXnYiYMpmF2BMphNaLFQK1gH6
E09y83iSHDj6hzX278wxG93FSITWwBCMW+cw5y+fwyYxCdnld96rg+YxOGlx
df5hP9jgb+qa3tXZFbrvmxW22vu9DpvEZnTZG5V+oA0x3TZdCgWp/mCBBaOI
uNS7c8wVtrquPhtk4JxaUnWXly2rajhvkzjvsO+Pax1ke2LhapNSMnhTj87i
OBGpJcxZDiK0ubV1+lZXUNbk3Aq3yDy205pNExk1NLVO3OR0v4z9keBKjmyX
82cd9HYIzvWOyd/PjxmjK4ZU6TODi3cZoMQfqSn6YL4Fq31QWUsAdqOiHmM3
WJlpwH+SVNS+g82i75zqHVMQnlICreQWcd0tIo8114jraP5x+FOxb1yhXXDO
2HWOzMxk9Q2J2yTUmSJvwkani3bJ8VkV5SRGjMz9ovJ6iE2YZiM6jWjwmQ8X
mgs80j2jC8KSbgQmFLlHSm5Bbyr5ITC+MDzlhldMgaV/1tfLbe60alkc/UFh
jHtUflhScWBCoVuk5HRpg+QJTybxbrATZ+73uhlHv9nFIeQ6zLew5Bug+tJ3
lN4d0xZ3R29ctEsco2sq0xPDh5KWjxZasASkLLQ/JOnG+/PNWYltSL++ityX
pxl9uNDipHk8etLcJxOAH3w/XPQR4mq0Nkl0M5CkFeKDjcMGBwPU3OMBZReU
UOQdXXBIGPsp3cc8LI7ziSk087k2basrK2bdE0tQjubAh7wCPkl6FlV+942k
5qbeaOKuy/jSK6CL+tHKqp8tsZqw0XHyb06QV6A9ALnszJs74ATJJJJdQNO5
3OuOOIZEK3ff7aQar7qw+4vACiO3AKpJnEUn0SJKHw+gKuzuvoNpah3ysszN
rMfjjnup7/G0Ccr2iyv6SxSL8fp2lS0kuW9sAWbKZfuUqZudQQ8wgoNVhQOU
uDiALDA+UEK/h5VXtFIkq0zNMmYfFcfdLvAbWxYd8wddJPmIlLhsCtyHcaHN
JABZ85TtUsL79kaLMUkCYbrpajm6TMESiA1hQ6N+F5tdllyKVribiQsKWYHX
224ny9o9jVnZzvpQd29akgMkcYtSYNNvqP0l6ubW5K8yM+mJ9yVMaMo7GFNA
JmfSlW164W235jnBr5svhw2gGc5lO62zB3PEeoRxqQAVJBXV2iQRx7j1DlDc
rHpXU0vr+A0Og+gayBPMyi4dmn/tdk/qTe/1VCQCnadBRwq2/GGTuCm/u/y8
wRGMC7/CviYZyVQetm7OI/ST6a/I49KEz1v1wiGdoBlJ9cDJhqcsiAQ7ZRkP
kvN0dvV/qpGEEjN4Fv7EPeAP/UjOLwb9lbgskf5pmjnnL2HM7akA7r89KlzJ
kQyQXGYUK2137z+D+7queLSOuI8ClyUw4bql4UtKpB9v5vAXrfsmpisGYrIC
T9PfjVvvSHdpxW/MMgWWFhwh5dr17JNI/bgnHpcqqQMu7qfIO21FAA/RyvlZ
74g4bu25YM4E/Qs2ZNfmoDD25amG/Wbw+lKPGkaxiPh6uBQTT60AvDkuj7lC
dw+eRNLDMJcwRiTN+3QjnhvRLH8YRHB+vrKPF736TBB+ELiTLzdfDu8rz2Xy
6gnGpTK3dgCm1zSjX35zAverqm36eKElmNUFu8S355pX1zeBun+00PK9eeZ7
udEHBLGfL7MhGvzhMgDc3nv3PuBfl5Cdm5UmUk5+H5t6PTnsvnbrKGP/fo09
JvvWK+Gg/bCI29vbrxfXjlAXOobkbLgQAuu4uaWtqq7p86XWvacTh7qHyZz/
0OsMJoNUBBM3Oa44HfTL706cSfrMPQb/7zCIMPXJZJnNzlolzNjuVtCZACot
r/KjhRbEG/l+Oocm/qVQZI7xOiJJVlKW1arTy4iYS6RJTDbqfSSWLj7IdR5w
O4fXNrnlLGaI6Ygl20Pad+H8zFLr0hWSW7DdQFk6mri7rPZNXMlpi0Z3rnvI
SR9PekH2OtoSj6nbICRH8++xh6Rm2n3MyiGq/O/W2LP8UR005BxDZuFLKJbW
Xk/vmPzlpwJNfciOwG80SR0Ga9XZ4O9X2cNyvMtO0+PHFWxAtT0e0oK5+k6p
SjvcYVYExhduvRLmf7VwFw2qjckoYXsoBs6pLuHEDcnQJfW+ImrH0GRQbMFH
rhNFbCV5sDJftpO2keUd5VvaSA0RaB6GcpiaEFNgkMotf8XpbD2fXFxZMKjr
uexPOqTJUK8AnIv3Jbm26GMPJW4ANzNP4iL4hux4aovfmmMGXS+JwtNmIe0m
7OElG0yqApbcfkxXoU0X2QZ1FqiSQguns/TO7MEGzCBrmMwhqieSDdIJ8GDd
buabae6bxRZ/2G7C6rNB0Wkly08FXSuoKq9unLrZxdJf4vFbXNnw80bHIQ9U
UfRhcEUS9KkIaKBxBxg7845m6fjw65yDvnklNeM3OOTQXFg1Dc2rzwZzJht8
stiyoaklv7TuzdmmPXclQn9uuRzuHHZ9Pz+avCmd7yM0yAaNW0Seyk73gTSU
HnB1DM11j8z3ii7wjCb/LzkegD8NUxMcFceSL6MKnEKvO4bQY2IKhB4Zb+qa
wqBQ3uGO751Dcz3JiQVe0fk2gdkfL7IcSXeZx29wdAy97hSaK/bOfG+e2Qia
AvSQKBbfTNjoRFIhzSQFy75dbWfkkpZdVFNT3xSYcGPhEf/BdGkFCgXGOw6+
aJeEx+6jYKx7wBu3swvK+XSp9YhOhGD0wRPwvYVf1ie4dacjDa688Kg/TncJ
y/WOKcBZe4yj358nEfj/CC28++fLrJtaWgtK60ZpCl+TN97Di2IuMVFppb/8
7lxa2QABFZVW0t4u8eVLyqlwpjgU+2Qwa+vfxBVUM3hUVW1jaVUDZvG7cy0M
nNMamlvLa5qmbnGZstmlpbX1fytsP1tqvf5C6E9r7fsqkk3YH1bbNzW35pbU
wgbpuesj5MCvp4gjB4bsgwUkuQHkz5fLbdjM+naVLTr/dR0x8xsEbjH1Kmqa
wBa2G0T0VTTG+GKwQPwqO2PoGppacUBMetlbs0xfnWa4ujMTaUUNORGHXSus
/nSpFd3v5qvT1R72gX7vJU/crZlTk/Y+zwGKPCDny19t8qlXGAbII0qyE6e5
z3OgMpdkXaZ51LMKawbM4H653LqcVsI9KIqBdCK8mhaaf3++eZUkeXLH8pOB
nUW9RX0VjI92xt6WVEp0WXBiEeTwqB4sjeIVPltihfe9UV7/7jzz3orG6Mwp
v7uAU7012xRTElj6ZInV/CN+EGJVdc2nLRJGagrxTWtbe3JOOVmAvX+P+ofB
1XA1wRd0ImQVVY/QFLIKg1+vsMGXfRS5P62zRz/MP+z36lQjkMBByrzX5I1+
WGPHKqfDcqQqo6f3IsWbZpsy0bfoqD/MhD6KxhtoZi2rgCyoVCgOyCu29629
33OoGv8NXZLTBv+zTYG355i9Pcf00yVW7CIz93tBe74715wJkGUnSFbksOQb
hL3omLwxS4zbjdExlSMEko/O7yDVk6urSVnq2jcg4hR5HlHEA0djt8cAGLkK
xixk2CemADKZM+HKOevExubWC7ZJ/WcYD1Liqe4iyIwkpUNEzLXgimNKX1Kv
TTJkeIblpwm2WQFK5/DrA5Qk6XyJowvdJjZ2TYPsVdrpzjJ4AO0DlP854J3u
APLNfUnuAt+4QgCmt7zxQGVimMNC364fjmmOqYorf70SQsCqvxLUPQ92VnNL
a2ZhFXqjhyk6HxWuSMCClklidgXkJ94R/cnECMuD+sECPFjbQWEMxNRw+s0+
bhTb93SPzGN1vnp+LxqjxGWZkM19r8FeHqDCY2Jhzl8+gChw9XonrmYd9MGv
784zg86SUG7GoFT4b+riGDJwin8QRybme0lxRZKch6cUA07vzDF9f575W7PN
KEMmqz0qOwkqrAOuXbQjD7DxYihnov6tuOIy10pgDyqVMagPF1h8vMhKjqa7
YSVpgCgD5043ITWBxEOPPiGkoid9nQVH/K4XQyq3fElyY5IFGYor4kB1ziqJ
8/UFDHRZNZFa8w779e9Rvl8xRuTjRRZsRkOkr78QAi5Bt+O5fI803G4MOCSp
lUNcfDFYnF8MmAD3jS0YpMJ7gJJMD8nb8cqgPR3UNwA2xbtzzAcokcqJI2kB
spziWhAtKHT0sxP17oZ+2WMcBRjQep3UQOvhM1NOO20bqYkGtQtBBMkDUZlH
9SkpeUZxlUnjdJpa2hqbWiEu0KZvcR3U6ZY2Ul343lzzHCoQGCWTvIUC91cq
r9ra2xua2YltoFiD6XYGxRVBBRjO18ttMIuhItH/LvSNgCuouaEqhEGxcIMO
GkUF+QAs0aA2giu1XZJ9kw6W1nitfR90S2dJdFwNhAHfp+dVvjbNSOCRTk2z
EIj9MToiqbxKyCo7a5kAodpBnL0bPllkNUKjBzY1LAVdMUQQ7nLC/Crz3TVy
SaXptXlRacXhySXgyZh3mK0QzpgOWy6HMZG48Ijfg5UWfUhcyVAnNL3OXP3l
1Q22QdmLjvoBNtBNAfFFGQXV4FS/XQph2DtlGf/732G6f3qNkBQm6+lEIJ7P
M0XDNSTO3himxceIhDlvk0QCGWiqqNd1xdcorgLjC6z8s+yCsu2Dc35c4zC0
cx3mnrgKYIi1DsjCKziE5BwVx2HmytGVH1Uqr3xioeMMLag9tfCon5nPNSmu
gJBXphoB4QcEMVB20jTgu7mRuItUD4IPR6aS5zf1uYbvSVpU6jUNgclSCek5
JPebbgw62kHCxgtwa7kuepB92tvbI1KK1Xa5D1LpaYILGdogCTdfDrtomwgC
SaW69wgNETQ7jBGMEcTXytNBrhF51fUSCnpYHEsqRN8/Kh4eV7TALkl+OP+w
L4w1qdPdGcuElyYb6DulgPtBWG26FNJx62fTxRBJ7use4ooyDWiuXYak//nu
aXa0bsW0LS6DaKArxZVpNtWDk3935ozX6zXdCA26ZgxdZwA3JriaY3ZXXC07
TnAVEF/ImWII1tFL3gg6gg46ZroEV1AKr5K1X5I2KjKtmEVIgZAPoHGvC476
weCFZMCEgiFpRvlMel4V8X1S5DI9GBhfOG69IxMFmF+v0TB/2ZnEnSacki5Y
OpW1jfXU8RhM+/vVdkNZ4QyKKwAAtOebFbayNEquh71HQtGVuEdMb/cz0f7T
62tq+OwyioSQZPVx2PS3CsjGA/dX4tJVlCfgJ8OgJUvjoV6aYvjJYsvjpnGk
mEtLK75cfY7oaJUd7tDvxi6pEOMCj4zjNF96dHrpULX7iCthbZiK4JuVtnWN
zbD4WtvaoklmLQGzVhiuGL9afNQfcgnmw1e/2ny0wIItJN4prwbNuF1ewZSD
cvl8ifWXy2xgm0MAEi3WqQchr6gTl7FzKNGADdQBVQPkeQZJMswqtpy2Tnhp
igHYF8tRFp5UDB41gOCKIDPuWlmv6cZ7jAlZqm1ohuoErRpMUpw5tbS2l1TV
2wRmOYflQmZm0gDJHcSY5Ur51WWHZAhMII0Md493K1hGVuhodBqeyjogO/5a
GewmXHYFNbEBoe9WkXSdNfXN+7jR4KWcKQawsx5mB+pR7TtD8YFfJWRVMCf/
awU1eP1pW106qAfya9ON8JyQtOhwEklBDNgK6s/WI//2m1NPi3g+S4O+dxpF
StNgjoQ9qCsulpjh7aQKEq21xHdPJ+uTdNIBV+/PNS+jzr2ae4j+Yuf2ledK
1xlwVit1F8GL/EDEBXFYYusMESklTL8r7XC7Oev3ew0g9dC5GztlcnBiUWRa
CVNYCyg/AXjYOgPQQvPL8QPooh9+fX+exavTjfSdCJE4aRHPmaQP8ciZZLD8
JBnxlNwK6Mpe8sZHqbQRemb2ocnhpTZgT7qO1BhdYAGKAnILq+plmqUTTwXz
nPmffL7UGpyKrcDUNbREpJZo7fN6MPfjR4sruuBgw8R7XGYZ3yN94iZnEoyz
0BI2rEfUdSa0ifGiI/amPvl/2yf1e4AFN2r1a+71gs61Dcr5kvgAC9i0kiHv
Ioa15Ria6xqey/x+PaPydxhEDlaVONOOovVEjFzTnEKvj19/k3cNVuaTddGw
XJzL/I1hsUJuQGqx6BscDMMfqoQVF4aZcM4mAc+A4ydudARpJ9EW6oI154K9
Y/JhSmQX1Vj4ZamAAimTdVFc4ef1jrjpBdtEORp9PHadPVicV0wBjFkA6aJd
kkNI7k/rHNjiNnQ3DEmrgCy74GwY/qDTC4/6g/lsvBRGfNhASu/HQJOl6wx2
QSR4xMQrg5QmVCHr+bCFk3PK8bRM18/Y4WbilZlEowtzbtS8NcvsfgNgHzmu
MC6TN1PWkVpM6hYpcIfQkosYOFq1uemD+RaQup8ttWYh4YnZ5ZhBGLIH2A4e
o2MK9k72a0jnmNxM6CHZxyE+ul0bseW7REURh3y6/8K2Y9iuPd0kEt52Igma
o38iNjjdWRjGNjTplp/kGFW+rKak9AnzawKERpEiEaKBZBWIL9lv0hHLkM0U
mqdXW0wKc0BqqRCnYjk6HcivqiQWgK2YjaYlzMhGj6qQMHMa4ofTSY/d/26d
HO0W8Ae2P4sp885cs740ggy/WvtnsYVEvA4sd7wpjFlIA1Zx78niCm/97lyz
GxX10B3yf7iCA/SZQfyNQZtZxXCl7W6Y5knZpM4LrPX351sQ9d1NbZF/6CXa
ZKQux7d+L0dLOna6+NJ2294u25XWunMTWeoVfPNcttzN9M5Nj2Jt6fHEE1hK
QthWtSwJ6qeOxJ0VAOVuub5kJ1pyeuf2981H0r75Ll3cmCU76XI3cwfdH67G
EInE+2q5DXO7ghbuq8hj5Grz36EsWwtsUs5kAyjudrKgUY6JIKP54NnVHhW/
6jeDx+KCoQ0v2yetOhMEowyTQmm7O6NYsw+ScLCSyoYVpwNHUSH84C7B94y9
vY1y9PAuct1zle4c1G+9113OfXjfsAcD0m2dQH0pSU2x13XE266E1zeRDdzx
GxzYKtm3q2xhQClsdV17PhhclKVwWXkmCCyFTIoH9Y57VLjCJIWUPmOV0Nyl
yKN/XOGPax0KSmvjs8pUdrtLvweBGUWdSUbf6W1y/z3/Twf0IOrnH0b27qCi
WJIuwYlvvde9XkpOcm6PX/Om24y4J1Y/9ZaUBneQJTJSY3SuWTwtqM3svmlb
XWHjRKcXA2AsTZ/0T7uNogZRDvAweHhk+ZBpeBTMoh/W2G24GHrOJjGJVjeD
aXyOZvlQ+MNN8Q/XQ6JY6EpgjxS0UiflwkkhdRIhwu/Se/fuZOI0AhOgLy09
yULax3RZHhxD10gHKfH7KXD7K3Jh0EmdasCUSE1tGik8plPjDKI89i4woJfF
Q+KvI0k9U+JWzX6VxNFL80qp8okfpgKJwiNmKXUPo1H/hIETzxwVwQh1gZSG
kUAtyqzkpPGzM8VDVIil2VfRmMUssDB/Oeoz2cWxh9fp/CMc0/2KqJwO234i
z9OfhmvhdrCkOmiimD3GUePWObAkOTsNI60CyOoubMBTFvErTwd9vdymvyKP
eek8TBXCR1uPXq4zieUbs0xZufljplcn0YVEfccUzv8uMGM8NrMM44s+1P7T
W+iRActr2YkAajP+c/jzACX+Rwst5v7lA/QuPh7wzQrbzuU7BiriBIWx1trn
ueFCyLKTgd+tthuoxKO+f6QUMjjGjO1u362yG0WqYpm8oWs6bYuL/FbXt2ff
HrbMVvi/X2OvuN3ty2XWo7QI+/3fCpzujslOHQWBUuJGNXGTE/T++gshmns9
QbyJhU4cAomzAR4PhFNhm9uXv9qMIHkDcEfx1C0uMHOgldjAjaQcfsJGp9Vn
g6CMpm91oWWCicR7c7YZflXYRq4AVUXaNjcM1tcrbO4RjoonB5C260d4ReeL
vTJVd3n0kjd6e64ZeHtjc+usA96c7y65ReZ1dLR/vsxG7E3c+fyuFuCm4O0S
Z8uH9p1+tLhisw/24Eka2eERlQ82+PJUo7jMsvzSOp47UehNLW0YWc4kg79M
YjokaVpIppRPl1gP6z4dFqvrAcsFWCoou1lIqLahZT8/mrg10n4epir4eJEl
Y6edBzQfFsXB8pKlxVZOmpMHE9Hqk7B3qAMJqZHx01r7oSq3mD+yBMM8VnHg
gCCGM+HK1yts2Q7gXm4M4ET8pnTEfMpSpJ/ojFLAbCDN9oyJw3aZO2iRXxmC
TFIZCo8EnvnhAlJ6aRQ1ivnUsVz6uWSXNEwdBqCALVd2fm7G+l1xTO6usN1o
Ig9JLYm29vbG5jbmTrn1CqkMvuR4gPR06DuX8FzOOD28JjPSN10K7cPS/D4K
n+1HLq9G05xRrLZXdlENAIZBkeZcQn+q7XbnTNBnOzuukXlvzRLPP0xkMqY8
JPA94Er2nbe6sPz2R0zjIAY3XAxhFepxLqkmSXwy+SzLR0RK8ZTNLruptyo+
sw/4MNV5igLexIviSlXw2WKrpmZywbGkWPYtuGJxdja0Xgx0R6+phiFJZKtF
6JlJvEa1hANn8BhsMgqqZh/0mbrZxZx69uKt36Pp+PBIhi4pHZ0ZKZcc98cU
w/Spb2opq278aAEpo4y+OkLrumLqKe1wn3fIt5EuLOOCfRWMP5hvvpcbtcMw
0pRuskDgYBL9KYhV3+MxvPv0WYAHSyAjv9Xl/QXmofSx5x8hlVJ/PRWAmcj6
JDzlxj5+1EXbxOIKslA864BXz6v1/cu4ksx0kmXOxMjlljmIT1R6yccLLaCn
WNVXKEqZmSawbX/5nSjKjRdDabmcbhELYcUKoFj5Zb00xQg44Uw02E3rT8Vk
lNJtSt6Pa+3b2toxVeW3uXJ+0WeFhADmIyax6G2pvDJyScVUfWWK4Zu6pvWN
LTi+O1wxefX75bBDVLoGJxaN0iAWCuTJV8ttIetwrspON84vBrg+sJR6naR9
JlXp6f6LPk22YxuU3dTcioeEroc4xcjikYArCEwI2PDOTC+kyMjYywuP+Bk6
p6nu9mAKHYY2RM3MfWS5PiqthFWoJA7M3XMGHPOXCcEqBOxLkw0/mG/B0tCZ
+VzrNd34+9V2zMVL+mlpbTtmFjeUyPxHA4DHgitKPEaSZUbelN+dIUnWnQ/B
KGOAIG854/XWddbQAUhenmII2XWGhlqASAzu3pWa7YglZhG5t+5cMNuxhbqB
lICob2xuAZN5darhvEM+HTTZ2nvzzNnaOGjMu/PM35ljxvTgCYor2BRnrRKg
bnhuaa1t7c0trWPv0INdcQVLCvhJya34cKEFaPMYqpHn/EWi7QpLa9+abTaC
pkqADGQ7I2LvTDB5ogedUinMwsV0Rsw66D1GV8z0IJFXakKICB5VgnUNzTDz
V5wK/HChJeYLqXNHSJqIpewA2Nj06UneWjz2/MPk2TZdDOWMvwIZHpQgqdyk
sdcDcy3nRvUF20TlnW6goLjj2HX2kMCgl2Nmih9VdOcjxhUtFUqTkxj3kedi
FpM2SR//g04obXfDXGNin+l0p9CcteeCG5pag+ILYTrdI+sO2eSaJ5l3EOn9
qMaErfTTOgfm1PTTWgegdM1ZkkQ6La8S9JilxYBMYNWxiYOcggRXt30gdu6N
K+C2g3IkUk+NOuNBZS+ldOVaYTXz0pGjDnjM89A2MBv3ksqrzZfDQMs76IIk
QF5V11RM+RWeCu3dOWaQJK2dFT+BOoFH+jtd6jhDjC+4H1zRauMkBeuNinoY
Aiw9VFBiESUMgWx/883ZplCLnMmGtBn0pXGFg5hXzAMl+nhMuGJryzT7Itn9
32kUtZcXDcw4heVaBWSDyvYlWUqIRQ/zBByJ65Z6UBhT2Bl5BJMQM1RWkuLj
Lv0G8w3zl61drD0XxAK9Ia+mQV61t0PLEHk1zYjN0/yS2nfnmY1k8kpXjBF8
hzp/YqxP0lSBeKofVttP2uSkvc8L57b+f3vXARbl1XQ30dgiKsQSJX+Mabbk
S2JiTLFFBFFARARFbNgVC0aMURNjiaYaY1cQdpdl6b0rVemKiEovgoAICEjv
5T9z70LQRD8/BTTKPvfJQ3B32X3fc2fOzJ05U9/wYD/4m+1VPqMBtqWnKhUP
w87o76e/lQN7Nc9mIKuk6q4q5DO4bcheUdLAlNkrkKIXvjp9np01rzkUevN2
RX4xzWKjdAfwz46lsEGMjkfgz3GAHXS41jL04X/FFRWqzZLw+oomNh5uq8kF
0E5wdQpPZkr6sJzGrO99z1zMdg+/seFo2J+Osbgd2PiICkmH7anBFVVBs6SH
5Oxd8RF/wOyPWeXSl+njYV1gIpaIgo+6xGcxEwSXJEddUfetIOX8yo4NHbAL
ShMomckRvzLdKSJ+dTWtcBAdydF5LkCLpbzFS/CVGeiETWAqbiJiByo4UZXx
K9GZZLy2+zQhbAXxq4b/wq++Ph5Bsq6Mfi8/ENJdVYQbRxWetfhTjerbz+Jv
gWYDJwkM+Yi/mvkV4WoPCyfnMQG6+BtFhSVVuUWV7y5ygCEdaeAIxF65XjjK
wEnw2UksHmDiduP7csLzv+KKtGo1LJyZpkFiVvEhp9gYhjHPiMx+pI1JuZqp
xl48ArrncdorcaD2ozRKtBeudIhh7md0EbYIuw8x8oaj4RXVtdgvMClw6C8o
meFW8k7VuIyiTN7/VVlr6Zfy+jzrAbOlD/LsrA4ZPI0fNGBzfbnRfe2hUB7d
wDD2YmYEnpE3yoXF5U008viGzevBY/6PAbwK/Q97StLK4kGWZ+B1uX/3g68y
XDkF093ZK4kWfHaC+7iisupP1rjCusLdi9jMvsTMYu1d/pO/9uQkCs76nUX2
AyhBh3gwmX9amDKQ7YtJsglKYICwogqskiqVjetyDkkHdOftDeSKedvNLlLU
zz5J72atb2yfwQ+DK5aPHb7YwTnkRgW7PrHpRTygQCCJT/WSsrl90PWyqtq0
W6W3S6oW/3pu9FLHT1a78M+/+XhEcyvQk8cVZxfr2YwMGvM67ngXZXOQorLK
Gku/1Kik/DtlNRcTb8Oe4M9h55IIpK41bhCIhKzLUvdB4714gydiwKW/Bd9q
lb8CNfrJ+kq/mZZ8iyG8Gr3MsWUAFqNGDeBUpGHLxiO25Bl6tuCqthlXM+/J
X5Gz43mGHy2jX5xiBmzLuEps7hCmi4ugoKXMkj9wB5WMveRYRRDlGVgiAtay
1wyKRg1+O8+fllNQMXwRNSeC0mjv8mvhA/xhcTZ5iM5fXTAtvP1q2sPZK1YR
wTLPomH6tmNWuQJm8NRzdvuDd2ns8IlJLYSVPhtFThCfBO8PCiH4/MROEWUn
dPe0QcKhDfkV+MxQPZu0nFJYlO+FUXAxS9ll3Hb6Qmp2CWgDwmT4DrBrOClQ
04uJ+QGXc8A9hunbyRT8HvQnZDIUuGWjDBwMfj2/6XjE6oOhiJpfVvurWwrh
DN5Kca4NoGt0LGLtn6FfrHen9uE5FE7CJGJXzt7lB5I/SIsqH16faw0vBkL4
BgLGv+fbta2+3OABW4SAHT9Tg+cyp1nf+83ZHYDg/VUm9ghqhJh0w5Fw/Dnd
3QFD51m3lGrgVn5m6Ka1y++jVc4DtS1peIGONTgMiA0MLxWjUghG9fOANyAH
frX2cNgkI4++6qTF1yLXjPcZtcRRa6fvFGPvBwuINVdcUGkNzDusEPbUuau3
QDwQQUzY6AGXgW+EoAlO8HJKAVcZxRccZeB4gFnyyIQ8Npv7KZoTp8gKscau
deUNI/AvCPRSb5aImHQJ3B++VH8tKW9ka/2ITimA1erP4ixc5B7sXG+g1n2O
bll0gC3WfPwn4YLtfz1Bl1q6es+w6EHMWSR/d9/9ANaEotDqfFBOQ0zVd/+U
uuHd971Zap2K5HW5LLOFHB3LysgtNX3PpMZ28Cu8M4xJ8zkg9TPCUPRWF1Nm
nu619SAdukQAHh0C/jUjg57Wc4YYtA1vIs8V+JuDMt7LP4iibHE/zfuK8/dn
k5Lw8n7w5nhD1tr5d73c425xsEUvTjXj89zFZ5JzCst5810TG+Q30sBB/jHk
PtoDV/ym96V6Y6nWTj+wjpav4xJ6Axe/+zQRV9tGQLT+SPiHK51BgcJYagUB
Fy4LLp3qVu/d4uhlv51nh1z/kP1rvWFlO/ruS91ayuOv0//7K7oM/i9Sh9Z/
r9Qa3Goi5+Dmd5AVZrTCQ/M//SXz+JAVO62/0V11FM2FiHeDnyD3pr4dLuku
8SXSRVQX91YTcbLkFZk1ztANXHfb6agi1oaDIOKlaeb9Z1sibmq5QWFxucpb
vGHi+mm2wbDUtscVW7Ci8NcI5BFMBV+7tUscTfM6Z4hhyurq6xGdjV3jgi3T
V0Py4lTzCSSYQ4nHbtOEGt+d4QMEm1iL6AcrnKgaoY0+1f3u6cMT1EdIR//z
m/+P7/PgTwhjCwfHaXkT0wEYZ+iKcCD/TmV5VS04w0vUXCB5QclcZeuZSlIY
qKLuZg0LxbnW2MJBMTlwKPCzCKkePwxsWe2BK1o08ItUavGt4bPIMamJeaBt
7Z8KSg+fMlTPFjx89FKn6lrqx0RoHJ1CydJTHgnn2cgDEEv4izb8ss/eGsRK
0K+lU+mIa2iGxJcoh2NwOq4tIprr1KYhVdCSvLkA7JHSa5EJlB2duMkTdgk3
BbeG3yCWN25LObJ2wlWz0W6peKRu9OnbqI3lQgKrgWe56HWHQ/vNlBSWVmUX
lC9jnVbccOE7ZuaVNTQ0jFnprNBcq9C5/r76qolVtlDTU3TybXA80LDcosrq
mjrENYhzE28UgdOCY/xud1Uw5TQ4Ia4qAqiPV7vSpAxZObTMDj9+dWvr1V72
6u41mBUjgX/ywobf7K52VTFXZhOZQS+5ohdvENtqcgF2W17TMo6pMyHcU3gk
/aXnZPVRk01V872Uja0KX8aTbIiYOGtVMvYqLq9BvAmyasFS1qBVvKulXT9Y
x+CKlg6lGWfu8OX5osiE/PEbPQ45xYHej1nlwjV/QMZen2fTQ1U4xdirsbEx
ObsYPOERxEyem4W4z/LdRfbgVOVVdR+tcobJGmngyE+7vCIzPzV0Kyip+sbk
gtqOs0mZFBvmFlZ8ZsiGCeo8KFv4+KuDcEWpAEteBjDtG+/wuHyWsazX3x+Y
llNi5Z/2Mh3BeLyhZ6swi9o23cIoZ/6t6UXBRBOE+fKz2iZIeTYWmwFB1c5c
9E8wyZRXep9yT+g5Q6TAdLQAHjl1i3NXckPjclf+ISvnA18dR+k+rkrXvtSi
w+yVIpsJ2EdD3Iu4ooT3kvtduqnEiq8IQpNMuZQQN+yx6YUaO84iWLYJTEMg
2Vf9EQc0P4OLFerLqVlM2ezlFJxu6pUIL5CVXw7f98lqt1dmWZLQ0OTTx1zi
G5sav1jvnnDjTkND4+qDVPpIIiQ0FlzaJsXGD7zdHYSr/rOk7y11kvqnpuWU
JmcV877a5Kw7gilmXLFh9g9+3dloe16OFXQlJ7dIJvuDl4xY7PCACsnna1G2
VjKOfJxM3C8psziMlcFsNb3QQ1UEgmrIDtTWHwmD/S+prOb7NDW7JPVmyWnP
xLcWPNR06cdZHcTb2fkLr/asq2uoqKqtrK7Nul2x6Xg47xG+kIj9Vos4RTDR
9Hfbv0qk9kljeH5+jySaKro7veEcdsSvKuYFOcfd4vmkGP6gSR/jT6luJYPv
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
aqnLOEO3/wc/y2U7
         "], {{0, 200}, {200, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> 
         True, Magnification -> Automatic], Selectable -> False], BaseStyle -> 
       "ImageGraphics", ImageSize -> {60., Automatic}, 
       ImageSizeRaw -> {200, 200}, PlotRange -> {{0, 200}, {0, 200}}, 
       ImageMargins -> {{27, 0}, {0, 0}}], 
      StyleBox[
       RowBox[{"KTH/ICT", " ", "-", " ", "Communication", " ", "Systems"}], 
       "Text", FontFamily -> "Arial Narrow", FontSize -> 16, FontWeight -> 
       "Bold", FontColor -> GrayLevel[0.501961]]}}, ColumnAlignments -> Left, 
    ColumnSpacings -> 1.6]], CellMargins -> {{0, 0}, {0, 0}}, Magnification -> 
  1., Background -> GrayLevel[0.99999]],
PageHeaders->{{None, None, None}, {
   Cell[
    TextData[{"KTH/ICT - Communication Systems"}], "PageHeader", FontFamily -> 
    "Arial", FontSize -> 9], None, None}},
PageFooters->{{None, None, None}, {None, 
   Cell[
    TextData[{
      CounterBox["Page"]}], "PageNumber"], None}},
PrintingOptions->{"FacingPages"->False},
TrackCellChangeTimes->True,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell["Modify the definitions below to change the default appearance of all \
cells in a given style. \nMake modifications to any definition using commands \
in the Format menu.", "Text"], 
   Cell[
    CellGroupData[{
      Cell["Notebook Options Settings", "Section"], 
      Cell[
       StyleData["Notebook"], ShowCellBracket -> Automatic]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          StyleData["Title"], FontFamily -> "Arial", FontSize -> 36, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["Subtitle"], FontFamily -> "Arial", FontWeight -> "Bold"], 
         Cell[
          StyleData["Subsubtitle"], FontFamily -> "Arial", FontSize -> 18]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Chapter", "Subsection", 
          CellChangeTimes -> {{3.6182073006504073`*^9, 
           3.6182073204926414`*^9}}], 
         Cell[
          StyleData["Chapter"], FontFamily -> "Arial", FontSize -> 34, 
          FontWeight -> "Plain", FontSlant -> "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
         Cell[
          StyleData["Subchapter"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[
            0.09803921568627451, 0.32941176470588235`, 0.6509803921568628]], 
          FontFamily -> "Arial", FontSize -> 28, FontWeight -> "Plain", 
          FontSlant -> "Plain", 
          FontVariations -> {
           "StrikeThrough" -> False, "Underline" -> False}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          StyleData["Section"], CellDingbat -> None, ShowGroupOpener -> True, 
          FontFamily -> "Arial", FontSize -> 24, FontWeight -> "Bold", 
          FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["Subsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{40., 3.}, {8., 12.}}, FontFamily -> "Arial", 
          FontSize -> 18, FontWeight -> "Bold", FontColor -> GrayLevel[0.3]], 
         Cell[
          StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{53., Inherited}, {2, 10}}, FontFamily -> 
          "Arial", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
          GrayLevel[0.]], 
         Cell[
          StyleData["Subsubsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, MenuSortingValue -> 1400, FontFamily -> "Arial Narrow", 
          FontSize -> 14, FontWeight -> "Bold", FontSlant -> "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
          FontColor -> GrayLevel[0]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Standard", "Subsection"], 
         Cell[
          StyleData["Text"], FontFamily -> "Times"], 
         Cell[
          StyleData["SmallText"], MenuSortingValue -> 1425, FontFamily -> 
          "Times"]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Display", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell["Lists", "Subsubsection"], 
            Cell[
             StyleData["Item"], CellDingbat -> 
             StyleBox["\[FilledCircle]", Alignment -> Baseline, 
               GrayLevel[0.3]], FontFamily -> "Times"], 
            Cell[
             StyleData["ItemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["Subitem"], CellDingbat -> 
             StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
               GrayLevel[0.3]], FontFamily -> "Times"], 
            Cell[
             StyleData["SubitemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["Subsubitem"], CellDingbat -> 
             StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
               GrayLevel[0.5]], FontFamily -> "Times"], 
            Cell[
             StyleData["SubsubitemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["ItemNumbered"], FontFamily -> "Times"], 
            Cell[
             StyleData["SubitemNumbered"], FontFamily -> "Times"], 
            Cell[
             StyleData["SubsubitemNumbered"], FontFamily -> "Times"]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell["Templates", "Subsubsection"], 
            Cell[
             StyleData[
             "SideCaptionArray", StyleDefinitions -> StyleData["Text"]], 
             GridBoxOptions -> {
              GridBoxAlignment -> {"Columns" -> {Left}, "Rows" -> {Center}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}}], 
            Cell[
             StyleData[
             "SideCaption", StyleDefinitions -> StyleData["SmallText"]]]}, 
           Closed]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       StyleData["Input"], ShowCellBracket -> True], 
      Cell[
       StyleData["InputOnly"], ShowCellBracket -> True], 
      Cell[
       StyleData["Code"], ShowCellBracket -> True], 
      Cell[
       StyleData["Output"], ShowCellBracket -> True], 
      Cell[
       StyleData["Message"], ShowCellBracket -> True], 
      Cell[
       StyleData["Print"], ShowCellBracket -> True]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Formulas and Programming", "Section"], 
      Cell[
       StyleData["InlineFormula"]], 
      Cell[
       StyleData["DisplayFormula"], FontFamily -> "Times"], 
      Cell[
       StyleData["DisplayFormulaNumbered"], FontFamily -> "Times"], 
      Cell[
       StyleData["Program"], ShowCellBracket -> True]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Citation Styles", "Section"], 
      Cell[
       StyleData["Reference"]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       TextData[{"Styles for ", 
         StyleBox["Mathematica", FontSlant -> "Italic"], 
         " System\[Hyphen]specific Elements"}], "Section"], 
      Cell[
       CellGroupData[{
         Cell["Default Box Styles", "Subsection"], 
         Cell[
          StyleData["Graphics"], FontFamily -> "Times"], 
         Cell[
          StyleData["Graphics3D"], FontFamily -> "Times"], 
         Cell[
          StyleData["NetworkGraphics"], FontFamily -> "Times"]}, Closed]]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, 2014)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 71, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[654, 25, 103, 4, 81, "Title"],
Cell[760, 31, 187, 7, 42, "Text"],
Cell[CellGroupData[{
Cell[972, 42, 91, 4, 59, "Section"],
Cell[1066, 48, 596, 9, 47, "Text"],
Cell[1665, 59, 222, 4, 29, "Text"],
Cell[1890, 65, 130, 3, 29, "Text"],
Cell[CellGroupData[{
Cell[2045, 72, 105, 7, 41, "Subsection"],
Cell[2153, 81, 71, 0, 29, "Text"],
Cell[CellGroupData[{
Cell[2249, 85, 66, 0, 27, "Item"],
Cell[2318, 87, 63, 0, 27, "Item"],
Cell[CellGroupData[{
Cell[2406, 91, 54, 0, 24, "Subitem"],
Cell[2463, 93, 38, 0, 24, "Subitem"],
Cell[2504, 95, 39, 0, 24, "Subitem"],
Cell[2546, 97, 36, 0, 24, "Subitem"]
}, Open  ]],
Cell[2597, 100, 101, 2, 27, "Item"]
}, Open  ]],
Cell[2713, 105, 277, 5, 29, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3027, 115, 116, 7, 41, "Subsection"],
Cell[3146, 124, 656, 11, 47, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3839, 140, 104, 7, 41, "Subsection"],
Cell[3946, 149, 346, 10, 29, "Text"],
Cell[4295, 161, 258, 4, 29, "Text"],
Cell[4556, 167, 171, 3, 29, "Text"],
Cell[4730, 172, 102, 2, 29, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4869, 179, 110, 7, 41, "Subsection"],
Cell[CellGroupData[{
Cell[5004, 190, 86, 2, 27, "Item"],
Cell[5093, 194, 94, 2, 27, "Item"],
Cell[5190, 198, 117, 3, 27, "Item"],
Cell[5310, 203, 135, 3, 27, "Item"],
Cell[5448, 208, 177, 3, 29, "Item"],
Cell[5628, 213, 187, 4, 29, "Item"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[5876, 224, 74, 4, 45, "Section"],
Cell[CellGroupData[{
Cell[5975, 232, 104, 7, 41, "Subsection"],
Cell[6082, 241, 172, 3, 29, "Text"],
Cell[CellGroupData[{
Cell[6279, 248, 80, 1, 20, "SubitemParagraph"],
Cell[6362, 251, 76, 1, 20, "SubitemParagraph"],
Cell[6441, 254, 68, 1, 20, "SubitemParagraph"],
Cell[6512, 257, 76, 1, 20, "SubitemParagraph"],
Cell[6591, 260, 71, 1, 20, "SubitemParagraph"]
}, Open  ]],
Cell[6677, 264, 170, 4, 29, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6884, 273, 110, 7, 41, "Subsection"],
Cell[6997, 282, 316, 7, 29, "Text"],
Cell[CellGroupData[{
Cell[7338, 293, 163, 10, 31, "Subsubsection"],
Cell[7504, 305, 764, 26, 32, "Text"],
Cell[8271, 333, 643, 21, 29, "DisplayFormula"],
Cell[8917, 356, 242, 8, 30, "Text"],
Cell[9162, 366, 830, 27, 46, "DisplayFormula"],
Cell[9995, 395, 953, 32, 37, "Text"],
Cell[10951, 429, 529, 18, 32, "Text"],
Cell[11483, 449, 469, 18, 31, "Text"],
Cell[11955, 469, 324, 11, 55, "DisplayFormula"],
Cell[12282, 482, 72, 0, 30, "Text"],
Cell[12357, 484, 466, 16, 46, "DisplayFormula"]
}, Closed]],
Cell[CellGroupData[{
Cell[12860, 505, 157, 10, 25, "Subsubsection"],
Cell[13020, 517, 657, 21, 31, "Text"],
Cell[13680, 540, 429, 11, 31, "Text"],
Cell[14112, 553, 588, 17, 50, "Program"],
Cell[14703, 572, 264, 8, 31, "Text"],
Cell[14970, 582, 57, 1, 29, "Text"],
Cell[15030, 585, 207, 7, 29, "Text"],
Cell[15240, 594, 70, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[15335, 599, 676, 18, 63, "Input"],
Cell[16014, 619, 242, 5, 28, "Output"]
}, Open  ]],
Cell[16271, 627, 325, 12, 31, "Text"],
Cell[16599, 641, 357, 10, 28, "Input"],
Cell[16959, 653, 56, 0, 29, "Text"],
Cell[CellGroupData[{
Cell[17040, 657, 96, 2, 31, "Input"],
Cell[17139, 661, 93, 2, 46, "Output"]
}, Open  ]],
Cell[17247, 666, 263, 11, 32, "Text"],
Cell[CellGroupData[{
Cell[17535, 681, 372, 10, 31, "Input"],
Cell[17910, 693, 91, 2, 46, "Output"]
}, Open  ]],
Cell[18016, 698, 36, 0, 30, "Text"],
Cell[18055, 700, 789, 24, 47, "DisplayFormula"],
Cell[18847, 726, 107, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[18979, 735, 470, 13, 31, "Input"],
Cell[19452, 750, 3915, 95, 250, "Output"]
}, Open  ]],
Cell[23382, 848, 310, 11, 32, "Text"],
Cell[23695, 861, 181, 5, 80, "Program"],
Cell[23879, 868, 172, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[24076, 879, 198, 4, 31, "Input"],
Cell[24277, 885, 94, 2, 46, "Output"]
}, Open  ]],
Cell[24386, 890, 108, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[24519, 899, 701, 18, 31, "Input"],
Cell[25223, 919, 3825, 95, 254, "Output"]
}, Open  ]],
Cell[29063, 1017, 57, 1, 30, "Text"],
Cell[29123, 1020, 70, 1, 31, "Input"],
Cell[29196, 1023, 295, 5, 30, "Text"],
Cell[29494, 1030, 424, 13, 31, "Text"],
Cell[29921, 1045, 713, 23, 68, "Input"],
Cell[30637, 1070, 201, 6, 30, "Text"],
Cell[30841, 1078, 54, 1, 31, "Input"],
Cell[30898, 1081, 115, 3, 30, "Text"],
Cell[31016, 1086, 235, 6, 31, "Input"],
Cell[31254, 1094, 73, 0, 30, "Text"],
Cell[31330, 1096, 80, 2, 31, "Input"],
Cell[31413, 1100, 109, 3, 31, "Input"],
Cell[31525, 1105, 55, 0, 30, "Text"],
Cell[31583, 1107, 365, 12, 57, "Input"],
Cell[31951, 1121, 57, 1, 31, "Input"],
Cell[32011, 1124, 168, 3, 30, "Text"],
Cell[32182, 1129, 266, 7, 52, "Input"],
Cell[32451, 1138, 54, 1, 31, "Input"],
Cell[32508, 1141, 78, 2, 46, "Input"],
Cell[32589, 1145, 315, 11, 30, "Text"],
Cell[32907, 1158, 376, 10, 30, "Text"],
Cell[33286, 1170, 125, 3, 31, "Input"],
Cell[33414, 1175, 393, 13, 30, "Text"],
Cell[33810, 1190, 150, 4, 31, "Input"],
Cell[33963, 1196, 131, 3, 30, "Text"],
Cell[34097, 1201, 263, 9, 31, "Input"],
Cell[34363, 1212, 389, 11, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34789, 1228, 165, 10, 31, "Subsubsection"],
Cell[34957, 1240, 758, 26, 32, "Text"],
Cell[35718, 1268, 235, 7, 29, "DisplayFormula"],
Cell[35956, 1277, 283, 8, 30, "Text"],
Cell[36242, 1287, 796, 24, 56, "DisplayFormula"],
Cell[37041, 1313, 1003, 34, 37, "Text"],
Cell[38047, 1349, 529, 18, 32, "Text"],
Cell[38579, 1369, 325, 10, 30, "Text"],
Cell[38907, 1381, 508, 16, 56, "DisplayFormula"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39452, 1402, 159, 10, 31, "Subsubsection"],
Cell[39614, 1414, 524, 16, 31, "Text"],
Cell[40141, 1432, 842, 34, 32, "Text"],
Cell[40986, 1468, 597, 17, 54, "Program"],
Cell[41586, 1487, 57, 1, 30, "Text"],
Cell[41646, 1490, 86, 2, 30, "Text"],
Cell[41735, 1494, 70, 1, 31, "Input"],
Cell[41808, 1497, 350, 10, 52, "Input"],
Cell[42161, 1509, 325, 12, 31, "Text"],
Cell[42489, 1523, 357, 10, 31, "Input"],
Cell[42849, 1535, 105, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[42979, 1544, 96, 2, 31, "Input"],
Cell[43078, 1548, 93, 2, 46, "Output"]
}, Open  ]],
Cell[43186, 1553, 265, 11, 32, "Text"],
Cell[CellGroupData[{
Cell[43476, 1568, 745, 21, 31, "Input"],
Cell[44224, 1591, 91, 2, 46, "Output"]
}, Open  ]],
Cell[44330, 1596, 95, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[44450, 1605, 95, 2, 31, "Input"],
Cell[44548, 1609, 1923, 57, 102, "Output"]
}, Open  ]],
Cell[46486, 1669, 108, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[46619, 1678, 670, 18, 31, "Input"],
Cell[47292, 1698, 3949, 80, 244, "Output"]
}, Open  ]],
Cell[51256, 1781, 32, 0, 30, "Text"],
Cell[51291, 1783, 102, 4, 80, "Program"],
Cell[51396, 1789, 157, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[51578, 1799, 187, 4, 31, "Input"],
Cell[51768, 1805, 92, 2, 46, "Output"]
}, Open  ]],
Cell[51875, 1810, 191, 5, 31, "Input"],
Cell[52069, 1817, 108, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[52202, 1826, 670, 18, 31, "Input"],
Cell[52875, 1846, 6119, 115, 247, "Output"]
}, Open  ]],
Cell[59009, 1964, 57, 1, 30, "Text"],
Cell[59069, 1967, 70, 1, 31, "Input"],
Cell[59142, 1970, 305, 10, 30, "Text"],
Cell[59450, 1982, 50, 0, 30, "Text"],
Cell[59503, 1984, 182, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[59710, 1993, 96, 2, 31, "Input"],
Cell[59809, 1997, 1619, 46, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61465, 2048, 673, 20, 31, "Input"],
Cell[62141, 2070, 2816, 63, 254, "Output"]
}, Open  ]],
Cell[64972, 2136, 640, 24, 32, "Text"],
Cell[65615, 2162, 219, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[65859, 2172, 124, 3, 31, "Input"],
Cell[65986, 2177, 1771, 52, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67794, 2234, 801, 23, 31, "Input"],
Cell[68598, 2259, 3933, 81, 254, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72568, 2345, 800, 23, 31, "Input"],
Cell[73371, 2370, 10932, 196, 254, "Output"]
}, Open  ]],
Cell[84318, 2569, 123, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[84466, 2576, 767, 22, 31, "Input"],
Cell[85236, 2600, 23682, 403, 250, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108955, 3008, 486, 13, 33, "Input"],
Cell[109444, 3023, 38587, 658, 246, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[148092, 3688, 118, 7, 41, "Subsection"],
Cell[CellGroupData[{
Cell[148235, 3699, 146, 10, 31, "Subsubsection"],
Cell[148384, 3711, 384, 12, 30, "Text"],
Cell[148771, 3725, 843, 27, 55, "DisplayFormula"],
Cell[149617, 3754, 141, 6, 30, "Text"],
Cell[149761, 3762, 1043, 35, 55, "DisplayFormula"],
Cell[150807, 3799, 621, 21, 30, "Text"],
Cell[151431, 3822, 484, 15, 65, "DisplayFormula"],
Cell[151918, 3839, 531, 17, 65, "DisplayFormula"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152486, 3861, 147, 10, 31, "Subsubsection"],
Cell[152636, 3873, 595, 17, 30, "Text"],
Cell[153234, 3892, 63, 0, 30, "Text"],
Cell[153300, 3894, 255, 9, 44, "DisplayFormula"],
Cell[153558, 3905, 369, 12, 47, "DisplayFormula"],
Cell[153930, 3919, 681, 24, 60, "DisplayFormula"],
Cell[154614, 3945, 570, 18, 50, "DisplayFormula"],
Cell[155187, 3965, 145, 6, 30, "Text"],
Cell[155335, 3973, 56, 0, 30, "Text"],
Cell[155394, 3975, 70, 1, 31, "Input"],
Cell[155467, 3978, 182, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[155674, 3987, 100, 2, 31, "Input"],
Cell[155777, 3991, 70, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155884, 3997, 116, 2, 31, "Input"],
Cell[156003, 4001, 104, 3, 51, "Output"]
}, Open  ]],
Cell[156122, 4007, 206, 6, 50, "Input"],
Cell[CellGroupData[{
Cell[156353, 4017, 181, 5, 31, "Input"],
Cell[156537, 4024, 89, 1, 31, "Output"]
}, Open  ]],
Cell[156641, 4028, 94, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[156760, 4034, 483, 12, 68, "Input"],
Cell[157246, 4048, 150, 4, 74, "Output"]
}, Open  ]],
Cell[157411, 4055, 414, 16, 31, "Text"],
Cell[CellGroupData[{
Cell[157850, 4075, 180, 5, 31, "Input"],
Cell[158033, 4082, 168, 2, 31, "Output"]
}, Open  ]],
Cell[158216, 4087, 42, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[158283, 4091, 124, 3, 31, "Input"],
Cell[158410, 4096, 136, 2, 31, "Output"]
}, Open  ]],
Cell[158561, 4101, 383, 12, 30, "Text"],
Cell[CellGroupData[{
Cell[158969, 4117, 99, 2, 46, "Input"],
Cell[159071, 4121, 107, 2, 31, "Output"]
}, Open  ]],
Cell[159193, 4126, 140, 6, 30, "Text"],
Cell[159336, 4134, 124, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[159485, 4141, 552, 16, 31, "Input"],
Cell[160040, 4159, 31228, 534, 247, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[191341, 4701, 79, 4, 45, "Section"],
Cell[191423, 4707, 283, 5, 47, "Text"],
Cell[CellGroupData[{
Cell[191731, 4716, 89, 1, 41, "Subsection"],
Cell[191823, 4719, 393, 6, 47, "Text"],
Cell[192219, 4727, 391, 10, 50, "Text"],
Cell[192613, 4739, 6759, 187, 127, "Text"],
Cell[CellGroupData[{
Cell[199397, 4930, 54, 1, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[199476, 4935, 876, 30, 51, "Item"],
Cell[200355, 4967, 423, 14, 27, "ItemParagraph"],
Cell[200781, 4983, 72, 0, 20, "ItemParagraph"],
Cell[200856, 4985, 669, 24, 25, "Subitem"],
Cell[201528, 5011, 184, 4, 27, "Item"],
Cell[201715, 5017, 323, 11, 24, "Subitem"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[202087, 5034, 63, 1, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[202175, 5039, 176, 6, 27, "Item"],
Cell[202354, 5047, 69, 0, 27, "Item"]
}, Open  ]],
Cell[202438, 5050, 94, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[202557, 5055, 10018, 268, 557, "Input"],
Cell[212578, 5325, 18816, 319, 263, "Output"],
Cell[231397, 5646, 17319, 294, 262, "Output"],
Cell[248719, 5942, 44304, 735, 262, "Output"],
Cell[293026, 6679, 36634, 609, 262, "Output"],
Cell[329663, 7290, 23459, 392, 253, "Output"],
Cell[353125, 7684, 20718, 347, 253, "Output"],
Cell[373846, 8033, 7812, 135, 262, "Output"],
Cell[381661, 8170, 9042, 155, 262, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
